{
	"Z_jetty-ServletHolder-doStart": {
		"longName": "ServletHolder::doStart()",
		"methodName": "doStart",
		"repoShort": "eclipse/jetty.project",
		"file": "Z_jetty-ServletHolder-doStart",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_jetty-StdErrLog-escape": {
		"longName": "StdErrLog::escape(StringBuilder builder, String string)",
		"methodName": "escape",
		"repoShort": "eclipse/jetty.project",
		"file": "Z_jetty-StdErrLog-escape",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-ConcurrentMergeScheduler-sync": {
		"longName": "ConcurrentMergeScheduler::sync()",
		"methodName": "sync",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-ConcurrentMergeScheduler-sync",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-ConcurrentMergeScheduler-updateMergeThreads": {
		"longName": "ConcurrentMergeScheduler::updateMergeThreads()",
		"methodName": "updateMergeThreads",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-ConcurrentMergeScheduler-updateMergeThreads",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-ConstantScoreQuery-rewrite": {
		"longName": "ConstantScoreQuery::rewrite(IndexReader reader)",
		"methodName": "rewrite",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-ConstantScoreQuery-rewrite",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-Field-tokenStream": {
		"longName": "Field::tokenStream(Analyzer analyzer, TokenStream reuse)",
		"methodName": "tokenStream",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-Field-tokenStream",
		"historyShort": [
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-IndexWriter-shutdown": {
		"longName": "IndexWriter::shutdown()",
		"methodName": "shutdown",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-IndexWriter-shutdown",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange"
		]
	},
	"Z_lucene-solr-IndexWriter-writeSomeDocValuesUpdates": {
		"longName": "IndexWriter::writeSomeDocValuesUpdates()",
		"methodName": "writeSomeDocValuesUpdates",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-IndexWriter-writeSomeDocValuesUpdates",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-MemoryIndex-keywordTokenStream": {
		"longName": "MemoryIndex::keywordTokenStream(Collection<T> keywords)",
		"methodName": "keywordTokenStream",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-MemoryIndex-keywordTokenStream",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-MemoryIndex-storeDocValues": {
		"longName": "MemoryIndex::storeDocValues(Info info, DocValuesType docValuesType, Object docValuesValue)",
		"methodName": "storeDocValues",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-MemoryIndex-storeDocValues",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-QueryParserBase-addClause": {
		"longName": "QueryParserBase::addClause(List<BooleanClause> clauses, int conj, int mods, Query q)",
		"methodName": "addClause",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-QueryParserBase-addClause",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-QueryParserBase-newRangeQuery": {
		"longName": "QueryParserBase::newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive)",
		"methodName": "newRangeQuery",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-QueryParserBase-newRangeQuery",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ymovefromfile",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_mockito-AdditionalMatchers-geq": {
		"longName": "AdditionalMatchers::geq(double value)",
		"methodName": "geq",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-AdditionalMatchers-geq",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymovefromfile",
			"Yintroduced"
		]
	},
	"Z_mockito-AdditionalMatchers-gt": {
		"longName": "AdditionalMatchers::gt(T value)",
		"methodName": "gt",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-AdditionalMatchers-gt",
		"historyShort": [
			"Yparameterchange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymovefromfile",
			"Yintroduced"
		]
	},
	"Z_mockito-InvocationContainerImpl-getStubbingsDescending": {
		"longName": "InvocationContainerImpl::getStubbingsDescending()",
		"methodName": "getStubbingsDescending",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-InvocationContainerImpl-getStubbingsDescending",
		"historyShort": [
			"Yrename",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_mockito-InvocationsFinder-findPreviousVerifiedInOrder": {
		"longName": "InvocationsFinder::findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context)",
		"methodName": "findPreviousVerifiedInOrder",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-InvocationsFinder-findPreviousVerifiedInOrder",
		"historyShort": [
			"Ymodifierchange",
			"Yfilerename",
			"Yreturntypechange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_mockito-MatchersBinder-bindMatchers": {
		"longName": "MatchersBinder::bindMatchers(ArgumentMatcherStorage argumentMatcherStorage, Invocation invocation)",
		"methodName": "bindMatchers",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-MatchersBinder-bindMatchers",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Yparameterchange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_mockito-PluginLoader-loadPlugin": {
		"longName": "PluginLoader::loadPlugin(Class<PreferredType> preferredPluginType, Class<AlternateType> alternatePluginType)",
		"methodName": "loadPlugin",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-PluginLoader-loadPlugin",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_mockito-ReturnsArgumentAt-answer": {
		"longName": "ReturnsArgumentAt::answer(InvocationOnMock invocation)",
		"methodName": "answer",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-ReturnsArgumentAt-answer",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_mockito-StringUtil-join": {
		"longName": "StringUtil::join(String start, String linePrefix, Collection<?> lines)",
		"methodName": "join",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-StringUtil-join",
		"historyShort": [
			"Ymultichange",
			"Ymovefromfile",
			"Yparameterchange",
			"Ymultichange",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_mockito-StubberImpl-doNothing": {
		"longName": "StubberImpl::doNothing()",
		"methodName": "doNothing",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-StubberImpl-doNothing",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Yreturntypechange",
			"Yintroduced"
		]
	},
	"Z_mockito-VerificationStartedNotifier-notifyVerificationStarted": {
		"longName": "VerificationStartedNotifier::notifyVerificationStarted(List<VerificationStartedListener> listeners, MockingDetails originalMockingDetails)",
		"methodName": "notifyVerificationStarted",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-VerificationStartedNotifier-notifyVerificationStarted",
		"historyShort": [
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_pmd-ASTConditionalExpression-isTernary": {
		"longName": "ASTConditionalExpression::isTernary()",
		"methodName": "isTernary",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-ASTConditionalExpression-isTernary",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymovefromfile",
			"Yintroduced"
		]
	},
	"Z_pmd-AbstractJavaRule-visit": {
		"longName": "AbstractJavaRule::visit(ASTArgumentList node, Object data)",
		"methodName": "visit",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-AbstractJavaRule-visit",
		"historyShort": [
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_pmd-ClassTypeResolver-visit": {
		"longName": "ClassTypeResolver::visit(ASTCompilationUnit node, Object data)",
		"methodName": "visit",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-ClassTypeResolver-visit",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_pmd-CommentUtil-javadocContentAfter": {
		"longName": "CommentUtil::javadocContentAfter(String text, int position)",
		"methodName": "javadocContentAfter",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-CommentUtil-javadocContentAfter",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_pmd-FormalComment-findJavadocs": {
		"longName": "FormalComment::findJavadocs()",
		"methodName": "findJavadocs",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-FormalComment-findJavadocs",
		"historyShort": [
			"Ymultichange",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_pmd-JUnitTestsShouldIncludeAssertRule-visit": {
		"longName": "JUnitTestsShouldIncludeAssertRule::visit(ASTClassOrInterfaceDeclaration node, Object data)",
		"methodName": "visit",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-JUnitTestsShouldIncludeAssertRule-visit",
		"historyShort": [
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_pmd-JavaParserVisitorAdapter-visit": {
		"longName": "JavaParserVisitorAdapter::visit(ASTNameList node, Object data)",
		"methodName": "visit",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-JavaParserVisitorAdapter-visit",
		"historyShort": [
			"Yfilerename",
			"Yfilerename",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_pmd-LocalScope-getVariableDeclarations": {
		"longName": "LocalScope::getVariableDeclarations()",
		"methodName": "getVariableDeclarations",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-LocalScope-getVariableDeclarations",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yreturntypechange",
			"Ymovefromfile",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_pmd-SimplifyBooleanReturnsRule-terminatesInBooleanLiteral": {
		"longName": "SimplifyBooleanReturnsRule::terminatesInBooleanLiteral(Node node)",
		"methodName": "terminatesInBooleanLiteral",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-SimplifyBooleanReturnsRule-terminatesInBooleanLiteral",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yparameterchange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_pmd-SourceFileScope-getSubTypes": {
		"longName": "SourceFileScope::getSubTypes(String qualifyingName, Scope subType)",
		"methodName": "getSubTypes",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-SourceFileScope-getSubTypes",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_spring-boot-ConfigurationPropertiesBinder-getBindHandler": {
		"longName": "ConfigurationPropertiesBinder::getBindHandler(ConfigurationProperties annotation, List<Validator> validators)",
		"methodName": "getBindHandler",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-ConfigurationPropertiesBinder-getBindHandler",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ymovefromfile",
			"Ybodychange"
		]
	},
	"Z_spring-boot-DefaultErrorAttributes-addErrorMessage": {
		"longName": "DefaultErrorAttributes::addErrorMessage(Map<String, Object> errorAttributes, Throwable error)",
		"methodName": "addErrorMessage",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-DefaultErrorAttributes-addErrorMessage",
		"historyShort": [
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-ErrorPageRegistrarBeanPostProcessor-getRegistrars": {
		"longName": "ErrorPageRegistrarBeanPostProcessor::getRegistrars()",
		"methodName": "getRegistrars",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-ErrorPageRegistrarBeanPostProcessor-getRegistrars",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_spring-boot-JettyServletWebServerFactory-addDefaultServlet": {
		"longName": "JettyServletWebServerFactory::addDefaultServlet(WebAppContext context)",
		"methodName": "addDefaultServlet",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-JettyServletWebServerFactory-addDefaultServlet",
		"historyShort": [
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-JsonParserFactory-getJsonParser": {
		"longName": "JsonParserFactory::getJsonParser()",
		"methodName": "getJsonParser",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-JsonParserFactory-getJsonParser",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-ServletWebServerApplicationContext-prepareWebApplicationContext": {
		"longName": "ServletWebServerApplicationContext::prepareWebApplicationContext(ServletContext servletContext)",
		"methodName": "prepareWebApplicationContext",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-ServletWebServerApplicationContext-prepareWebApplicationContext",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-SpringApplication-getBeanDefinitionRegistry": {
		"longName": "SpringApplication::getBeanDefinitionRegistry(ApplicationContext context)",
		"methodName": "getBeanDefinitionRegistry",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-SpringApplication-getBeanDefinitionRegistry",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-StaticResourceJars-addUrlConnection": {
		"longName": "StaticResourceJars::addUrlConnection(List<URL> urls, URL url, URLConnection connection)",
		"methodName": "addUrlConnection",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-StaticResourceJars-addUrlConnection",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-TomcatDataSourcePoolMetadata-getMin": {
		"longName": "TomcatDataSourcePoolMetadata::getMin()",
		"methodName": "getMin",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-TomcatDataSourcePoolMetadata-getMin",
		"historyShort": [
			"Yfilerename",
			"Ymultichange",
			"Yfilerename",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-UndertowWebServer-getPortFromChannel": {
		"longName": "UndertowWebServer::getPortFromChannel(BoundChannel channel)",
		"methodName": "getPortFromChannel",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-UndertowWebServer-getPortFromChannel",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"checkstyle-Checker-fireErrors": {
		"longName": "Checker::fireErrors(String fileName, SortedSet<LocalizedMessage> errors)",
		"methodName": "fireErrors",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-Checker-fireErrors",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yparameterchange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-Checker-process": {
		"longName": "Checker::process(List<File> files)",
		"methodName": "process",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-Checker-process",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"checkstyle-CommonUtils-createPattern": {
		"longName": "CommonUtils::createPattern(String pattern, int flags)",
		"methodName": "createPattern",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-CommonUtils-createPattern",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymovefromfile",
			"Yfilerename",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yexceptionschange",
			"Ymultichange",
			"Ybodychange",
			"Ymovefromfile",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-FinalLocalVariableCheck-visitToken": {
		"longName": "FinalLocalVariableCheck::visitToken(DetailAST ast)",
		"methodName": "visitToken",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-FinalLocalVariableCheck-visitToken",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-JavadocMethodCheck-checkThrowsTags": {
		"longName": "JavadocMethodCheck::checkThrowsTags(List<JavadocTag> tags, List<ExceptionInfo> throwsList, boolean reportExpectedTags)",
		"methodName": "checkThrowsTags",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-JavadocMethodCheck-checkThrowsTags",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-Main-main": {
		"longName": "Main::main(String args)",
		"methodName": "main",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-Main-main",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Yparameterchange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-TreeWalker-processFiltered": {
		"longName": "TreeWalker::processFiltered(File file, FileText fileText)",
		"methodName": "processFiltered",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-TreeWalker-processFiltered",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-WhitespaceAroundCheck-getAcceptableTokens": {
		"longName": "WhitespaceAroundCheck::getAcceptableTokens()",
		"methodName": "getAcceptableTokens",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-WhitespaceAroundCheck-getAcceptableTokens",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-WhitespaceAroundCheck-isNotRelevantSituation": {
		"longName": "WhitespaceAroundCheck::isNotRelevantSituation(DetailAST ast, int currentType)",
		"methodName": "isNotRelevantSituation",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-WhitespaceAroundCheck-isNotRelevantSituation",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-WhitespaceAroundCheck-shouldCheckSeparationFromNextToken": {
		"longName": "WhitespaceAroundCheck::shouldCheckSeparationFromNextToken(DetailAST ast, char nextChar)",
		"methodName": "shouldCheckSeparationFromNextToken",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-WhitespaceAroundCheck-shouldCheckSeparationFromNextToken",
		"historyShort": [
			"Ybodychange",
			"Yintroduced"
		]
	},
	"commons-lang-DateUtils-modify": {
		"longName": "DateUtils::modify(Calendar val, int field, ModifyType modType)",
		"methodName": "modify",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-DateUtils-modify",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"commons-lang-DurationFormatUtils-formatPeriod": {
		"longName": "DurationFormatUtils::formatPeriod(long startMillis, long endMillis, String format, boolean padWithZeros, TimeZone timezone)",
		"methodName": "formatPeriod",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-DurationFormatUtils-formatPeriod",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"commons-lang-EqualsBuilder-reflectionAppend": {
		"longName": "EqualsBuilder::reflectionAppend(Object lhs, Object rhs)",
		"methodName": "reflectionAppend",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-EqualsBuilder-reflectionAppend",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yparameterchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"commons-lang-FastDatePrinter-parsePattern": {
		"longName": "FastDatePrinter::parsePattern()",
		"methodName": "parsePattern",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-FastDatePrinter-parsePattern",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"commons-lang-LocaleUtils-toLocale": {
		"longName": "LocaleUtils::toLocale(String str)",
		"methodName": "toLocale",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-LocaleUtils-toLocale",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"commons-lang-NumberUtils-createNumber": {
		"longName": "NumberUtils::createNumber(String str)",
		"methodName": "createNumber",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-NumberUtils-createNumber",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"commons-lang-NumberUtils-isCreatable": {
		"longName": "NumberUtils::isCreatable(String str)",
		"methodName": "isCreatable",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-NumberUtils-isCreatable",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"commons-lang-NumberUtils-isNumber": {
		"longName": "NumberUtils::isNumber(String str)",
		"methodName": "isNumber",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-NumberUtils-isNumber",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"commons-lang-RandomStringUtils-random": {
		"longName": "RandomStringUtils::random(int count, int start, int end, boolean letters, boolean numbers, char[] chars, Random random)",
		"methodName": "random",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-RandomStringUtils-random",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"commons-lang-StrSubstitutor-substitute": {
		"longName": "StrSubstitutor::substitute(StrBuilder buf, int offset, int length, List<String> priorVariables)",
		"methodName": "substitute",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-StrSubstitutor-substitute",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"flink-CheckpointCoordinator-receiveAcknowledgeMessage": {
		"longName": "CheckpointCoordinator::receiveAcknowledgeMessage(AcknowledgeCheckpoint message)",
		"methodName": "receiveAcknowledgeMessage",
		"repoShort": "apache/flink",
		"file": "flink-CheckpointCoordinator-receiveAcknowledgeMessage",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"flink-ConnectedStreams-map": {
		"longName": "ConnectedStreams::map(CoMapFunction<IN1, IN2, R> coMapper)",
		"methodName": "map",
		"repoShort": "apache/flink",
		"file": "flink-ConnectedStreams-map",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Yintroduced"
		]
	},
	"flink-ContinuousFileMonitoringFunction-close": {
		"longName": "ContinuousFileMonitoringFunction::close()",
		"methodName": "close",
		"repoShort": "apache/flink",
		"file": "flink-ContinuousFileMonitoringFunction-close",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"flink-DataStream-filter": {
		"longName": "DataStream::filter(FilterFunction<T> filter)",
		"methodName": "filter",
		"repoShort": "apache/flink",
		"file": "flink-DataStream-filter",
		"historyShort": [
			"Yreturntypechange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Yreturntypechange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yreturntypechange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"flink-DispatcherRestEndpoint-initializeHandlers": {
		"longName": "DispatcherRestEndpoint::initializeHandlers(CompletableFuture<String> restAddressFuture)",
		"methodName": "initializeHandlers",
		"repoShort": "apache/flink",
		"file": "flink-DispatcherRestEndpoint-initializeHandlers",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"flink-FileSystem-getUnguardedFileSystem": {
		"longName": "FileSystem::getUnguardedFileSystem(URI fsUri)",
		"methodName": "getUnguardedFileSystem",
		"repoShort": "apache/flink",
		"file": "flink-FileSystem-getUnguardedFileSystem",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yrename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename"
		]
	},
	"flink-KryoSerializer-checkKryoInitialized": {
		"longName": "KryoSerializer::checkKryoInitialized()",
		"methodName": "checkKryoInitialized",
		"repoShort": "apache/flink",
		"file": "flink-KryoSerializer-checkKryoInitialized",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Yintroduced"
		]
	},
	"flink-LocatableInputSplitAssigner-getNextInputSplit": {
		"longName": "LocatableInputSplitAssigner::getNextInputSplit(String host, int taskId)",
		"methodName": "getNextInputSplit",
		"repoShort": "apache/flink",
		"file": "flink-LocatableInputSplitAssigner-getNextInputSplit",
		"historyShort": [
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Yfilerename",
			"Ymovefromfile",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"flink-PojoSerializer-deserialize": {
		"longName": "PojoSerializer::deserialize(DataInputView source)",
		"methodName": "deserialize",
		"repoShort": "apache/flink",
		"file": "flink-PojoSerializer-deserialize",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"flink-RemoteStreamEnvironment-executeRemotely": {
		"longName": "RemoteStreamEnvironment::executeRemotely(StreamGraph streamGraph, List<URL> jarFiles)",
		"methodName": "executeRemotely",
		"repoShort": "apache/flink",
		"file": "flink-RemoteStreamEnvironment-executeRemotely",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymodifierchange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"hibernate-orm-AnnotationBinder-bindClass": {
		"longName": "AnnotationBinder::bindClass(XClass clazzToProcess, Map<XClass, InheritanceState> inheritanceStatePerClass, MetadataBuildingContext context)",
		"methodName": "bindClass",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-AnnotationBinder-bindClass",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-CollectionBinder-bind": {
		"longName": "CollectionBinder::bind()",
		"methodName": "bind",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-CollectionBinder-bind",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-DefaultRefreshEventListener-onRefresh": {
		"longName": "DefaultRefreshEventListener::onRefresh(RefreshEvent event, Map refreshedAlready)",
		"methodName": "onRefresh",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-DefaultRefreshEventListener-onRefresh",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-QueryBinder-bindNativeQuery": {
		"longName": "QueryBinder::bindNativeQuery(NamedNativeQuery queryAnn, MetadataBuildingContext context, boolean isDefault)",
		"methodName": "bindNativeQuery",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-QueryBinder-bindNativeQuery",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-QueryBinder-bindNativeQuery2": {
		"longName": "QueryBinder::bindNativeQuery(org.hibernate.annotations.NamedNativeQuery queryAnn, MetadataBuildingContext context)",
		"methodName": "bindNativeQuery",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-QueryBinder-bindNativeQuery2",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-QueryBinder-bindQuery": {
		"longName": "QueryBinder::bindQuery(NamedQuery queryAnn, MetadataBuildingContext context, boolean isDefault)",
		"methodName": "bindQuery",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-QueryBinder-bindQuery",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-QueryBinder-bindQuery2": {
		"longName": "QueryBinder::bindQuery(org.hibernate.annotations.NamedQuery queryAnn, MetadataBuildingContext context)",
		"methodName": "bindQuery",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-QueryBinder-bindQuery2",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-RevisionInfoConfiguration-configure": {
		"longName": "RevisionInfoConfiguration::configure(MetadataImplementor metadata, ReflectionManager reflectionManager)",
		"methodName": "configure",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-RevisionInfoConfiguration-configure",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-SessionFactoryBuilderImpl-unwrap": {
		"longName": "SessionFactoryBuilderImpl::unwrap(Class<T> type)",
		"methodName": "unwrap",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-SessionFactoryBuilderImpl-unwrap",
		"historyShort": [
			"Yintroduced"
		]
	},
	"hibernate-orm-SimpleValue-buildAttributeConverterTypeAdapter": {
		"longName": "SimpleValue::buildAttributeConverterTypeAdapter()",
		"methodName": "buildAttributeConverterTypeAdapter",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-SimpleValue-buildAttributeConverterTypeAdapter",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"javaparser-Difference-apply": {
		"longName": "Difference::apply()",
		"methodName": "apply",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-Difference-apply",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"javaparser-Difference-applyRemovedDiffElement": {
		"longName": "Difference::applyRemovedDiffElement(RemovedGroup removedGroup, Removed removed, TextElement originalElement, boolean originalElementIsChild, boolean originalElementIsToken)",
		"methodName": "applyRemovedDiffElement",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-Difference-applyRemovedDiffElement",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"javaparser-JavaParserFacade-convertToUsage": {
		"longName": "JavaParserFacade::convertToUsage(com.github.javaparser.ast.type.Type type, Context context)",
		"methodName": "convertToUsage",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-JavaParserFacade-convertToUsage",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymodifierchange",
			"Ymodifierchange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ymodifierchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Yintroduced"
		]
	},
	"javaparser-JavaParserFacade-getTypeConcrete": {
		"longName": "JavaParserFacade::getTypeConcrete(Node node, boolean solveLambdas)",
		"methodName": "getTypeConcrete",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-JavaParserFacade-getTypeConcrete",
		"historyShort": [
			"Yfilerename",
			"Yreturntypechange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"javaparser-LambdaExprContext-solveSymbolAsValue": {
		"longName": "LambdaExprContext::solveSymbolAsValue(String name, TypeSolver typeSolver)",
		"methodName": "solveSymbolAsValue",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-LambdaExprContext-solveSymbolAsValue",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"javaparser-MethodCallExprContext-solveMethod": {
		"longName": "MethodCallExprContext::solveMethod(String name, List<ResolvedType> argumentsTypes, boolean staticOnly, TypeSolver typeSolver)",
		"methodName": "solveMethod",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-MethodCallExprContext-solveMethod",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"javaparser-MethodCallExprContext-solveMethodAsUsage": {
		"longName": "MethodCallExprContext::solveMethodAsUsage(String name, List<ResolvedType> argumentsTypes, TypeSolver typeSolver)",
		"methodName": "solveMethodAsUsage",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-MethodCallExprContext-solveMethodAsUsage",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"javaparser-MethodResolutionLogic-isApplicable": {
		"longName": "MethodResolutionLogic::isApplicable(ResolvedMethodDeclaration method, String name, List<ResolvedType> argumentsTypes, TypeSolver typeSolver, boolean withWildcardTolerance)",
		"methodName": "isApplicable",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-MethodResolutionLogic-isApplicable",
		"historyShort": [
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"javaparser-SourceFileInfoExtractor-solve": {
		"longName": "SourceFileInfoExtractor::solve(Node node)",
		"methodName": "solve",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-SourceFileInfoExtractor-solve",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"javaparser-VisitorAdapter-visit": {
		"longName": "VoidVisitorAdapter::visit(MethodDeclaration n, A arg)",
		"methodName": "visit",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-VisitorAdapter-visit",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"jgit-CommitCommand-call": {
		"longName": "CommitCommand::call()",
		"methodName": "call",
		"repoShort": "eclipse/jgit",
		"file": "jgit-CommitCommand-call",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-IndexDiff-diff": {
		"longName": "IndexDiff::diff(ProgressMonitor monitor, int estWorkTreeSize, int estIndexSize, String title)",
		"methodName": "diff",
		"repoShort": "eclipse/jgit",
		"file": "jgit-IndexDiff-diff",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-MergeCommand-call": {
		"longName": "MergeCommand::call()",
		"methodName": "call",
		"repoShort": "eclipse/jgit",
		"file": "jgit-MergeCommand-call",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-PackWriter-findObjectsToPack": {
		"longName": "PackWriter::findObjectsToPack(ProgressMonitor countingMonitor, ObjectWalk walker, Set<? extends ObjectId> want, Set<? extends ObjectId> have, Set<? extends ObjectId> noBitmaps)",
		"methodName": "findObjectsToPack",
		"repoShort": "eclipse/jgit",
		"file": "jgit-PackWriter-findObjectsToPack",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"jgit-PackWriter-writePack": {
		"longName": "PackWriter::writePack(ProgressMonitor compressMonitor, ProgressMonitor writeMonitor, OutputStream packStream)",
		"methodName": "writePack",
		"repoShort": "eclipse/jgit",
		"file": "jgit-PackWriter-writePack",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-PullCommand-call": {
		"longName": "PullCommand::call()",
		"methodName": "call",
		"repoShort": "eclipse/jgit",
		"file": "jgit-PullCommand-call",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yexceptionschange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-RebaseCommand-call": {
		"longName": "RebaseCommand::call()",
		"methodName": "call",
		"repoShort": "eclipse/jgit",
		"file": "jgit-RebaseCommand-call",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-ReceivePack-getLockMessageProcessName": {
		"longName": "ReceivePack::getLockMessageProcessName()",
		"methodName": "getLockMessageProcessName",
		"repoShort": "eclipse/jgit",
		"file": "jgit-ReceivePack-getLockMessageProcessName",
		"historyShort": [
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-RepoCommand-call": {
		"longName": "RepoCommand::call()",
		"methodName": "call",
		"repoShort": "eclipse/jgit",
		"file": "jgit-RepoCommand-call",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-UploadPack-sendPack": {
		"longName": "UploadPack::sendPack(boolean sideband, PackStatistics.Accumulator accumulator, Collection<Ref> allTags, List<ObjectId> unshallowCommits)",
		"methodName": "sendPack",
		"repoShort": "eclipse/jgit",
		"file": "jgit-UploadPack-sendPack",
		"historyShort": [
			"Yparameterchange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"junit4-BlockJUnit4ClassRunner-describeChild": {
		"longName": "BlockJUnit4ClassRunner::describeChild(FrameworkMethod method)",
		"methodName": "describeChild",
		"repoShort": "junit-team/junit4",
		"file": "junit4-BlockJUnit4ClassRunner-describeChild",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymovefromfile",
			"Ybodychange",
			"Yfilerename",
			"Yparameterchange",
			"Yrename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"junit4-BlockJUnit4ClassRunner-evaluate": {
		"longName": "BlockJUnit4ClassRunner::runChild$Statement$Statement$Statement::evaluate()",
		"methodName": "evaluate",
		"repoShort": "junit-team/junit4",
		"file": "junit4-BlockJUnit4ClassRunner-evaluate",
		"historyShort": [
			"Yintroduced"
		]
	},
	"junit4-BlockJUnit4ClassRunner-methodBlock": {
		"longName": "BlockJUnit4ClassRunner::methodBlock(FrameworkMethod method)",
		"methodName": "methodBlock",
		"repoShort": "junit-team/junit4",
		"file": "junit4-BlockJUnit4ClassRunner-methodBlock",
		"historyShort": [
			"Ymultichange",
			"Ymodifierchange",
			"Ymodifierchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ymovefromfile",
			"Ymodifierchange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yrename",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit4-BlockJUnit4ClassRunner-possiblyExpectingExceptions": {
		"longName": "BlockJUnit4ClassRunner::possiblyExpectingExceptions(FrameworkMethod method, Object test, Statement next)",
		"methodName": "possiblyExpectingExceptions",
		"repoShort": "junit-team/junit4",
		"file": "junit4-BlockJUnit4ClassRunner-possiblyExpectingExceptions",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymovefromfile",
			"Ymodifierchange",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yreturntypechange",
			"Yintroduced"
		]
	},
	"junit4-BlockJUnit4ClassRunner-runChild": {
		"longName": "BlockJUnit4ClassRunner::runChild(FrameworkMethod method, RunNotifier notifier)",
		"methodName": "runChild",
		"repoShort": "junit-team/junit4",
		"file": "junit4-BlockJUnit4ClassRunner-runChild",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymodifierchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Yparameterchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yrename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"junit4-BlockJUnit4ClassRunner-withPotentialTimeout": {
		"longName": "BlockJUnit4ClassRunner::withPotentialTimeout(FrameworkMethod method, Object test, Statement next)",
		"methodName": "withPotentialTimeout",
		"repoShort": "junit-team/junit4",
		"file": "junit4-BlockJUnit4ClassRunner-withPotentialTimeout",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymovefromfile",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit4-Parameterized-createRunners": {
		"longName": "Parameterized$RunnersFactory::createRunners()",
		"methodName": "createRunners",
		"repoShort": "junit-team/junit4",
		"file": "junit4-Parameterized-createRunners",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit4-Parameterized-createRunnersForParameters": {
		"longName": "Parameterized$RunnersFactory::createRunnersForParameters(Iterable<Object> allParameters, String namePattern, ParametersRunnerFactory runnerFactory)",
		"methodName": "createRunnersForParameters",
		"repoShort": "junit-team/junit4",
		"file": "junit4-Parameterized-createRunnersForParameters",
		"historyShort": [
			"Ybodychange",
			"Yexceptionschange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit4-ParentRunner-applyValidators": {
		"longName": "ParentRunner::applyValidators(List<Throwable> errors)",
		"methodName": "applyValidators",
		"repoShort": "junit-team/junit4",
		"file": "junit4-ParentRunner-applyValidators",
		"historyShort": [
			"Yintroduced"
		]
	},
	"junit4-Version-id": {
		"longName": "Version::id()",
		"methodName": "id",
		"repoShort": "junit-team/junit4",
		"file": "junit4-Version-id",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"junit5-AvailableOptions-toCommandLineOptions": {
		"longName": "AvailableOptions::toCommandLineOptions(OptionSet detectedOptions)",
		"methodName": "toCommandLineOptions",
		"repoShort": "junit-team/junit5",
		"file": "junit5-AvailableOptions-toCommandLineOptions",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-ClassTestDescriptor-invokeBeforeAllMethods": {
		"longName": "ClassTestDescriptor::invokeBeforeAllMethods(JupiterEngineExecutionContext context)",
		"methodName": "invokeBeforeAllMethods",
		"repoShort": "junit-team/junit5",
		"file": "junit5-ClassTestDescriptor-invokeBeforeAllMethods",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"junit5-ClassTestDescriptor-prepare": {
		"longName": "ClassTestDescriptor::prepare(JupiterEngineExecutionContext context)",
		"methodName": "prepare",
		"repoShort": "junit-team/junit5",
		"file": "junit5-ClassTestDescriptor-prepare",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-DefaultLauncher-discover": {
		"longName": "DefaultLauncher::discover(LauncherDiscoveryRequest discoveryRequest)",
		"methodName": "discover",
		"repoShort": "junit-team/junit5",
		"file": "junit5-DefaultLauncher-discover",
		"historyShort": [
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yparameterchange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yrename",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-DefaultLauncher-discoverRoot": {
		"longName": "DefaultLauncher::discoverRoot(LauncherDiscoveryRequest discoveryRequest, String phase)",
		"methodName": "discoverRoot",
		"repoShort": "junit-team/junit5",
		"file": "junit5-DefaultLauncher-discoverRoot",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yrename",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-DefaultLauncher-execute": {
		"longName": "DefaultLauncher::execute(Root root, ConfigurationParameters configurationParameters, TestExecutionListener listeners)",
		"methodName": "execute",
		"repoShort": "junit-team/junit5",
		"file": "junit5-DefaultLauncher-execute",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yexceptionschange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-NodeTestTask-execute": {
		"longName": "NodeTestTask::execute()",
		"methodName": "execute",
		"repoShort": "junit-team/junit5",
		"file": "junit5-NodeTestTask-execute",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-TestFactoryTestDescriptor-invokeTestMethod": {
		"longName": "TestFactoryTestDescriptor::invokeTestMethod(JupiterEngineExecutionContext context, DynamicTestExecutor dynamicTestExecutor)",
		"methodName": "invokeTestMethod",
		"repoShort": "junit-team/junit5",
		"file": "junit5-TestFactoryTestDescriptor-invokeTestMethod",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ymultichange",
			"Ymultichange",
			"Yparameterchange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"junit5-TestMethodTestDescriptor-execute": {
		"longName": "TestMethodTestDescriptor::execute(JupiterEngineExecutionContext context, DynamicTestExecutor dynamicTestExecutor)",
		"methodName": "execute",
		"repoShort": "junit-team/junit5",
		"file": "junit5-TestMethodTestDescriptor-execute",
		"historyShort": [
			"Yfilerename",
			"Yparameterchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-TestMethodTestDescriptor-invokeTestMethod": {
		"longName": "TestMethodTestDescriptor::invokeTestMethod(JupiterEngineExecutionContext context, DynamicTestExecutor dynamicTestExecutor)",
		"methodName": "invokeTestMethod",
		"repoShort": "junit-team/junit5",
		"file": "junit5-TestMethodTestDescriptor-invokeTestMethod",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yparameterchange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"okhttp-ConnectionPool-get": {
		"longName": "ConnectionPool::get(Address address, StreamAllocation streamAllocation, Route route)",
		"methodName": "get",
		"repoShort": "square/okhttp",
		"file": "okhttp-ConnectionPool-get",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"okhttp-Http2Codec-writeRequestHeaders": {
		"longName": "Http2Codec::writeRequestHeaders(Request request)",
		"methodName": "writeRequestHeaders",
		"repoShort": "square/okhttp",
		"file": "okhttp-Http2Codec-writeRequestHeaders",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"okhttp-Http2Connection-headers": {
		"longName": "Http2Connection$ReaderRunnable::headers(boolean inFinished, int streamId, int associatedStreamId, List<Header> headerBlock)",
		"methodName": "headers",
		"repoShort": "square/okhttp",
		"file": "okhttp-Http2Connection-headers",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ymultichange",
			"Yparameterchange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"okhttp-Http2Connection-newStream": {
		"longName": "Http2Connection::newStream(int associatedStreamId, List<Header> requestHeaders, boolean out)",
		"methodName": "newStream",
		"repoShort": "square/okhttp",
		"file": "okhttp-Http2Connection-newStream",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"okhttp-Http2Connection-newStream2": {
		"longName": "Http2Connection::newStream(List<Header> requestHeaders, boolean out)",
		"methodName": "newStream",
		"repoShort": "square/okhttp",
		"file": "okhttp-Http2Connection-newStream2",
		"historyShort": [
			"Ymultichange",
			"Ymultichange",
			"Ymovefromfile",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"okhttp-Http2Connection-pushStream": {
		"longName": "Http2Connection::pushStream(int associatedStreamId, List<Header> requestHeaders, boolean out)",
		"methodName": "pushStream",
		"repoShort": "square/okhttp",
		"file": "okhttp-Http2Connection-pushStream",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"okhttp-OkHttpURLConnection-getResponse": {
		"longName": "OkHttpURLConnection::getResponse(boolean networkResponseOnError)",
		"methodName": "getResponse",
		"repoShort": "square/okhttp",
		"file": "okhttp-OkHttpURLConnection-getResponse",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"okhttp-RealCall-execute": {
		"longName": "RealCall$AsyncCall::execute()",
		"methodName": "execute",
		"repoShort": "square/okhttp",
		"file": "okhttp-RealCall-execute",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"okhttp-RealConnection-connect": {
		"longName": "RealConnection::connect(int connectTimeout, int readTimeout, int writeTimeout, int pingIntervalMillis, boolean connectionRetryEnabled, Call call, EventListener eventListener)",
		"methodName": "connect",
		"repoShort": "square/okhttp",
		"file": "okhttp-RealConnection-connect",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yexceptionschange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymodifierchange",
			"Ybodychange",
			"Yparameterchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"r1": {
		"longName": "PatternBuilder::build(RuleBuildContext context, PatternDescr patternDescr, Pattern prefixPattern)",
		"methodName": "build",
		"repoShort": "kiegroup/drools",
		"file": "r1",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"r2": {
		"longName": "KnowledgeBuilderImpl::getKnowledgeBase()",
		"methodName": "getKnowledgeBase",
		"repoShort": "kiegroup/drools",
		"file": "r2",
		"historyShort": [
			"Ymodifierchange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"r3": {
		"longName": "DefaultAgenda::writeExternal(ObjectOutput out)",
		"methodName": "writeExternal",
		"repoShort": "kiegroup/drools",
		"file": "r3",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"spring-framework-AbstractMessageConverterMethodProcessor-writeWithMessageConverters": {
		"longName": "AbstractMessageConverterMethodProcessor::writeWithMessageConverters(T value, MethodParameter returnType, ServletServerHttpRequest inputMessage, ServletServerHttpResponse outputMessage)",
		"methodName": "writeWithMessageConverters",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-AbstractMessageConverterMethodProcessor-writeWithMessageConverters",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"spring-framework-AbstractNestablePropertyAccessor-setPropertyValue": {
		"longName": "AbstractNestablePropertyAccessor::setPropertyValue(PropertyTokenHolder tokens, PropertyValue pv)",
		"methodName": "setPropertyValue",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-AbstractNestablePropertyAccessor-setPropertyValue",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"spring-framework-ConfigurationClassBeanDefinitionReader-loadBeanDefinitionsForBeanMethod": {
		"longName": "ConfigurationClassBeanDefinitionReader::loadBeanDefinitionsForBeanMethod(BeanMethod beanMethod)",
		"methodName": "loadBeanDefinitionsForBeanMethod",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-ConfigurationClassBeanDefinitionReader-loadBeanDefinitionsForBeanMethod",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"spring-framework-ConfigurationClassParser-doProcessConfigurationClass": {
		"longName": "ConfigurationClassParser::doProcessConfigurationClass(ConfigurationClass configClass, SourceClass sourceClass)",
		"methodName": "doProcessConfigurationClass",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-ConfigurationClassParser-doProcessConfigurationClass",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"spring-framework-ConfigurationClassPostProcessor-processConfigBeanDefinitions": {
		"longName": "ConfigurationClassPostProcessor::processConfigBeanDefinitions(BeanDefinitionRegistry registry)",
		"methodName": "processConfigBeanDefinitions",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-ConfigurationClassPostProcessor-processConfigBeanDefinitions",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Ymodifierchange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"spring-framework-ConstructorResolver-instantiateUsingFactoryMethod": {
		"longName": "ConstructorResolver::instantiateUsingFactoryMethod(String beanName, RootBeanDefinition mbd, Object[] explicitArgs)",
		"methodName": "instantiateUsingFactoryMethod",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-ConstructorResolver-instantiateUsingFactoryMethod",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"spring-framework-GenericConversionService-getConverter": {
		"longName": "GenericConversionService::getConverter(TypeDescriptor sourceType, TypeDescriptor targetType)",
		"methodName": "getConverter",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-GenericConversionService-getConverter",
		"historyShort": [
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yparameterchange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"spring-framework-ResponseBodyResultHandler-handleResult": {
		"longName": "ResponseBodyResultHandler::handleResult(ServerWebExchange exchange, HandlerResult result)",
		"methodName": "handleResult",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-ResponseBodyResultHandler-handleResult",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"spring-framework-ServletHttpHandlerAdapter-service": {
		"longName": "ServletHttpHandlerAdapter::service(ServletRequest request, ServletResponse response)",
		"methodName": "service",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-ServletHttpHandlerAdapter-service",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Yfilerename",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"spring-framework-TypeConverterDelegate-convertIfNecessary": {
		"longName": "TypeConverterDelegate::convertIfNecessary(String propertyName, Object oldValue, Object newValue, Class<T> requiredType, TypeDescriptor typeDescriptor)",
		"methodName": "convertIfNecessary",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-TypeConverterDelegate-convertIfNecessary",
		"historyShort": [
			"Ymultichange",
			"Yparametermetachange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	}
}