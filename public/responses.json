{
	"Z_commons-io-CopyUtils-copy": {
		"longName": "public void copy(byte[] input, OutputStream output);",
		"methodName": "copy",
		"repoShort": "apache/commons-io",
		"file": "Z_commons-io-CopyUtils-copy",
		"historyShort": [
			"Yparametermetachange",
			"Yfilerename",
			"Ybodychange",
			"Yparametermetachange",
			"Yintroduced"
		]
	},
	"Z_commons-io-DemuxOutputStream-flush": {
		"longName": "public void flush();",
		"methodName": "flush",
		"repoShort": "apache/commons-io",
		"file": "Z_commons-io-DemuxOutputStream-flush",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_commons-io-EndianUtils-read": {
		"longName": "private int read(InputStream input);",
		"methodName": "read",
		"repoShort": "apache/commons-io",
		"file": "Z_commons-io-EndianUtils-read",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Yparametermetachange",
			"Yintroduced"
		]
	},
	"Z_commons-io-FileAlterationObserver-createFileEntry": {
		"longName": "private FileEntry createFileEntry(FileEntry parent, File file);",
		"methodName": "createFileEntry",
		"repoShort": "apache/commons-io",
		"file": "Z_commons-io-FileAlterationObserver-createFileEntry",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_commons-io-FilenameUtils-wildcardMatch": {
		"longName": "public boolean wildcardMatch(String fileName, String wildcardMatcher, IOCase caseSensitivity);",
		"methodName": "wildcardMatch",
		"repoShort": "apache/commons-io",
		"file": "Z_commons-io-FilenameUtils-wildcardMatch",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_commons-io-IOUtils-contentEqualsIgnoreEOL": {
		"longName": "public boolean contentEqualsIgnoreEOL(Reader input1, Reader input2);",
		"methodName": "contentEqualsIgnoreEOL",
		"repoShort": "apache/commons-io",
		"file": "Z_commons-io-IOUtils-contentEqualsIgnoreEOL",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_commons-io-IOUtils-toInputStream": {
		"longName": "public InputStream toInputStream(CharSequence input, Charset encoding);",
		"methodName": "toInputStream",
		"repoShort": "apache/commons-io",
		"file": "Z_commons-io-IOUtils-toInputStream",
		"historyShort": [
			"Yparametermetachange",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_commons-io-ProxyWriter-write": {
		"longName": "public void write(String str);",
		"methodName": "write",
		"repoShort": "apache/commons-io",
		"file": "Z_commons-io-ProxyWriter-write",
		"historyShort": [
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_commons-io-Tailer-run": {
		"longName": "public void run();",
		"methodName": "run",
		"repoShort": "apache/commons-io",
		"file": "Z_commons-io-Tailer-run",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_commons-io-XmlStreamReader-doHttpStream": {
		"longName": "private String doHttpStream(BOMInputStream bom, BOMInputStream pis, String httpContentType, boolean lenient);",
		"methodName": "doHttpStream",
		"repoShort": "apache/commons-io",
		"file": "Z_commons-io-XmlStreamReader-doHttpStream",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_elasticsearch-BulkRequest-add": {
		"longName": "public BulkRequest add(DocWriteRequest<?> requests);",
		"methodName": "add",
		"repoShort": "elastic/elasticsearch",
		"file": "Z_elasticsearch-BulkRequest-add",
		"historyShort": [
			"Ymultichange",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange"
		]
	},
	"Z_elasticsearch-ESFileStore-getUnallocatedSpace": {
		"longName": "public long getUnallocatedSpace();",
		"methodName": "getUnallocatedSpace",
		"repoShort": "elastic/elasticsearch",
		"file": "Z_elasticsearch-ESFileStore-getUnallocatedSpace",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_elasticsearch-IndicesSegmentResponse-addCustomXContentFields": {
		"longName": "protected void addCustomXContentFields(XContentBuilder builder, Params params);",
		"methodName": "addCustomXContentFields",
		"repoShort": "elastic/elasticsearch",
		"file": "Z_elasticsearch-IndicesSegmentResponse-addCustomXContentFields",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_elasticsearch-IndicesSegmentResponse-toXContent": {
		"longName": "private void toXContent(XContentBuilder builder, Accountable tree);",
		"methodName": "toXContent",
		"repoShort": "elastic/elasticsearch",
		"file": "Z_elasticsearch-IndicesSegmentResponse-toXContent",
		"historyShort": [
			"Ymodifierchange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_elasticsearch-IndicesService-verifyIndexMetadata": {
		"longName": "public void verifyIndexMetadata(IndexMetaData metaData, IndexMetaData metaDataUpdate);",
		"methodName": "verifyIndexMetadata",
		"repoShort": "elastic/elasticsearch",
		"file": "Z_elasticsearch-IndicesService-verifyIndexMetadata",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_elasticsearch-NodesFaultDetection-handleTransportDisconnect": {
		"longName": "protected void handleTransportDisconnect(DiscoveryNode node);",
		"methodName": "handleTransportDisconnect",
		"repoShort": "elastic/elasticsearch",
		"file": "Z_elasticsearch-NodesFaultDetection-handleTransportDisconnect",
		"historyShort": [
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ymodifierchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_elasticsearch-RestRequest-method": {
		"longName": "public Method method();",
		"methodName": "method",
		"repoShort": "elastic/elasticsearch",
		"file": "Z_elasticsearch-RestRequest-method",
		"historyShort": [
			"Ymultichange",
			"Yfilerename",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_elasticsearch-RestTable-expandHeadersFromRequest": {
		"longName": "private Set<String> expandHeadersFromRequest(Table table, RestRequest request);",
		"methodName": "expandHeadersFromRequest",
		"repoShort": "elastic/elasticsearch",
		"file": "Z_elasticsearch-RestTable-expandHeadersFromRequest",
		"historyShort": [
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_elasticsearch-Security-createPermissions": {
		"longName": "Permissions createPermissions(Environment environment);",
		"methodName": "createPermissions",
		"repoShort": "elastic/elasticsearch",
		"file": "Z_elasticsearch-Security-createPermissions",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_elasticsearch-TransportClusterInfoAction-masterOperation": {
		"longName": "protected void masterOperation(Request request, ClusterState state, ActionListener<Response> listener);",
		"methodName": "masterOperation",
		"repoShort": "elastic/elasticsearch",
		"file": "Z_elasticsearch-TransportClusterInfoAction-masterOperation",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_hadoop-ClientRMService-renewDelegationToken": {
		"longName": "public RenewDelegationTokenResponse renewDelegationToken(RenewDelegationTokenRequest request);",
		"methodName": "renewDelegationToken",
		"repoShort": "apache/hadoop",
		"file": "Z_hadoop-ClientRMService-renewDelegationToken",
		"historyShort": [
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_hadoop-ConverterUtils-convertFromYarn": {
		"longName": "public Token<T> convertFromYarn(org.apache.hadoop.yarn.api.records.Token protoToken, InetSocketAddress serviceAddr);",
		"methodName": "convertFromYarn",
		"repoShort": "apache/hadoop",
		"file": "Z_hadoop-ConverterUtils-convertFromYarn",
		"historyShort": [
			"Ymultichange",
			"Yparameterchange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_hadoop-FiCaSchedulerNode-unreserveResource": {
		"longName": "public void unreserveResource(SchedulerApplicationAttempt application);",
		"methodName": "unreserveResource",
		"repoShort": "apache/hadoop",
		"file": "Z_hadoop-FiCaSchedulerNode-unreserveResource",
		"historyShort": [
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_hadoop-FifoScheduler-allocate": {
		"longName": "public Allocation allocate(ApplicationAttemptId applicationAttemptId, List<ResourceRequest> ask, List<SchedulingRequest> schedulingRequests, List<ContainerId> release, List<String> blacklistAdditions, List<String> blacklistRemovals, ContainerUpdates updateRequests);",
		"methodName": "allocate",
		"repoShort": "apache/hadoop",
		"file": "Z_hadoop-FifoScheduler-allocate",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_hadoop-FifoScheduler-getAppsInQueue": {
		"longName": "public List<ApplicationAttemptId> getAppsInQueue(String queueName);",
		"methodName": "getAppsInQueue",
		"repoShort": "apache/hadoop",
		"file": "Z_hadoop-FifoScheduler-getAppsInQueue",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_hadoop-LeveldbConfigurationStore-retrieve": {
		"longName": "public Configuration retrieve();",
		"methodName": "retrieve",
		"repoShort": "apache/hadoop",
		"file": "Z_hadoop-LeveldbConfigurationStore-retrieve",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_hadoop-NodeReportPBImpl-setCapability": {
		"longName": "public void setCapability(Resource capability);",
		"methodName": "setCapability",
		"repoShort": "apache/hadoop",
		"file": "Z_hadoop-NodeReportPBImpl-setCapability",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_hadoop-RMServerUtils-normalizeAndValidateRequests": {
		"longName": "public void normalizeAndValidateRequests(List<ResourceRequest> ask, Resource maximumResource, String queueName, YarnScheduler scheduler, RMContext rmContext);",
		"methodName": "normalizeAndValidateRequests",
		"repoShort": "apache/hadoop",
		"file": "Z_hadoop-RMServerUtils-normalizeAndValidateRequests",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_hadoop-SchedulerApplicationAttempt-getRunningAggregateAppResourceUsage": {
		"longName": "private AggregateAppResourceUsage getRunningAggregateAppResourceUsage();",
		"methodName": "getRunningAggregateAppResourceUsage",
		"repoShort": "apache/hadoop",
		"file": "Z_hadoop-SchedulerApplicationAttempt-getRunningAggregateAppResourceUsage",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_hadoop-SchedulerApplicationAttempt-resetSchedulingOpportunities": {
		"longName": "public void resetSchedulingOpportunities(SchedulerRequestKey schedulerKey, long currentTimeMs);",
		"methodName": "resetSchedulingOpportunities",
		"repoShort": "apache/hadoop",
		"file": "Z_hadoop-SchedulerApplicationAttempt-resetSchedulingOpportunities",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymovefromfile",
			"Ymovefromfile",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_hibernate-search-ArrayBridge-indexNotNullArray": {
		"longName": "private void indexNotNullArray(String name, Object value, Document document, LuceneOptions luceneOptions);",
		"methodName": "indexNotNullArray",
		"repoShort": "hibernate/hibernate-search",
		"file": "Z_hibernate-search-ArrayBridge-indexNotNullArray",
		"historyShort": [
			"Ybodychange",
			"Ymodifierchange",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_hibernate-search-ClassLoaderHelper-getNoArgConstructor": {
		"longName": "private Constructor<T> getNoArgConstructor(Class<T> classToLoad, String componentDescription);",
		"methodName": "getNoArgConstructor",
		"repoShort": "hibernate/hibernate-search",
		"file": "Z_hibernate-search-ClassLoaderHelper-getNoArgConstructor",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_hibernate-search-ClassLoaderHelper-instanceFromName": {
		"longName": "public T instanceFromName(Class<T> targetSuperType, String classNameToLoad, String componentDescription, ServiceManager serviceManager);",
		"methodName": "instanceFromName",
		"repoShort": "hibernate/hibernate-search",
		"file": "Z_hibernate-search-ClassLoaderHelper-instanceFromName",
		"historyShort": [
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_hibernate-search-DefaultBatchBackend-doWorkInSync": {
		"longName": "public void doWorkInSync(LuceneWork work);",
		"methodName": "doWorkInSync",
		"repoShort": "hibernate/hibernate-search",
		"file": "Z_hibernate-search-DefaultBatchBackend-doWorkInSync",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_hibernate-search-DistanceQuery-matches": {
		"longName": "public boolean matches();",
		"methodName": "matches",
		"repoShort": "hibernate/hibernate-search",
		"file": "Z_hibernate-search-DistanceQuery-matches",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_hibernate-search-Elasticsearch2AnalyzerStrategy-buildScopedAnalyzerReference": {
		"longName": "public ScopedElasticsearchAnalyzerReference.Builder buildScopedAnalyzerReference(AnalyzerReference initialGlobalAnalyzerReference);",
		"methodName": "buildScopedAnalyzerReference",
		"repoShort": "hibernate/hibernate-search",
		"file": "Z_hibernate-search-Elasticsearch2AnalyzerStrategy-buildScopedAnalyzerReference",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_hibernate-search-FullTextQueryImpl-setTimeout": {
		"longName": "public FullTextQueryImpl setTimeout(long timeout, TimeUnit timeUnit);",
		"methodName": "setTimeout",
		"repoShort": "hibernate/hibernate-search",
		"file": "Z_hibernate-search-FullTextQueryImpl-setTimeout",
		"historyShort": [
			"Yreturntypechange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange"
		]
	},
	"Z_hibernate-search-NumericFieldUtils-createNumericRangeQuery": {
		"longName": "public Query createNumericRangeQuery(String fieldName, Object from, Object to, boolean includeLower, boolean includeUpper);",
		"methodName": "createNumericRangeQuery",
		"repoShort": "hibernate/hibernate-search",
		"file": "Z_hibernate-search-NumericFieldUtils-createNumericRangeQuery",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_hibernate-search-StreamingOperationDispatcher-executeWork": {
		"longName": "private void executeWork(LuceneWork work, IndexingMonitor progressMonitor);",
		"methodName": "executeWork",
		"repoShort": "hibernate/hibernate-search",
		"file": "Z_hibernate-search-StreamingOperationDispatcher-executeWork",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_hibernate-search-TokenizerChain-createComponents": {
		"longName": "protected TokenStreamComponents createComponents(String fieldName);",
		"methodName": "createComponents",
		"repoShort": "hibernate/hibernate-search",
		"file": "Z_hibernate-search-TokenizerChain-createComponents",
		"historyShort": [
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_jetty-AnnotationIntrospector-introspect": {
		"longName": "public void introspect(Class<?> clazz);",
		"methodName": "introspect",
		"repoShort": "eclipse/jetty.project",
		"file": "Z_jetty-AnnotationIntrospector-introspect",
		"historyShort": [
			"Yparameterchange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_jetty-ExecutorThreadPool-isLowOnThreads": {
		"longName": "public boolean isLowOnThreads();",
		"methodName": "isLowOnThreads",
		"repoShort": "eclipse/jetty.project",
		"file": "Z_jetty-ExecutorThreadPool-isLowOnThreads",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_jetty-FragmentDescriptor-processAfters": {
		"longName": "public void processAfters(XmlParser.Node ordering);",
		"methodName": "processAfters",
		"repoShort": "eclipse/jetty.project",
		"file": "Z_jetty-FragmentDescriptor-processAfters",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_jetty-HttpTransportOverHTTP2-push": {
		"longName": "public void push(MetaData.Request request);",
		"methodName": "push",
		"repoShort": "eclipse/jetty.project",
		"file": "Z_jetty-HttpTransportOverHTTP2-push",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_jetty-HttpTransportOverHTTP2-send": {
		"longName": "public void send(MetaData.Response info, boolean isHeadRequest, ByteBuffer content, boolean lastContent, Callback callback);",
		"methodName": "send",
		"repoShort": "eclipse/jetty.project",
		"file": "Z_jetty-HttpTransportOverHTTP2-send",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_jetty-JsrSession-addMessageHandler": {
		"longName": "public void addMessageHandler(MessageHandler handler);",
		"methodName": "addMessageHandler",
		"repoShort": "eclipse/jetty.project",
		"file": "Z_jetty-JsrSession-addMessageHandler",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_jetty-Module-equals": {
		"longName": "public boolean equals(Object obj);",
		"methodName": "equals",
		"repoShort": "eclipse/jetty.project",
		"file": "Z_jetty-Module-equals",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_jetty-ServiceWebAppProvider-doStart": {
		"longName": "protected void doStart();",
		"methodName": "doStart",
		"repoShort": "eclipse/jetty.project",
		"file": "Z_jetty-ServiceWebAppProvider-doStart",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_jetty-ServletHolder-doStart": {
		"longName": "public void doStart();",
		"methodName": "doStart",
		"repoShort": "eclipse/jetty.project",
		"file": "Z_jetty-ServletHolder-doStart",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_jetty-StdErrLog-escape": {
		"longName": "private void escape(StringBuilder builder, String string);",
		"methodName": "escape",
		"repoShort": "eclipse/jetty.project",
		"file": "Z_jetty-StdErrLog-escape",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-ConcurrentMergeScheduler-sync": {
		"longName": "public void sync();",
		"methodName": "sync",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-ConcurrentMergeScheduler-sync",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-ConcurrentMergeScheduler-updateMergeThreads": {
		"longName": "protected void updateMergeThreads();",
		"methodName": "updateMergeThreads",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-ConcurrentMergeScheduler-updateMergeThreads",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-ConstantScoreQuery-rewrite": {
		"longName": "public Query rewrite(IndexReader reader);",
		"methodName": "rewrite",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-ConstantScoreQuery-rewrite",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-Field-tokenStream": {
		"longName": "public TokenStream tokenStream(Analyzer analyzer, TokenStream reuse);",
		"methodName": "tokenStream",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-Field-tokenStream",
		"historyShort": [
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-IndexWriter-shutdown": {
		"longName": "private void shutdown();",
		"methodName": "shutdown",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-IndexWriter-shutdown",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange"
		]
	},
	"Z_lucene-solr-IndexWriter-writeSomeDocValuesUpdates": {
		"longName": "void writeSomeDocValuesUpdates();",
		"methodName": "writeSomeDocValuesUpdates",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-IndexWriter-writeSomeDocValuesUpdates",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-MemoryIndex-keywordTokenStream": {
		"longName": "public TokenStream keywordTokenStream(Collection<T> keywords);",
		"methodName": "keywordTokenStream",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-MemoryIndex-keywordTokenStream",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-MemoryIndex-storeDocValues": {
		"longName": "private void storeDocValues(Info info, DocValuesType docValuesType, Object docValuesValue);",
		"methodName": "storeDocValues",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-MemoryIndex-storeDocValues",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-QueryParserBase-addClause": {
		"longName": "protected void addClause(List<BooleanClause> clauses, int conj, int mods, Query q);",
		"methodName": "addClause",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-QueryParserBase-addClause",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_lucene-solr-QueryParserBase-newRangeQuery": {
		"longName": "protected Query newRangeQuery(String field, String part1, String part2, boolean startInclusive, boolean endInclusive);",
		"methodName": "newRangeQuery",
		"repoShort": "apache/lucene-solr",
		"file": "Z_lucene-solr-QueryParserBase-newRangeQuery",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ymovefromfile",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_mockito-AdditionalMatchers-geq": {
		"longName": "public double geq(double value);",
		"methodName": "geq",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-AdditionalMatchers-geq",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymovefromfile",
			"Yintroduced"
		]
	},
	"Z_mockito-AdditionalMatchers-gt": {
		"longName": "public T gt(T value);",
		"methodName": "gt",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-AdditionalMatchers-gt",
		"historyShort": [
			"Yparameterchange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymovefromfile",
			"Yintroduced"
		]
	},
	"Z_mockito-InvocationContainerImpl-getStubbingsDescending": {
		"longName": "public List<Stubbing> getStubbingsDescending();",
		"methodName": "getStubbingsDescending",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-InvocationContainerImpl-getStubbingsDescending",
		"historyShort": [
			"Yrename",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_mockito-InvocationsFinder-findPreviousVerifiedInOrder": {
		"longName": "public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context);",
		"methodName": "findPreviousVerifiedInOrder",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-InvocationsFinder-findPreviousVerifiedInOrder",
		"historyShort": [
			"Ymodifierchange",
			"Yfilerename",
			"Yreturntypechange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_mockito-MatchersBinder-bindMatchers": {
		"longName": "public InvocationMatcher bindMatchers(ArgumentMatcherStorage argumentMatcherStorage, Invocation invocation);",
		"methodName": "bindMatchers",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-MatchersBinder-bindMatchers",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Yparameterchange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_mockito-PluginLoader-loadPlugin": {
		"longName": "Object loadPlugin(Class<PreferredType> preferredPluginType, Class<AlternateType> alternatePluginType);",
		"methodName": "loadPlugin",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-PluginLoader-loadPlugin",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_mockito-ReturnsArgumentAt-answer": {
		"longName": "public Object answer(InvocationOnMock invocation);",
		"methodName": "answer",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-ReturnsArgumentAt-answer",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_mockito-StringUtil-join": {
		"longName": "public String join(String start, String linePrefix, Collection<?> lines);",
		"methodName": "join",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-StringUtil-join",
		"historyShort": [
			"Ymultichange",
			"Ymovefromfile",
			"Yparameterchange",
			"Ymultichange",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_mockito-StubberImpl-doNothing": {
		"longName": "public Stubber doNothing();",
		"methodName": "doNothing",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-StubberImpl-doNothing",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Yreturntypechange",
			"Yintroduced"
		]
	},
	"Z_mockito-VerificationStartedNotifier-notifyVerificationStarted": {
		"longName": "public Object notifyVerificationStarted(List<VerificationStartedListener> listeners, MockingDetails originalMockingDetails);",
		"methodName": "notifyVerificationStarted",
		"repoShort": "mockito/mockito",
		"file": "Z_mockito-VerificationStartedNotifier-notifyVerificationStarted",
		"historyShort": [
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_pmd-ASTConditionalExpression-isTernary": {
		"longName": "public boolean isTernary();",
		"methodName": "isTernary",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-ASTConditionalExpression-isTernary",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymovefromfile",
			"Yintroduced"
		]
	},
	"Z_pmd-AbstractJavaRule-visit": {
		"longName": "public Object visit(ASTArgumentList node, Object data);",
		"methodName": "visit",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-AbstractJavaRule-visit",
		"historyShort": [
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_pmd-ClassTypeResolver-visit": {
		"longName": "public Object visit(ASTCompilationUnit node, Object data);",
		"methodName": "visit",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-ClassTypeResolver-visit",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_pmd-CommentUtil-javadocContentAfter": {
		"longName": "public String javadocContentAfter(String text, int position);",
		"methodName": "javadocContentAfter",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-CommentUtil-javadocContentAfter",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_pmd-FormalComment-findJavadocs": {
		"longName": "private void findJavadocs();",
		"methodName": "findJavadocs",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-FormalComment-findJavadocs",
		"historyShort": [
			"Ymultichange",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_pmd-JUnitTestsShouldIncludeAssertRule-visit": {
		"longName": "public Object visit(ASTClassOrInterfaceDeclaration node, Object data);",
		"methodName": "visit",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-JUnitTestsShouldIncludeAssertRule-visit",
		"historyShort": [
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_pmd-JavaParserVisitorAdapter-visit": {
		"longName": "public Object visit(ASTNameList node, Object data);",
		"methodName": "visit",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-JavaParserVisitorAdapter-visit",
		"historyShort": [
			"Yfilerename",
			"Yfilerename",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_pmd-LocalScope-getVariableDeclarations": {
		"longName": "public Map<VariableNameDeclaration, List<NameOccurrence>> getVariableDeclarations();",
		"methodName": "getVariableDeclarations",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-LocalScope-getVariableDeclarations",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yreturntypechange",
			"Ymovefromfile",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_pmd-SimplifyBooleanReturnsRule-terminatesInBooleanLiteral": {
		"longName": "private boolean terminatesInBooleanLiteral(Node node);",
		"methodName": "terminatesInBooleanLiteral",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-SimplifyBooleanReturnsRule-terminatesInBooleanLiteral",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yparameterchange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_pmd-SourceFileScope-getSubTypes": {
		"longName": "private Map<String, Node> getSubTypes(String qualifyingName, Scope subType);",
		"methodName": "getSubTypes",
		"repoShort": "pmd/pmd",
		"file": "Z_pmd-SourceFileScope-getSubTypes",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"Z_spring-boot-ConfigurationPropertiesBinder-getBindHandler": {
		"longName": "private BindHandler getBindHandler(ConfigurationProperties annotation, List<Validator> validators);",
		"methodName": "getBindHandler",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-ConfigurationPropertiesBinder-getBindHandler",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ymovefromfile",
			"Ybodychange"
		]
	},
	"Z_spring-boot-DefaultErrorAttributes-addErrorMessage": {
		"longName": "private void addErrorMessage(Map<String, Object> errorAttributes, Throwable error);",
		"methodName": "addErrorMessage",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-DefaultErrorAttributes-addErrorMessage",
		"historyShort": [
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-ErrorPageRegistrarBeanPostProcessor-getRegistrars": {
		"longName": "private Collection<ErrorPageRegistrar> getRegistrars();",
		"methodName": "getRegistrars",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-ErrorPageRegistrarBeanPostProcessor-getRegistrars",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"Z_spring-boot-JettyServletWebServerFactory-addDefaultServlet": {
		"longName": "protected void addDefaultServlet(WebAppContext context);",
		"methodName": "addDefaultServlet",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-JettyServletWebServerFactory-addDefaultServlet",
		"historyShort": [
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-JsonParserFactory-getJsonParser": {
		"longName": "public JsonParser getJsonParser();",
		"methodName": "getJsonParser",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-JsonParserFactory-getJsonParser",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-ServletWebServerApplicationContext-prepareWebApplicationContext": {
		"longName": "protected void prepareWebApplicationContext(ServletContext servletContext);",
		"methodName": "prepareWebApplicationContext",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-ServletWebServerApplicationContext-prepareWebApplicationContext",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-SpringApplication-getBeanDefinitionRegistry": {
		"longName": "private BeanDefinitionRegistry getBeanDefinitionRegistry(ApplicationContext context);",
		"methodName": "getBeanDefinitionRegistry",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-SpringApplication-getBeanDefinitionRegistry",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Ymovefromfile",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-StaticResourceJars-addUrlConnection": {
		"longName": "private void addUrlConnection(List<URL> urls, URL url, URLConnection connection);",
		"methodName": "addUrlConnection",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-StaticResourceJars-addUrlConnection",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-TomcatDataSourcePoolMetadata-getMin": {
		"longName": "public Integer getMin();",
		"methodName": "getMin",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-TomcatDataSourcePoolMetadata-getMin",
		"historyShort": [
			"Yfilerename",
			"Ymultichange",
			"Yfilerename",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"Z_spring-boot-UndertowWebServer-getPortFromChannel": {
		"longName": "private UndertowWebServer.Port getPortFromChannel(BoundChannel channel);",
		"methodName": "getPortFromChannel",
		"repoShort": "spring-projects/spring-boot",
		"file": "Z_spring-boot-UndertowWebServer-getPortFromChannel",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"checkstyle-Checker-fireErrors": {
		"longName": "public void fireErrors(String fileName, SortedSet<LocalizedMessage> errors);",
		"methodName": "fireErrors",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-Checker-fireErrors",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yparameterchange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-Checker-process": {
		"longName": "public int process(List<File> files);",
		"methodName": "process",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-Checker-process",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"checkstyle-CommonUtils-createPattern": {
		"longName": "public Pattern createPattern(String pattern, int flags);",
		"methodName": "createPattern",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-CommonUtils-createPattern",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymovefromfile",
			"Yfilerename",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yexceptionschange",
			"Ymultichange",
			"Ybodychange",
			"Ymovefromfile",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-FinalLocalVariableCheck-visitToken": {
		"longName": "public void visitToken(DetailAST ast);",
		"methodName": "visitToken",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-FinalLocalVariableCheck-visitToken",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-JavadocMethodCheck-checkThrowsTags": {
		"longName": "private void checkThrowsTags(List<JavadocTag> tags, List<ExceptionInfo> throwsList, boolean reportExpectedTags);",
		"methodName": "checkThrowsTags",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-JavadocMethodCheck-checkThrowsTags",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-Main-main": {
		"longName": "public void main(String args);",
		"methodName": "main",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-Main-main",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Yparameterchange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-TreeWalker-processFiltered": {
		"longName": "protected void processFiltered(File file, FileText fileText);",
		"methodName": "processFiltered",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-TreeWalker-processFiltered",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-WhitespaceAroundCheck-getAcceptableTokens": {
		"longName": "public int[] getAcceptableTokens();",
		"methodName": "getAcceptableTokens",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-WhitespaceAroundCheck-getAcceptableTokens",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-WhitespaceAroundCheck-isNotRelevantSituation": {
		"longName": "private boolean isNotRelevantSituation(DetailAST ast, int currentType);",
		"methodName": "isNotRelevantSituation",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-WhitespaceAroundCheck-isNotRelevantSituation",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"checkstyle-WhitespaceAroundCheck-shouldCheckSeparationFromNextToken": {
		"longName": "private boolean shouldCheckSeparationFromNextToken(DetailAST ast, char nextChar);",
		"methodName": "shouldCheckSeparationFromNextToken",
		"repoShort": "checkstyle/checkstyle",
		"file": "checkstyle-WhitespaceAroundCheck-shouldCheckSeparationFromNextToken",
		"historyShort": [
			"Ybodychange",
			"Yintroduced"
		]
	},
	"commons-lang-DateUtils-modify": {
		"longName": "private void modify(Calendar val, int field, ModifyType modType);",
		"methodName": "modify",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-DateUtils-modify",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"commons-lang-DurationFormatUtils-formatPeriod": {
		"longName": "public String formatPeriod(long startMillis, long endMillis, String format, boolean padWithZeros, TimeZone timezone);",
		"methodName": "formatPeriod",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-DurationFormatUtils-formatPeriod",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"commons-lang-EqualsBuilder-reflectionAppend": {
		"longName": "public EqualsBuilder reflectionAppend(Object lhs, Object rhs);",
		"methodName": "reflectionAppend",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-EqualsBuilder-reflectionAppend",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yparameterchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"commons-lang-FastDatePrinter-parsePattern": {
		"longName": "protected List<Rule> parsePattern();",
		"methodName": "parsePattern",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-FastDatePrinter-parsePattern",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"commons-lang-LocaleUtils-toLocale": {
		"longName": "public Locale toLocale(String str);",
		"methodName": "toLocale",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-LocaleUtils-toLocale",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"commons-lang-NumberUtils-createNumber": {
		"longName": "public Number createNumber(String str);",
		"methodName": "createNumber",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-NumberUtils-createNumber",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"commons-lang-NumberUtils-isCreatable": {
		"longName": "public boolean isCreatable(String str);",
		"methodName": "isCreatable",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-NumberUtils-isCreatable",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"commons-lang-NumberUtils-isNumber": {
		"longName": "public boolean isNumber(String str);",
		"methodName": "isNumber",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-NumberUtils-isNumber",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"commons-lang-RandomStringUtils-random": {
		"longName": "public String random(int count, int start, int end, boolean letters, boolean numbers, char[] chars, Random random);",
		"methodName": "random",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-RandomStringUtils-random",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"commons-lang-StrSubstitutor-substitute": {
		"longName": "private int substitute(StrBuilder buf, int offset, int length, List<String> priorVariables);",
		"methodName": "substitute",
		"repoShort": "apache/commons-lang",
		"file": "commons-lang-StrSubstitutor-substitute",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"flink-CheckpointCoordinator-receiveAcknowledgeMessage": {
		"longName": "public boolean receiveAcknowledgeMessage(AcknowledgeCheckpoint message);",
		"methodName": "receiveAcknowledgeMessage",
		"repoShort": "apache/flink",
		"file": "flink-CheckpointCoordinator-receiveAcknowledgeMessage",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"flink-ConnectedStreams-map": {
		"longName": "public SingleOutputStreamOperator<R> map(CoMapFunction<IN1, IN2, R> coMapper);",
		"methodName": "map",
		"repoShort": "apache/flink",
		"file": "flink-ConnectedStreams-map",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Yintroduced"
		]
	},
	"flink-ContinuousFileMonitoringFunction-close": {
		"longName": "public void close();",
		"methodName": "close",
		"repoShort": "apache/flink",
		"file": "flink-ContinuousFileMonitoringFunction-close",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"flink-DataStream-filter": {
		"longName": "public SingleOutputStreamOperator<T> filter(FilterFunction<T> filter);",
		"methodName": "filter",
		"repoShort": "apache/flink",
		"file": "flink-DataStream-filter",
		"historyShort": [
			"Yreturntypechange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Yreturntypechange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yreturntypechange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"flink-DispatcherRestEndpoint-initializeHandlers": {
		"longName": "protected List<Tuple2<RestHandlerSpecification, ChannelInboundHandler>> initializeHandlers(CompletableFuture<String> restAddressFuture);",
		"methodName": "initializeHandlers",
		"repoShort": "apache/flink",
		"file": "flink-DispatcherRestEndpoint-initializeHandlers",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"flink-FileSystem-getUnguardedFileSystem": {
		"longName": "public FileSystem getUnguardedFileSystem(URI fsUri);",
		"methodName": "getUnguardedFileSystem",
		"repoShort": "apache/flink",
		"file": "flink-FileSystem-getUnguardedFileSystem",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yrename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename"
		]
	},
	"flink-KryoSerializer-checkKryoInitialized": {
		"longName": "private void checkKryoInitialized();",
		"methodName": "checkKryoInitialized",
		"repoShort": "apache/flink",
		"file": "flink-KryoSerializer-checkKryoInitialized",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Yintroduced"
		]
	},
	"flink-LocatableInputSplitAssigner-getNextInputSplit": {
		"longName": "public LocatableInputSplit getNextInputSplit(String host, int taskId);",
		"methodName": "getNextInputSplit",
		"repoShort": "apache/flink",
		"file": "flink-LocatableInputSplitAssigner-getNextInputSplit",
		"historyShort": [
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Yfilerename",
			"Ymovefromfile",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"flink-PojoSerializer-deserialize": {
		"longName": "public T deserialize(DataInputView source);",
		"methodName": "deserialize",
		"repoShort": "apache/flink",
		"file": "flink-PojoSerializer-deserialize",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"flink-RemoteStreamEnvironment-executeRemotely": {
		"longName": "protected JobExecutionResult executeRemotely(StreamGraph streamGraph, List<URL> jarFiles);",
		"methodName": "executeRemotely",
		"repoShort": "apache/flink",
		"file": "flink-RemoteStreamEnvironment-executeRemotely",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymodifierchange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"hibernate-orm-AnnotationBinder-bindClass": {
		"longName": "public void bindClass(XClass clazzToProcess, Map<XClass, InheritanceState> inheritanceStatePerClass, MetadataBuildingContext context);",
		"methodName": "bindClass",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-AnnotationBinder-bindClass",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-CollectionBinder-bind": {
		"longName": "public void bind();",
		"methodName": "bind",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-CollectionBinder-bind",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-DefaultRefreshEventListener-onRefresh": {
		"longName": "public void onRefresh(RefreshEvent event, Map refreshedAlready);",
		"methodName": "onRefresh",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-DefaultRefreshEventListener-onRefresh",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-QueryBinder-bindNativeQuery": {
		"longName": "public void bindNativeQuery(NamedNativeQuery queryAnn, MetadataBuildingContext context, boolean isDefault);",
		"methodName": "bindNativeQuery",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-QueryBinder-bindNativeQuery",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-QueryBinder-bindNativeQuery2": {
		"longName": "public void bindNativeQuery(org.hibernate.annotations.NamedNativeQuery queryAnn, MetadataBuildingContext context);",
		"methodName": "bindNativeQuery",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-QueryBinder-bindNativeQuery2",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-QueryBinder-bindQuery": {
		"longName": "public void bindQuery(NamedQuery queryAnn, MetadataBuildingContext context, boolean isDefault);",
		"methodName": "bindQuery",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-QueryBinder-bindQuery",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-QueryBinder-bindQuery2": {
		"longName": "public void bindQuery(org.hibernate.annotations.NamedQuery queryAnn, MetadataBuildingContext context);",
		"methodName": "bindQuery",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-QueryBinder-bindQuery2",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-RevisionInfoConfiguration-configure": {
		"longName": "public RevisionInfoConfigurationResult configure(MetadataImplementor metadata, ReflectionManager reflectionManager);",
		"methodName": "configure",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-RevisionInfoConfiguration-configure",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"hibernate-orm-SessionFactoryBuilderImpl-unwrap": {
		"longName": "public T unwrap(Class<T> type);",
		"methodName": "unwrap",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-SessionFactoryBuilderImpl-unwrap",
		"historyShort": [
			"Yintroduced"
		]
	},
	"hibernate-orm-SimpleValue-buildAttributeConverterTypeAdapter": {
		"longName": "private Type buildAttributeConverterTypeAdapter();",
		"methodName": "buildAttributeConverterTypeAdapter",
		"repoShort": "hibernate/hibernate-orm",
		"file": "hibernate-orm-SimpleValue-buildAttributeConverterTypeAdapter",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"javaparser-Difference-apply": {
		"longName": "void apply();",
		"methodName": "apply",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-Difference-apply",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"javaparser-Difference-applyRemovedDiffElement": {
		"longName": "private void applyRemovedDiffElement(RemovedGroup removedGroup, Removed removed, TextElement originalElement, boolean originalElementIsChild, boolean originalElementIsToken);",
		"methodName": "applyRemovedDiffElement",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-Difference-applyRemovedDiffElement",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"javaparser-JavaParserFacade-convertToUsage": {
		"longName": "protected ResolvedType convertToUsage(com.github.javaparser.ast.type.Type type, Context context);",
		"methodName": "convertToUsage",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-JavaParserFacade-convertToUsage",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymodifierchange",
			"Ymodifierchange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ymodifierchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Yintroduced"
		]
	},
	"javaparser-JavaParserFacade-getTypeConcrete": {
		"longName": "private ResolvedType getTypeConcrete(Node node, boolean solveLambdas);",
		"methodName": "getTypeConcrete",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-JavaParserFacade-getTypeConcrete",
		"historyShort": [
			"Yfilerename",
			"Yreturntypechange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"javaparser-LambdaExprContext-solveSymbolAsValue": {
		"longName": "public Optional<Value> solveSymbolAsValue(String name, TypeSolver typeSolver);",
		"methodName": "solveSymbolAsValue",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-LambdaExprContext-solveSymbolAsValue",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"javaparser-MethodCallExprContext-solveMethod": {
		"longName": "public SymbolReference<ResolvedMethodDeclaration> solveMethod(String name, List<ResolvedType> argumentsTypes, boolean staticOnly, TypeSolver typeSolver);",
		"methodName": "solveMethod",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-MethodCallExprContext-solveMethod",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"javaparser-MethodCallExprContext-solveMethodAsUsage": {
		"longName": "public Optional<MethodUsage> solveMethodAsUsage(String name, List<ResolvedType> argumentsTypes, TypeSolver typeSolver);",
		"methodName": "solveMethodAsUsage",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-MethodCallExprContext-solveMethodAsUsage",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"javaparser-MethodResolutionLogic-isApplicable": {
		"longName": "private boolean isApplicable(ResolvedMethodDeclaration method, String name, List<ResolvedType> argumentsTypes, TypeSolver typeSolver, boolean withWildcardTolerance);",
		"methodName": "isApplicable",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-MethodResolutionLogic-isApplicable",
		"historyShort": [
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"javaparser-SourceFileInfoExtractor-solve": {
		"longName": "private void solve(Node node);",
		"methodName": "solve",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-SourceFileInfoExtractor-solve",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"javaparser-VisitorAdapter-visit": {
		"longName": "public void visit(MethodDeclaration n, A arg);",
		"methodName": "visit",
		"repoShort": "javaparser/javaparser",
		"file": "javaparser-VisitorAdapter-visit",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"jgit-CommitCommand-call": {
		"longName": "public RevCommit call();",
		"methodName": "call",
		"repoShort": "eclipse/jgit",
		"file": "jgit-CommitCommand-call",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-IndexDiff-diff": {
		"longName": "public boolean diff(ProgressMonitor monitor, int estWorkTreeSize, int estIndexSize, String title);",
		"methodName": "diff",
		"repoShort": "eclipse/jgit",
		"file": "jgit-IndexDiff-diff",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-MergeCommand-call": {
		"longName": "public MergeResult call();",
		"methodName": "call",
		"repoShort": "eclipse/jgit",
		"file": "jgit-MergeCommand-call",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-PackWriter-findObjectsToPack": {
		"longName": "private void findObjectsToPack(ProgressMonitor countingMonitor, ObjectWalk walker, Set<? extends ObjectId> want, Set<? extends ObjectId> have, Set<? extends ObjectId> noBitmaps);",
		"methodName": "findObjectsToPack",
		"repoShort": "eclipse/jgit",
		"file": "jgit-PackWriter-findObjectsToPack",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"jgit-PackWriter-writePack": {
		"longName": "public void writePack(ProgressMonitor compressMonitor, ProgressMonitor writeMonitor, OutputStream packStream);",
		"methodName": "writePack",
		"repoShort": "eclipse/jgit",
		"file": "jgit-PackWriter-writePack",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-PullCommand-call": {
		"longName": "public PullResult call();",
		"methodName": "call",
		"repoShort": "eclipse/jgit",
		"file": "jgit-PullCommand-call",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yexceptionschange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-RebaseCommand-call": {
		"longName": "public RebaseResult call();",
		"methodName": "call",
		"repoShort": "eclipse/jgit",
		"file": "jgit-RebaseCommand-call",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-ReceivePack-getLockMessageProcessName": {
		"longName": "protected String getLockMessageProcessName();",
		"methodName": "getLockMessageProcessName",
		"repoShort": "eclipse/jgit",
		"file": "jgit-ReceivePack-getLockMessageProcessName",
		"historyShort": [
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-RepoCommand-call": {
		"longName": "public RevCommit call();",
		"methodName": "call",
		"repoShort": "eclipse/jgit",
		"file": "jgit-RepoCommand-call",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"jgit-UploadPack-sendPack": {
		"longName": "private void sendPack(boolean sideband, PackStatistics.Accumulator accumulator, Collection<Ref> allTags, List<ObjectId> unshallowCommits);",
		"methodName": "sendPack",
		"repoShort": "eclipse/jgit",
		"file": "jgit-UploadPack-sendPack",
		"historyShort": [
			"Yparameterchange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"junit4-BlockJUnit4ClassRunner-describeChild": {
		"longName": "protected Description describeChild(FrameworkMethod method);",
		"methodName": "describeChild",
		"repoShort": "junit-team/junit4",
		"file": "junit4-BlockJUnit4ClassRunner-describeChild",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymovefromfile",
			"Ybodychange",
			"Yfilerename",
			"Yparameterchange",
			"Yrename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"junit4-BlockJUnit4ClassRunner-evaluate": {
		"longName": "public void evaluate();",
		"methodName": "evaluate",
		"repoShort": "junit-team/junit4",
		"file": "junit4-BlockJUnit4ClassRunner-evaluate",
		"historyShort": [
			"Yintroduced"
		]
	},
	"junit4-BlockJUnit4ClassRunner-methodBlock": {
		"longName": "protected Statement methodBlock(FrameworkMethod method);",
		"methodName": "methodBlock",
		"repoShort": "junit-team/junit4",
		"file": "junit4-BlockJUnit4ClassRunner-methodBlock",
		"historyShort": [
			"Ymultichange",
			"Ymodifierchange",
			"Ymodifierchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ymovefromfile",
			"Ymodifierchange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yrename",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit4-BlockJUnit4ClassRunner-possiblyExpectingExceptions": {
		"longName": "protected Statement possiblyExpectingExceptions(FrameworkMethod method, Object test, Statement next);",
		"methodName": "possiblyExpectingExceptions",
		"repoShort": "junit-team/junit4",
		"file": "junit4-BlockJUnit4ClassRunner-possiblyExpectingExceptions",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymovefromfile",
			"Ymodifierchange",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yreturntypechange",
			"Yintroduced"
		]
	},
	"junit4-BlockJUnit4ClassRunner-runChild": {
		"longName": "protected void runChild(FrameworkMethod method, RunNotifier notifier);",
		"methodName": "runChild",
		"repoShort": "junit-team/junit4",
		"file": "junit4-BlockJUnit4ClassRunner-runChild",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymodifierchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymovefromfile",
			"Yfilerename",
			"Yparameterchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yrename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"junit4-BlockJUnit4ClassRunner-withPotentialTimeout": {
		"longName": "protected Statement withPotentialTimeout(FrameworkMethod method, Object test, Statement next);",
		"methodName": "withPotentialTimeout",
		"repoShort": "junit-team/junit4",
		"file": "junit4-BlockJUnit4ClassRunner-withPotentialTimeout",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymovefromfile",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit4-Parameterized-createRunners": {
		"longName": "private List<Runner> createRunners();",
		"methodName": "createRunners",
		"repoShort": "junit-team/junit4",
		"file": "junit4-Parameterized-createRunners",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit4-Parameterized-createRunnersForParameters": {
		"longName": "private List<Runner> createRunnersForParameters(Iterable<Object> allParameters, String namePattern, ParametersRunnerFactory runnerFactory);",
		"methodName": "createRunnersForParameters",
		"repoShort": "junit-team/junit4",
		"file": "junit4-Parameterized-createRunnersForParameters",
		"historyShort": [
			"Ybodychange",
			"Yexceptionschange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit4-ParentRunner-applyValidators": {
		"longName": "private void applyValidators(List<Throwable> errors);",
		"methodName": "applyValidators",
		"repoShort": "junit-team/junit4",
		"file": "junit4-ParentRunner-applyValidators",
		"historyShort": [
			"Yintroduced"
		]
	},
	"junit4-Version-id": {
		"longName": "public String id();",
		"methodName": "id",
		"repoShort": "junit-team/junit4",
		"file": "junit4-Version-id",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"junit5-AvailableOptions-toCommandLineOptions": {
		"longName": "CommandLineOptions toCommandLineOptions(OptionSet detectedOptions);",
		"methodName": "toCommandLineOptions",
		"repoShort": "junit-team/junit5",
		"file": "junit5-AvailableOptions-toCommandLineOptions",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-ClassTestDescriptor-invokeBeforeAllMethods": {
		"longName": "private void invokeBeforeAllMethods(JupiterEngineExecutionContext context);",
		"methodName": "invokeBeforeAllMethods",
		"repoShort": "junit-team/junit5",
		"file": "junit5-ClassTestDescriptor-invokeBeforeAllMethods",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"junit5-ClassTestDescriptor-prepare": {
		"longName": "public JupiterEngineExecutionContext prepare(JupiterEngineExecutionContext context);",
		"methodName": "prepare",
		"repoShort": "junit-team/junit5",
		"file": "junit5-ClassTestDescriptor-prepare",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-DefaultLauncher-discover": {
		"longName": "public TestPlan discover(LauncherDiscoveryRequest discoveryRequest);",
		"methodName": "discover",
		"repoShort": "junit-team/junit5",
		"file": "junit5-DefaultLauncher-discover",
		"historyShort": [
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yparameterchange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yrename",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-DefaultLauncher-discoverRoot": {
		"longName": "private Root discoverRoot(LauncherDiscoveryRequest discoveryRequest, String phase);",
		"methodName": "discoverRoot",
		"repoShort": "junit-team/junit5",
		"file": "junit5-DefaultLauncher-discoverRoot",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yparameterchange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yrename",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-DefaultLauncher-execute": {
		"longName": "private void execute(Root root, ConfigurationParameters configurationParameters, TestExecutionListener listeners);",
		"methodName": "execute",
		"repoShort": "junit-team/junit5",
		"file": "junit5-DefaultLauncher-execute",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yexceptionschange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-NodeTestTask-execute": {
		"longName": "public void execute();",
		"methodName": "execute",
		"repoShort": "junit-team/junit5",
		"file": "junit5-NodeTestTask-execute",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-TestFactoryTestDescriptor-invokeTestMethod": {
		"longName": "protected void invokeTestMethod(JupiterEngineExecutionContext context, DynamicTestExecutor dynamicTestExecutor);",
		"methodName": "invokeTestMethod",
		"repoShort": "junit-team/junit5",
		"file": "junit5-TestFactoryTestDescriptor-invokeTestMethod",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ymultichange",
			"Ymultichange",
			"Yparameterchange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"junit5-TestMethodTestDescriptor-execute": {
		"longName": "public JupiterEngineExecutionContext execute(JupiterEngineExecutionContext context, DynamicTestExecutor dynamicTestExecutor);",
		"methodName": "execute",
		"repoShort": "junit-team/junit5",
		"file": "junit5-TestMethodTestDescriptor-execute",
		"historyShort": [
			"Yfilerename",
			"Yparameterchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"junit5-TestMethodTestDescriptor-invokeTestMethod": {
		"longName": "protected void invokeTestMethod(JupiterEngineExecutionContext context, DynamicTestExecutor dynamicTestExecutor);",
		"methodName": "invokeTestMethod",
		"repoShort": "junit-team/junit5",
		"file": "junit5-TestMethodTestDescriptor-invokeTestMethod",
		"historyShort": [
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yparameterchange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"okhttp-ConnectionPool-get": {
		"longName": "RealConnection get(Address address, StreamAllocation streamAllocation, Route route);",
		"methodName": "get",
		"repoShort": "square/okhttp",
		"file": "okhttp-ConnectionPool-get",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"okhttp-Http2Codec-writeRequestHeaders": {
		"longName": "public void writeRequestHeaders(Request request);",
		"methodName": "writeRequestHeaders",
		"repoShort": "square/okhttp",
		"file": "okhttp-Http2Codec-writeRequestHeaders",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"okhttp-Http2Connection-headers": {
		"longName": "public void headers(boolean inFinished, int streamId, int associatedStreamId, List<Header> headerBlock);",
		"methodName": "headers",
		"repoShort": "square/okhttp",
		"file": "okhttp-Http2Connection-headers",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ymultichange",
			"Yparameterchange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"okhttp-Http2Connection-newStream": {
		"longName": "private Http2Stream newStream(int associatedStreamId, List<Header> requestHeaders, boolean out);",
		"methodName": "newStream",
		"repoShort": "square/okhttp",
		"file": "okhttp-Http2Connection-newStream",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"okhttp-Http2Connection-newStream2": {
		"longName": "public Http2Stream newStream(List<Header> requestHeaders, boolean out);",
		"methodName": "newStream",
		"repoShort": "square/okhttp",
		"file": "okhttp-Http2Connection-newStream2",
		"historyShort": [
			"Ymultichange",
			"Ymultichange",
			"Ymovefromfile",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"okhttp-Http2Connection-pushStream": {
		"longName": "public Http2Stream pushStream(int associatedStreamId, List<Header> requestHeaders, boolean out);",
		"methodName": "pushStream",
		"repoShort": "square/okhttp",
		"file": "okhttp-Http2Connection-pushStream",
		"historyShort": [
			"Ymultichange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"okhttp-JavaNetAuthenticator-authenticate": {
		"longName": "public Request authenticate(Route route, Response response);",
		"methodName": "authenticate",
		"repoShort": "square/okhttp",
		"file": "okhttp-JavaNetAuthenticator-authenticate",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"okhttp-OkHttpURLConnection-getResponse": {
		"longName": "private Response getResponse(boolean networkResponseOnError);",
		"methodName": "getResponse",
		"repoShort": "square/okhttp",
		"file": "okhttp-OkHttpURLConnection-getResponse",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"okhttp-RealCall-execute": {
		"longName": "protected void execute();",
		"methodName": "execute",
		"repoShort": "square/okhttp",
		"file": "okhttp-RealCall-execute",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"okhttp-RealConnection-connect": {
		"longName": "public void connect(int connectTimeout, int readTimeout, int writeTimeout, int pingIntervalMillis, boolean connectionRetryEnabled, Call call, EventListener eventListener);",
		"methodName": "connect",
		"repoShort": "square/okhttp",
		"file": "okhttp-RealConnection-connect",
		"historyShort": [
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yexceptionschange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymodifierchange",
			"Ybodychange",
			"Yparameterchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"r1": {
		"longName": "PatternBuilder::build(RuleBuildContext context, PatternDescr patternDescr, Pattern prefixPattern)",
		"methodName": "build",
		"repoShort": "kiegroup/drools",
		"file": "r1",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"r2": {
		"longName": "KnowledgeBuilderImpl::getKnowledgeBase()",
		"methodName": "getKnowledgeBase",
		"repoShort": "kiegroup/drools",
		"file": "r2",
		"historyShort": [
			"Ymodifierchange",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"r3": {
		"longName": "DefaultAgenda::writeExternal(ObjectOutput out)",
		"methodName": "writeExternal",
		"repoShort": "kiegroup/drools",
		"file": "r3",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"spring-framework-AbstractMessageConverterMethodProcessor-writeWithMessageConverters": {
		"longName": "protected void writeWithMessageConverters(T value, MethodParameter returnType, ServletServerHttpRequest inputMessage, ServletServerHttpResponse outputMessage);",
		"methodName": "writeWithMessageConverters",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-AbstractMessageConverterMethodProcessor-writeWithMessageConverters",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yexceptionschange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"spring-framework-AbstractNestablePropertyAccessor-setPropertyValue": {
		"longName": "protected void setPropertyValue(PropertyTokenHolder tokens, PropertyValue pv);",
		"methodName": "setPropertyValue",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-AbstractNestablePropertyAccessor-setPropertyValue",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ymovefromfile",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"spring-framework-ConfigurationClassBeanDefinitionReader-loadBeanDefinitionsForBeanMethod": {
		"longName": "private void loadBeanDefinitionsForBeanMethod(BeanMethod beanMethod);",
		"methodName": "loadBeanDefinitionsForBeanMethod",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-ConfigurationClassBeanDefinitionReader-loadBeanDefinitionsForBeanMethod",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"spring-framework-ConfigurationClassParser-doProcessConfigurationClass": {
		"longName": "protected SourceClass doProcessConfigurationClass(ConfigurationClass configClass, SourceClass sourceClass);",
		"methodName": "doProcessConfigurationClass",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-ConfigurationClassParser-doProcessConfigurationClass",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"spring-framework-ConfigurationClassPostProcessor-processConfigBeanDefinitions": {
		"longName": "public void processConfigBeanDefinitions(BeanDefinitionRegistry registry);",
		"methodName": "processConfigBeanDefinitions",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-ConfigurationClassPostProcessor-processConfigBeanDefinitions",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Ymodifierchange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Yfilerename",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"spring-framework-ConstructorResolver-instantiateUsingFactoryMethod": {
		"longName": "public BeanWrapper instantiateUsingFactoryMethod(String beanName, RootBeanDefinition mbd, Object[] explicitArgs);",
		"methodName": "instantiateUsingFactoryMethod",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-ConstructorResolver-instantiateUsingFactoryMethod",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"spring-framework-GenericConversionService-getConverter": {
		"longName": "protected GenericConverter getConverter(TypeDescriptor sourceType, TypeDescriptor targetType);",
		"methodName": "getConverter",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-GenericConversionService-getConverter",
		"historyShort": [
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Yparameterchange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Yfilerename",
			"Yfilerename",
			"Ymultichange",
			"Yintroduced"
		]
	},
	"spring-framework-ResponseBodyResultHandler-handleResult": {
		"longName": "public Mono<Void> handleResult(ServerWebExchange exchange, HandlerResult result);",
		"methodName": "handleResult",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-ResponseBodyResultHandler-handleResult",
		"historyShort": [
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Yparameterchange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	},
	"spring-framework-ServletHttpHandlerAdapter-service": {
		"longName": "public void service(ServletRequest request, ServletResponse response);",
		"methodName": "service",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-ServletHttpHandlerAdapter-service",
		"historyShort": [
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ymultichange",
			"Yfilerename",
			"Ymultichange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Yfilerename",
			"Yintroduced"
		]
	},
	"spring-framework-TypeConverterDelegate-convertIfNecessary": {
		"longName": "public T convertIfNecessary(String propertyName, Object oldValue, Object newValue, Class<T> requiredType, TypeDescriptor typeDescriptor);",
		"methodName": "convertIfNecessary",
		"repoShort": "spring-projects/spring-framework",
		"file": "spring-framework-TypeConverterDelegate-convertIfNecessary",
		"historyShort": [
			"Ymultichange",
			"Yparametermetachange",
			"Yparametermetachange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yfilerename",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymodifierchange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Ymultichange",
			"Ybodychange",
			"Ybodychange",
			"Ybodychange",
			"Yintroduced"
		]
	}
}