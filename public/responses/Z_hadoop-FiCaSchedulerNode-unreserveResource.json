{
	"repo": "https://github.com/apache/hadoop.git",
	"file": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
	"method": {
		"longName": "public void unreserveResource(SchedulerApplicationAttempt application);",
		"startLine": 102,
		"methodName": "unreserveResource",
		"isStatic": false,
		"isAbstract": false,
		"visibility": "public"
	},
	"history": {
		"82f3454f5ac1f1c457e668e2cee12b4dcc800ee1": {
			"type": "Ybodychange",
			"commitMessage": "YARN-2017. Merged some of the common scheduler code. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596753 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2014-05-21, 10:32 PM",
			"commitName": "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
			"commitAuthor": "Vinod Kumar Vavilapalli",
			"commitDateOld": "2014-04-15, 1:37 PM",
			"commitNameOld": "44b6261bfacddea88a3cf02d406f970bbbb98d04",
			"commitAuthorOld": "Zhijie Shen",
			"daysBetweenCommits": 36.37,
			"commitsBetweenForRepo": 202,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,23 +1,25 @@\n   public synchronized void unreserveResource(\n       SchedulerApplicationAttempt application) {\n-    \n+\n     // adding NP checks as this can now be called for preemption\n-    if (reservedContainer != null\n-        && reservedContainer.getContainer() != null\n-        && reservedContainer.getContainer().getId() != null\n-        && reservedContainer.getContainer().getId().getApplicationAttemptId() != null) {\n+    if (getReservedContainer() != null\n+        && getReservedContainer().getContainer() != null\n+        && getReservedContainer().getContainer().getId() != null\n+        && getReservedContainer().getContainer().getId()\n+          .getApplicationAttemptId() != null) {\n \n       // Cannot unreserve for wrong application...\n       ApplicationAttemptId reservedApplication =\n-          reservedContainer.getContainer().getId().getApplicationAttemptId();\n+          getReservedContainer().getContainer().getId()\n+            .getApplicationAttemptId();\n       if (!reservedApplication.equals(\n           application.getApplicationAttemptId())) {\n         throw new IllegalStateException(\"Trying to unreserve \" +\n             \" for application \" + application.getApplicationAttemptId() +\n             \" when currently reserved \" +\n             \" for application \" + reservedApplication.getApplicationId() +\n             \" on node \" + this);\n       }\n     }\n-    reservedContainer = null;\n+    setReservedContainer(null);\n   }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": {
			"type": "Yparameterchange",
			"commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2014-01-02, 12:19 PM",
			"commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
			"commitAuthor": "Vinod Kumar Vavilapalli",
			"commitDateOld": "2013-11-05, 1:23 PM",
			"commitNameOld": "6990355e577ad19371cb656c250fb665ed14062f",
			"commitAuthorOld": "Luke Lu",
			"daysBetweenCommits": 57.96,
			"commitsBetweenForRepo": 320,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,23 +1,23 @@\n   public synchronized void unreserveResource(\n-      SchedulerApplication application) {\n+      SchedulerApplicationAttempt application) {\n     \n     // adding NP checks as this can now be called for preemption\n     if (reservedContainer != null\n         && reservedContainer.getContainer() != null\n         && reservedContainer.getContainer().getId() != null\n         && reservedContainer.getContainer().getId().getApplicationAttemptId() != null) {\n \n       // Cannot unreserve for wrong application...\n       ApplicationAttemptId reservedApplication =\n           reservedContainer.getContainer().getId().getApplicationAttemptId();\n       if (!reservedApplication.equals(\n           application.getApplicationAttemptId())) {\n         throw new IllegalStateException(\"Trying to unreserve \" +\n             \" for application \" + application.getApplicationAttemptId() +\n             \" when currently reserved \" +\n             \" for application \" + reservedApplication.getApplicationId() +\n             \" on node \" + this);\n       }\n     }\n     reservedContainer = null;\n   }\n\\ No newline at end of file\n",
			"extendedDetails": {
				"oldValue": "[application-SchedulerApplication]",
				"newValue": "[application-SchedulerApplicationAttempt]"
			}
		},
		"85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": {
			"type": "Ybodychange",
			"commitMessage": "YARN-569. Add support for requesting and enforcing preemption requests via\na capacity monitor. Contributed by Carlo Curino, Chris Douglas\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502083 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2013-07-10, 6:20 PM",
			"commitName": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
			"commitAuthor": "Christopher Douglas",
			"commitDateOld": "2013-06-21, 11:28 AM",
			"commitNameOld": "37d7935a9d7b86635c9c1ffc03f88b49857f88a0",
			"commitAuthorOld": "Bikas Saha",
			"daysBetweenCommits": 19.29,
			"commitsBetweenForRepo": 72,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,16 +1,23 @@\n   public synchronized void unreserveResource(\n       SchedulerApplication application) {\n-    // Cannot unreserve for wrong application...\n-    ApplicationAttemptId reservedApplication = \n-        reservedContainer.getContainer().getId().getApplicationAttemptId(); \n-    if (!reservedApplication.equals(\n-        application.getApplicationAttemptId())) {\n-      throw new IllegalStateException(\"Trying to unreserve \" +  \n-          \" for application \" + application.getApplicationAttemptId() + \n-          \" when currently reserved \" + \n-          \" for application \" + reservedApplication.getApplicationId() + \n-          \" on node \" + this);\n-    }\n     \n+    // adding NP checks as this can now be called for preemption\n+    if (reservedContainer != null\n+        && reservedContainer.getContainer() != null\n+        && reservedContainer.getContainer().getId() != null\n+        && reservedContainer.getContainer().getId().getApplicationAttemptId() != null) {\n+\n+      // Cannot unreserve for wrong application...\n+      ApplicationAttemptId reservedApplication =\n+          reservedContainer.getContainer().getId().getApplicationAttemptId();\n+      if (!reservedApplication.equals(\n+          application.getApplicationAttemptId())) {\n+        throw new IllegalStateException(\"Trying to unreserve \" +\n+            \" for application \" + application.getApplicationAttemptId() +\n+            \" when currently reserved \" +\n+            \" for application \" + reservedApplication.getApplicationId() +\n+            \" on node \" + this);\n+      }\n+    }\n     reservedContainer = null;\n   }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"e1fdf62123625e4ba399af02f8aad500637d29d1": {
			"type": "Yfilerename",
			"commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2012-08-07, 10:22 PM",
			"commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
			"commitAuthor": "Arun Murthy",
			"commitDateOld": "2012-08-07, 7:53 PM",
			"commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
			"commitAuthorOld": "Aaron Myers",
			"daysBetweenCommits": 0.1,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
				"newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java"
			}
		},
		"7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": {
			"type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
			"commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2012-07-16, 6:43 PM",
			"commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
			"commitAuthor": "Arun Murthy",
			"subchanges": [
				{
					"type": "Ymovefromfile",
					"commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
					"commitDate": "2012-07-16, 6:43 PM",
					"commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
					"commitAuthor": "Arun Murthy",
					"commitDateOld": "2012-07-16, 3:41 PM",
					"commitNameOld": "30099efb3525265f8b9fccd2709d45327f5b6724",
					"commitAuthorOld": "Todd Lipcon",
					"daysBetweenCommits": 0.13,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,15 +1,16 @@\n-  public synchronized void unreserveResource(SchedulerApp application) {\n+  public synchronized void unreserveResource(\n+      SchedulerApplication application) {\n     // Cannot unreserve for wrong application...\n     ApplicationAttemptId reservedApplication = \n         reservedContainer.getContainer().getId().getApplicationAttemptId(); \n     if (!reservedApplication.equals(\n         application.getApplicationAttemptId())) {\n       throw new IllegalStateException(\"Trying to unreserve \" +  \n-          \" for application \" + application.getApplicationId() + \n+          \" for application \" + application.getApplicationAttemptId() + \n           \" when currently reserved \" + \n           \" for application \" + reservedApplication.getApplicationId() + \n           \" on node \" + this);\n     }\n     \n     reservedContainer = null;\n   }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerNode.java",
						"newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerNode.java",
						"oldMethodName": "unreserveResource",
						"newMethodName": "unreserveResource"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
					"commitDate": "2012-07-16, 6:43 PM",
					"commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
					"commitAuthor": "Arun Murthy",
					"commitDateOld": "2012-07-16, 3:41 PM",
					"commitNameOld": "30099efb3525265f8b9fccd2709d45327f5b6724",
					"commitAuthorOld": "Todd Lipcon",
					"daysBetweenCommits": 0.13,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,15 +1,16 @@\n-  public synchronized void unreserveResource(SchedulerApp application) {\n+  public synchronized void unreserveResource(\n+      SchedulerApplication application) {\n     // Cannot unreserve for wrong application...\n     ApplicationAttemptId reservedApplication = \n         reservedContainer.getContainer().getId().getApplicationAttemptId(); \n     if (!reservedApplication.equals(\n         application.getApplicationAttemptId())) {\n       throw new IllegalStateException(\"Trying to unreserve \" +  \n-          \" for application \" + application.getApplicationId() + \n+          \" for application \" + application.getApplicationAttemptId() + \n           \" when currently reserved \" + \n           \" for application \" + reservedApplication.getApplicationId() + \n           \" on node \" + this);\n     }\n     \n     reservedContainer = null;\n   }\n\\ No newline at end of file\n",
					"extendedDetails": {}
				},
				{
					"type": "Yparameterchange",
					"commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
					"commitDate": "2012-07-16, 6:43 PM",
					"commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
					"commitAuthor": "Arun Murthy",
					"commitDateOld": "2012-07-16, 3:41 PM",
					"commitNameOld": "30099efb3525265f8b9fccd2709d45327f5b6724",
					"commitAuthorOld": "Todd Lipcon",
					"daysBetweenCommits": 0.13,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,15 +1,16 @@\n-  public synchronized void unreserveResource(SchedulerApp application) {\n+  public synchronized void unreserveResource(\n+      SchedulerApplication application) {\n     // Cannot unreserve for wrong application...\n     ApplicationAttemptId reservedApplication = \n         reservedContainer.getContainer().getId().getApplicationAttemptId(); \n     if (!reservedApplication.equals(\n         application.getApplicationAttemptId())) {\n       throw new IllegalStateException(\"Trying to unreserve \" +  \n-          \" for application \" + application.getApplicationId() + \n+          \" for application \" + application.getApplicationAttemptId() + \n           \" when currently reserved \" + \n           \" for application \" + reservedApplication.getApplicationId() + \n           \" on node \" + this);\n     }\n     \n     reservedContainer = null;\n   }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[application-SchedulerApp]",
						"newValue": "[application-SchedulerApplication]"
					}
				}
			]
		},
		"6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1": {
			"type": "Ybodychange",
			"commitMessage": "MAPREDUCE-2896. Simplify all apis to in org.apache.hadoop.yarn.api.records.* to be get/set only. Added javadocs to all public records.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1169980 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2011-09-12, 5:05 PM",
			"commitName": "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
			"commitAuthor": "Arun Murthy",
			"commitDateOld": "2011-08-29, 4:27 PM",
			"commitNameOld": "fb6ecb9b27798a923ca290ba5d23368e3a820a6c",
			"commitAuthorOld": "Mahadev Konar",
			"daysBetweenCommits": 14.03,
			"commitsBetweenForRepo": 82,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,15 +1,15 @@\n   public synchronized void unreserveResource(SchedulerApp application) {\n     // Cannot unreserve for wrong application...\n     ApplicationAttemptId reservedApplication = \n-        reservedContainer.getContainer().getId().getAppAttemptId(); \n+        reservedContainer.getContainer().getId().getApplicationAttemptId(); \n     if (!reservedApplication.equals(\n         application.getApplicationAttemptId())) {\n       throw new IllegalStateException(\"Trying to unreserve \" +  \n           \" for application \" + application.getApplicationId() + \n           \" when currently reserved \" + \n           \" for application \" + reservedApplication.getApplicationId() + \n           \" on node \" + this);\n     }\n     \n     reservedContainer = null;\n   }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
			"type": "Yfilerename",
			"commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2011-08-24, 5:14 PM",
			"commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
			"commitAuthor": "Arun Murthy",
			"commitDateOld": "2011-08-24, 5:06 PM",
			"commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
			"commitAuthorOld": "Arun Murthy",
			"daysBetweenCommits": 0.01,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerNode.java",
				"newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerNode.java"
			}
		},
		"dbecbe5dfe50f834fc3b8401709079e9470cc517": {
			"type": "Yintroduced",
			"commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2011-08-18, 4:07 AM",
			"commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
			"commitAuthor": "Vinod Kumar Vavilapalli",
			"diff": "@@ -0,0 +1,15 @@\n+  public synchronized void unreserveResource(SchedulerApp application) {\n+    // Cannot unreserve for wrong application...\n+    ApplicationAttemptId reservedApplication = \n+        reservedContainer.getContainer().getId().getAppAttemptId(); \n+    if (!reservedApplication.equals(\n+        application.getApplicationAttemptId())) {\n+      throw new IllegalStateException(\"Trying to unreserve \" +  \n+          \" for application \" + application.getApplicationId() + \n+          \" when currently reserved \" + \n+          \" for application \" + reservedApplication.getApplicationId() + \n+          \" on node \" + this);\n+    }\n+    \n+    reservedContainer = null;\n+  }\n\\ No newline at end of file\n"
		}
	},
	"sha": "9c3fc3ef2865164aa5f121793ac914cfeb21a181"
}