{
	"repo": "https://github.com/pmd/pmd.git",
	"file": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
	"method": {
		"longName": "public Object visit(ASTCompilationUnit node, Object data);",
		"startLine": 186,
		"methodName": "visit",
		"isStatic": false,
		"isAbstract": false,
		"visibility": "public"
	},
	"history": {
		"30afff46c65d17dd4974f4831b1ea0f0232bdf75": {
			"type": "Ybodychange",
			"commitMessage": "[java] Avoid a NPE in Type Resolution\n\n - If a class extends a class that references / extends a missing class,\nit's possible for the `NoClassDefFoundError` to only rise once we call\n`isAnonymousClass()` on the `Class`.\n - For consistency with missing classes, we set the type to null.\n - Logging such missing classes is still pending #194\n",
			"commitDate": "2018-03-03, 10:46 PM",
			"commitName": "30afff46c65d17dd4974f4831b1ea0f0232bdf75",
			"commitAuthor": "Juan Martín Sotuyo Dodero",
			"commitDateOld": "2017-12-30, 7:48 PM",
			"commitNameOld": "729d77614f880223850bb7982629f0b7467484d1",
			"commitAuthorOld": "Juan Martín Sotuyo Dodero",
			"daysBetweenCommits": 63.12,
			"commitsBetweenForRepo": 177,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,33 +1,29 @@\n     public Object visit(ASTCompilationUnit node, Object data) {\n         String className = null;\n         try {\n             currentAcu = node;\n             importedOnDemand = new ArrayList<>();\n             importedClasses = new HashMap<>();\n             staticFieldImageToTypeDef = new HashMap<>();\n             staticNamesToClasses = new HashMap<>();\n             importOnDemandStaticClasses = new ArrayList<>();\n \n             // TODO: this fails to account for multiple classes in the same file\n             // later classes (in the ACU) won't have their Nested classes registered\n             className = getClassName(node);\n             if (className != null) {\n                 populateClassName(node, className);\n             }\n-        } catch (ClassNotFoundException e) {\n-            if (LOG.isLoggable(Level.FINE)) {\n-                LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n-            }\n-        } catch (NoClassDefFoundError e) {\n+        } catch (ClassNotFoundException | NoClassDefFoundError e) {\n             if (LOG.isLoggable(Level.FINE)) {\n                 LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n             }\n         } catch (LinkageError e) {\n             if (LOG.isLoggable(Level.WARNING)) {\n                 LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n             }\n         } finally {\n             populateImports(node);\n         }\n         return super.visit(node, data);\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"2146a077ebbb902cd1460464a082bbfaacd2f4ce": {
			"type": "Ybodychange",
			"commitMessage": "Java, typeres: add static method resolution\n",
			"commitDate": "2017-07-24, 10:38 AM",
			"commitName": "2146a077ebbb902cd1460464a082bbfaacd2f4ce",
			"commitAuthor": "Bendegúz Nagy",
			"commitDateOld": "2017-07-21, 8:47 AM",
			"commitNameOld": "98172a26fee929ca7605a44f92f754acef5c3b3a",
			"commitAuthorOld": "Juan Martín Sotuyo Dodero",
			"daysBetweenCommits": 3.08,
			"commitsBetweenForRepo": 8,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,32 +1,33 @@\n     public Object visit(ASTCompilationUnit node, Object data) {\n         String className = null;\n         try {\n             currentAcu = node;\n             importedOnDemand = new ArrayList<>();\n             importedClasses = new HashMap<>();\n             staticFieldImageToTypeDef = new HashMap<>();\n-            staticFieldImportOnDemand = new ArrayList<>();\n+            staticNamesToClasses = new HashMap<>();\n+            importOnDemandStaticClasses = new ArrayList<>();\n \n             // TODO: this fails to account for multiple classes in the same file\n             // later classes (in the ACU) won't have their Nested classes registered\n             className = getClassName(node);\n             if (className != null) {\n                 populateClassName(node, className);\n             }\n         } catch (ClassNotFoundException e) {\n             if (LOG.isLoggable(Level.FINE)) {\n                 LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n             }\n         } catch (NoClassDefFoundError e) {\n             if (LOG.isLoggable(Level.FINE)) {\n                 LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n             }\n         } catch (LinkageError e) {\n             if (LOG.isLoggable(Level.WARNING)) {\n                 LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n             }\n         } finally {\n             populateImports(node);\n         }\n         return super.visit(node, data);\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"800cfa6e484e0ae704b4f2856ce7e5aa4b66509e": {
			"type": "Ybodychange",
			"commitMessage": "Java, typeres: add static field resolution\n",
			"commitDate": "2017-07-19, 12:22 PM",
			"commitName": "800cfa6e484e0ae704b4f2856ce7e5aa4b66509e",
			"commitAuthor": "Bendegúz Nagy",
			"commitDateOld": "2017-07-11, 1:35 AM",
			"commitNameOld": "4728eff5d6d4bd41d0eb157f55acabc595da6e62",
			"commitAuthorOld": "Bendegúz Nagy",
			"daysBetweenCommits": 8.45,
			"commitsBetweenForRepo": 32,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,26 +1,32 @@\n     public Object visit(ASTCompilationUnit node, Object data) {\n         String className = null;\n         try {\n+            currentAcu = node;\n             importedOnDemand = new ArrayList<>();\n             importedClasses = new HashMap<>();\n+            staticFieldImageToTypeDef = new HashMap<>();\n+            staticFieldImportOnDemand = new ArrayList<>();\n+\n+            // TODO: this fails to account for multiple classes in the same file\n+            // later classes (in the ACU) won't have their Nested classes registered\n             className = getClassName(node);\n             if (className != null) {\n                 populateClassName(node, className);\n             }\n         } catch (ClassNotFoundException e) {\n             if (LOG.isLoggable(Level.FINE)) {\n                 LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n             }\n         } catch (NoClassDefFoundError e) {\n             if (LOG.isLoggable(Level.FINE)) {\n                 LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n             }\n         } catch (LinkageError e) {\n             if (LOG.isLoggable(Level.WARNING)) {\n                 LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n             }\n         } finally {\n             populateImports(node);\n         }\n         return super.visit(node, data);\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"fd2dcddc447c8ae88fe5b1df9fca0326017309f8": {
			"type": "Ybodychange",
			"commitMessage": "Java 7 changes and some compiler warnings fixed\n",
			"commitDate": "2015-11-25, 1:06 PM",
			"commitName": "fd2dcddc447c8ae88fe5b1df9fca0326017309f8",
			"commitAuthor": "Andreas Dangel",
			"commitDateOld": "2015-11-20, 2:23 AM",
			"commitNameOld": "b4c2a517811f12528fb1cd81a45c465aef81fd27",
			"commitAuthorOld": "Andreas Dangel",
			"daysBetweenCommits": 5.45,
			"commitsBetweenForRepo": 3,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,26 +1,26 @@\n \tpublic Object visit(ASTCompilationUnit node, Object data) {\n \t\tString className = null;\n \t\ttry {\n-\t\t\timportedOnDemand = new ArrayList<String>();\n-\t\t\timportedClasses = new HashMap<String, String>();\n+\t\t\timportedOnDemand = new ArrayList<>();\n+\t\t\timportedClasses = new HashMap<>();\n \t\t\tclassName = getClassName(node);\n \t\t\tif (className != null) {\n \t\t\t\tpopulateClassName(node, className);\n \t\t\t}\n \t\t} catch (ClassNotFoundException e) {\n \t\t\tif (LOG.isLoggable(Level.FINE)) {\n \t\t\t\tLOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n \t\t\t}\n \t\t} catch (NoClassDefFoundError e) {\n \t\t\tif (LOG.isLoggable(Level.FINE)) {\n  \t\t\t\tLOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n  \t\t\t}\n \t\t} catch (LinkageError e) {\n \t\t\tif (LOG.isLoggable(Level.WARNING)) {\n \t\t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n \t\t\t}\n \t\t} finally {\n \t\t\tpopulateImports(node);\n \t\t}\n \t\treturn super.visit(node, data);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"1f6421ec8800fc0aebb2f46ccf2bac2b563862d7": {
			"type": "Ybodychange",
			"commitMessage": "Handle NoClassDefFoundError along ClassNotFoundException\n",
			"commitDate": "2015-02-15, 11:34 AM",
			"commitName": "1f6421ec8800fc0aebb2f46ccf2bac2b563862d7",
			"commitAuthor": "Roman",
			"commitDateOld": "2015-01-22, 10:30 AM",
			"commitNameOld": "9522ab3cd424182739e47bd16d0dde0974c8aa7e",
			"commitAuthorOld": "Andreas Dangel",
			"daysBetweenCommits": 24.04,
			"commitsBetweenForRepo": 8,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,22 +1,26 @@\n \tpublic Object visit(ASTCompilationUnit node, Object data) {\n \t\tString className = null;\n \t\ttry {\n \t\t\timportedOnDemand = new ArrayList<String>();\n \t\t\timportedClasses = new HashMap<String, String>();\n \t\t\tclassName = getClassName(node);\n \t\t\tif (className != null) {\n \t\t\t\tpopulateClassName(node, className);\n \t\t\t}\n \t\t} catch (ClassNotFoundException e) {\n-\t\t    if (LOG.isLoggable(Level.FINE)) {\n-\t\t        LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n-\t\t    }\n+\t\t\tif (LOG.isLoggable(Level.FINE)) {\n+\t\t\t\tLOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n+\t\t\t}\n+\t\t} catch (NoClassDefFoundError e) {\n+\t\t\tif (LOG.isLoggable(Level.FINE)) {\n+ \t\t\t\tLOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e);\n+ \t\t\t}\n \t\t} catch (LinkageError e) {\n-\t\t    if (LOG.isLoggable(Level.WARNING)) {\n-\t\t        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n-\t\t    }\n+\t\t\tif (LOG.isLoggable(Level.WARNING)) {\n+\t\t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e);\n+\t\t\t}\n \t\t} finally {\n \t\t\tpopulateImports(node);\n \t\t}\n \t\treturn super.visit(node, data);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"5f35ded04bae4c4a4446f78b7a6288f8dfa0472c": {
			"type": "Ybodychange",
			"commitMessage": "Fix PMD dogfood issues in pmd-java\n",
			"commitDate": "2014-11-16, 2:38 AM",
			"commitName": "5f35ded04bae4c4a4446f78b7a6288f8dfa0472c",
			"commitAuthor": "Andreas Dangel",
			"commitDateOld": "2014-10-04, 8:36 AM",
			"commitNameOld": "ad88b4784d78bf1698fac72cad3825144caf6863",
			"commitAuthorOld": "Andreas Dangel",
			"daysBetweenCommits": 42.79,
			"commitsBetweenForRepo": 93,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,18 +1,22 @@\n \tpublic Object visit(ASTCompilationUnit node, Object data) {\n \t\tString className = null;\n \t\ttry {\n \t\t\timportedOnDemand = new ArrayList<String>();\n \t\t\timportedClasses = new HashMap<String, String>();\n \t\t\tclassName = getClassName(node);\n \t\t\tif (className != null) {\n \t\t\t\tpopulateClassName(node, className);\n \t\t\t}\n \t\t} catch (ClassNotFoundException e) {\n-\t\t\tLOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n+\t\t    if (LOG.isLoggable(Level.FINE)) {\n+\t\t        LOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n+\t\t    }\n \t\t} catch (LinkageError e) {\n-\t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n+\t\t    if (LOG.isLoggable(Level.WARNING)) {\n+\t\t        LOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n+\t\t    }\n \t\t} finally {\n \t\t\tpopulateImports(node);\n \t\t}\n \t\treturn super.visit(node, data);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"ad88b4784d78bf1698fac72cad3825144caf6863": {
			"type": "Yfilerename",
			"commitMessage": "Move java into own sub-module pmd-java\n",
			"commitDate": "2014-10-04, 8:36 AM",
			"commitName": "ad88b4784d78bf1698fac72cad3825144caf6863",
			"commitAuthor": "Andreas Dangel",
			"commitDateOld": "2014-10-04, 7:59 AM",
			"commitNameOld": "fa950a82960993c7a7d70e276553b85174eec8b2",
			"commitAuthorOld": "Andreas Dangel",
			"daysBetweenCommits": 0.03,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "pmd/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
				"newPath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java"
			}
		},
		"b172c19de7f487e36e7185aaa41ea34c0734e130": {
			"type": "Ybodychange",
			"commitMessage": "Make PMD more fault-tolerant.",
			"commitDate": "2012-11-27, 1:17 PM",
			"commitName": "b172c19de7f487e36e7185aaa41ea34c0734e130",
			"commitAuthor": "rsalvador",
			"commitDateOld": "2011-11-21, 12:45 PM",
			"commitNameOld": "75daf38ed303bcdbfe1034fd3a070a4306402c2d",
			"commitAuthorOld": "Romain Pelisse",
			"daysBetweenCommits": 372.02,
			"commitsBetweenForRepo": 270,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,20 +1,18 @@\n \tpublic Object visit(ASTCompilationUnit node, Object data) {\n \t\tString className = null;\n \t\ttry {\n \t\t\timportedOnDemand = new ArrayList<String>();\n \t\t\timportedClasses = new HashMap<String, String>();\n \t\t\tclassName = getClassName(node);\n \t\t\tif (className != null) {\n \t\t\t\tpopulateClassName(node, className);\n \t\t\t}\n \t\t} catch (ClassNotFoundException e) {\n \t\t\tLOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n-\t\t} catch (NoClassDefFoundError e) {\n-\t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n-\t\t} catch (ClassFormatError e) {\n+\t\t} catch (LinkageError e) {\n \t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n \t\t} finally {\n \t\t\tpopulateImports(node);\n \t\t}\n \t\treturn super.visit(node, data);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"75daf38ed303bcdbfe1034fd3a070a4306402c2d": {
			"type": "Yfilerename",
			"commitMessage": "pmd: Move all java sources to src/main/java, adapt pom.xml, test and other files accordingly\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@7476 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2011-11-21, 12:45 PM",
			"commitName": "75daf38ed303bcdbfe1034fd3a070a4306402c2d",
			"commitAuthor": "Romain Pelisse",
			"commitDateOld": "2011-11-21, 10:10 AM",
			"commitNameOld": "821f452f692c1497e2849302b5d9417c90edc054",
			"commitAuthorOld": "Brian Remedios",
			"daysBetweenCommits": 0.11,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "pmd/src/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java",
				"newPath": "pmd/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java"
			}
		},
		"3aedf63a96d787f626b2876b134f81831db17117": {
			"type": "Ybodychange",
			"commitMessage": "Fix for 2904832.  ClassTypeResolver was clobbering the importedClasses in populateImports set by populateClassName.  Changed to clobber at ASTCompilationUnit, then everyone adds to the map.\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@7004 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2009-11-27, 10:10 AM",
			"commitName": "3aedf63a96d787f626b2876b134f81831db17117",
			"commitAuthor": "Ryan Gustafson",
			"commitDateOld": "2009-04-23, 7:55 PM",
			"commitNameOld": "09ae59bcf9d63d9b76202cc402fe741096a45641",
			"commitAuthorOld": "Ryan Gustafson",
			"daysBetweenCommits": 217.64,
			"commitsBetweenForRepo": 61,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,19 +1,20 @@\n \tpublic Object visit(ASTCompilationUnit node, Object data) {\n \t\tString className = null;\n \t\ttry {\n \t\t\timportedOnDemand = new ArrayList<String>();\n+\t\t\timportedClasses = new HashMap<String, String>();\n \t\t\tclassName = getClassName(node);\n \t\t\tif (className != null) {\n \t\t\t\tpopulateClassName(node, className);\n \t\t\t}\n \t\t} catch (ClassNotFoundException e) {\n \t\t\tLOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n \t\t} catch (NoClassDefFoundError e) {\n \t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n \t\t} catch (ClassFormatError e) {\n \t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n \t\t} finally {\n \t\t\tpopulateImports(node);\n \t\t}\n \t\treturn super.visit(node, data);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"c1c74ad02bfd383c4c29b608e524c9d8c2056ca2": {
			"type": "Ybodychange",
			"commitMessage": "Enhanced logging in the ClassTypeResolver to provide more detailed messaging.\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@6633 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2008-10-17, 10:20 PM",
			"commitName": "c1c74ad02bfd383c4c29b608e524c9d8c2056ca2",
			"commitAuthor": "Ryan Gustafson",
			"commitDateOld": "2008-06-29, 11:28 PM",
			"commitNameOld": "e0a5913f8c0e45bfa6874bf5d4589d18ac4d5a16",
			"commitAuthorOld": "Ryan Gustafson",
			"daysBetweenCommits": 109.95,
			"commitsBetweenForRepo": 275,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,19 +1,19 @@\n \tpublic Object visit(ASTCompilationUnit node, Object data) {\n \t\tString className = null;\n \t\ttry {\n \t\t\timportedOnDemand = new ArrayList<String>();\n \t\t\tclassName = getClassName(node);\n \t\t\tif (className != null) {\n \t\t\t\tpopulateClassName(node, className);\n \t\t\t}\n \t\t} catch (ClassNotFoundException e) {\n-\t\t\tLOG.log(Level.FINE, \"Could not find class \" + className);\n+\t\t\tLOG.log(Level.FINE, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n \t\t} catch (NoClassDefFoundError e) {\n-\t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className);\n+\t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n \t\t} catch (ClassFormatError e) {\n-\t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className);\n+\t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className + \", due to: \" + e.getClass().getName() + \": \" + e.getMessage());\n \t\t} finally {\n \t\t\tpopulateImports(node);\n \t\t}\n \t\treturn super.visit(node, data);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"ca6eda7e61fe4daf90682014e11fe1507fd331ed": {
			"type": "Yfilerename",
			"commitMessage": "Refactor Type Resolution from pmd.typeresolution into pmd.lang.java.typeresolution, as TR is currently Java only.\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@6141 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2008-05-22, 11:32 PM",
			"commitName": "ca6eda7e61fe4daf90682014e11fe1507fd331ed",
			"commitAuthor": "Ryan Gustafson",
			"commitDateOld": "2008-05-22, 11:31 PM",
			"commitNameOld": "e2a1216285ade21204cd926884d8fdf8fbba75c6",
			"commitAuthorOld": "Ryan Gustafson",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "pmd/src/net/sourceforge/pmd/typeresolution/ClassTypeResolver.java",
				"newPath": "pmd/src/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java"
			}
		},
		"c595c61edd4259c73748baab5bf0c952eda9a374": {
			"type": "Ybodychange",
			"commitMessage": "Add -auxclasspath option for specifying Type Resolution classpath from command line.\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5890 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2008-03-11, 1:03 PM",
			"commitName": "c595c61edd4259c73748baab5bf0c952eda9a374",
			"commitAuthor": "Ryan Gustafson",
			"commitDateOld": "2008-03-05, 6:35 PM",
			"commitNameOld": "a11337cab43043fde6cebd376173a220a696973a",
			"commitAuthorOld": "Ryan Gustafson",
			"daysBetweenCommits": 5.73,
			"commitsBetweenForRepo": 20,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,17 +1,19 @@\n \tpublic Object visit(ASTCompilationUnit node, Object data) {\n \t\tString className = null;\n \t\ttry {\n \t\t\timportedOnDemand = new ArrayList<String>();\n \t\t\tclassName = getClassName(node);\n \t\t\tif (className != null) {\n \t\t\t\tpopulateClassName(node, className);\n \t\t\t}\n \t\t} catch (ClassNotFoundException e) {\n \t\t\tLOG.log(Level.FINE, \"Could not find class \" + className);\n \t\t} catch (NoClassDefFoundError e) {\n \t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className);\n+\t\t} catch (ClassFormatError e) {\n+\t\t\tLOG.log(Level.WARNING, \"Could not find class \" + className);\n \t\t} finally {\n \t\t\tpopulateImports(node);\n \t\t}\n \t\treturn super.visit(node, data);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"40501042ce13fce37eb69fbcf2ec34642133aeaf": {
			"type": "Ybodychange",
			"commitMessage": "Nothing substantial, just poking around ClassTypeResolver a bit to make sure I understand how things work\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5672 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2007-11-20, 7:57 PM",
			"commitName": "40501042ce13fce37eb69fbcf2ec34642133aeaf",
			"commitAuthor": "Tom Copeland",
			"commitDateOld": "2007-11-18, 7:06 PM",
			"commitNameOld": "8674cb4b18750b56f618f93c5882644fce41e83c",
			"commitAuthorOld": "Tom Copeland",
			"daysBetweenCommits": 2.04,
			"commitsBetweenForRepo": 10,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,16 +1,17 @@\n     public Object visit(ASTCompilationUnit node, Object data) {\n-\n         String className = null;\n         try {\n             importedOnDemand = new ArrayList<String>();\n             className = getClassName(node);\n-            populateClassName(node, className);\n+            if (className != null) {\n+                populateClassName(node, className);\n+            }\n         } catch (ClassNotFoundException e) {\n             LOG.log(Level.FINE, \"Could not find class \" + className);\n         } catch (NoClassDefFoundError e) {\n             LOG.log(Level.WARNING, \"Could not find class \" + className);\n         } finally {\n             populateImports(node);\n         }\n         return super.visit(node, data);\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"a708221106c1084c8aef235b14c39ad0f2c6bb1a": {
			"type": "Ybodychange",
			"commitMessage": "Reduced the log level since this Exception usually does not indicate a problem\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5506 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2007-10-04, 7:10 AM",
			"commitName": "a708221106c1084c8aef235b14c39ad0f2c6bb1a",
			"commitAuthor": "Wouter Zelle",
			"commitDateOld": "2007-10-04, 5:23 AM",
			"commitNameOld": "1b4aef4e56a27d4f13aed630d4e91cc8d36d2066",
			"commitAuthorOld": "Wouter Zelle",
			"daysBetweenCommits": 0.07,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,16 +1,16 @@\n     public Object visit(ASTCompilationUnit node, Object data) {\n \n         String className = null;\n         try {\n             importedOnDemand = new ArrayList<String>();\n             className = getClassName(node);\n             populateClassName(node, className);\n         } catch (ClassNotFoundException e) {\n-            LOG.log(Level.WARNING, \"Could not find class \" + className);\n+            LOG.log(Level.FINE, \"Could not find class \" + className);\n         } catch (NoClassDefFoundError e) {\n             LOG.log(Level.WARNING, \"Could not find class \" + className);\n         } finally {\n             populateImports(node);\n         }\n         return super.visit(node, data);\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"1b4aef4e56a27d4f13aed630d4e91cc8d36d2066": {
			"type": "Ybodychange",
			"commitMessage": "Fixed classname in warnings\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5505 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2007-10-04, 5:23 AM",
			"commitName": "1b4aef4e56a27d4f13aed630d4e91cc8d36d2066",
			"commitAuthor": "Wouter Zelle",
			"commitDateOld": "2007-08-28, 2:01 PM",
			"commitNameOld": "3bbc6575ef1ade840f1bfa7b9d9090a20a4e1394",
			"commitAuthorOld": "Allan Caplan",
			"daysBetweenCommits": 36.64,
			"commitsBetweenForRepo": 21,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,16 +1,16 @@\n     public Object visit(ASTCompilationUnit node, Object data) {\n \n         String className = null;\n         try {\n             importedOnDemand = new ArrayList<String>();\n             className = getClassName(node);\n             populateClassName(node, className);\n         } catch (ClassNotFoundException e) {\n-            LOG.log(Level.WARNING, \"Could not find class {0}\", className);\n+            LOG.log(Level.WARNING, \"Could not find class \" + className);\n         } catch (NoClassDefFoundError e) {\n-            LOG.log(Level.WARNING, \"Could not find class {0}\", className);\n+            LOG.log(Level.WARNING, \"Could not find class \" + className);\n         } finally {\n             populateImports(node);\n         }\n         return super.visit(node, data);\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"3bbc6575ef1ade840f1bfa7b9d9090a20a4e1394": {
			"type": "Ybodychange",
			"commitMessage": "First changes moving PMD to Type Resolution\n\n- Moved all JUnit tests to Type Resolution\n- All JUnit java rules extend AbstractJUnitRule, which  now has a common method to determine if this is really a test class or not. This will save needless processing, should reduce runtime as well (did not test runtime specifically)\n\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5484 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2007-08-28, 2:01 PM",
			"commitName": "3bbc6575ef1ade840f1bfa7b9d9090a20a4e1394",
			"commitAuthor": "Allan Caplan",
			"commitDateOld": "2007-08-21, 5:35 AM",
			"commitNameOld": "f0acb0aea6dcea34b695101fa000e4ef6fde93d6",
			"commitAuthorOld": "Allan Caplan",
			"daysBetweenCommits": 7.35,
			"commitsBetweenForRepo": 15,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,13 +1,16 @@\n     public Object visit(ASTCompilationUnit node, Object data) {\n \n+        String className = null;\n         try {\n             importedOnDemand = new ArrayList<String>();\n-            populateClassName(node);\n+            className = getClassName(node);\n+            populateClassName(node, className);\n         } catch (ClassNotFoundException e) {\n-            // Implicit imports\n+            LOG.log(Level.WARNING, \"Could not find class {0}\", className);\n         } catch (NoClassDefFoundError e) {\n+            LOG.log(Level.WARNING, \"Could not find class {0}\", className);\n         } finally {\n             populateImports(node);\n         }\n         return super.visit(node, data);\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"ad46a291ea19b057a88588db2c80f50374599b6a": {
			"type": "Ybodychange",
			"commitMessage": "Type resolution now works for implicit imports\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5098 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2007-04-16, 3:16 PM",
			"commitName": "ad46a291ea19b057a88588db2c80f50374599b6a",
			"commitAuthor": "Wouter Zelle",
			"commitDateOld": "2007-02-03, 4:48 AM",
			"commitNameOld": "8812185444622ed8606bbcf79aed12477786a877",
			"commitAuthorOld": "Allan Caplan",
			"daysBetweenCommits": 72.39,
			"commitsBetweenForRepo": 65,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,12 +1,12 @@\n \tpublic Object visit(ASTCompilationUnit node, Object data) {\n \t\ttry {\n             importedOnDemand = new ArrayList<String>();\n \t\t\tpopulateClassName(node);\n-            populateImports(node, true);\n \t\t} catch (ClassNotFoundException e) {\n-\t\t\tpopulateImports(node, false);\n+            //Implicit imports\n \t\t} catch (NoClassDefFoundError e) {\n-\t\t\tpopulateImports(node, false);\n-\t\t}\n+\t\t} finally {\n+            populateImports(node);\n+        }\n \t\treturn super.visit(node, data);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"8812185444622ed8606bbcf79aed12477786a877": {
			"type": "Ybodychange",
			"commitMessage": "Fixed Defect 1451251\n\nAdded a new typeresolution rule - UnusedImports which finds unused on demand imports\n\nUpdated typeresolution to populate the type of ASTNames without VariableNameDeclarations - These are typically statically called methods from other classes such as Arrays.asList.\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@5031 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2007-02-03, 4:48 AM",
			"commitName": "8812185444622ed8606bbcf79aed12477786a877",
			"commitAuthor": "Allan Caplan",
			"commitDateOld": "2007-01-30, 4:53 PM",
			"commitNameOld": "02a809e807dd19189286e5a79d4d1eecaa31c364",
			"commitAuthorOld": "Xavier Le Vourch",
			"daysBetweenCommits": 3.5,
			"commitsBetweenForRepo": 14,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,10 +1,12 @@\n \tpublic Object visit(ASTCompilationUnit node, Object data) {\n \t\ttry {\n+            importedOnDemand = new ArrayList<String>();\n \t\t\tpopulateClassName(node);\n+            populateImports(node, true);\n \t\t} catch (ClassNotFoundException e) {\n-\t\t\tpopulateImports(node);\n+\t\t\tpopulateImports(node, false);\n \t\t} catch (NoClassDefFoundError e) {\n-\t\t\tpopulateImports(node);\n+\t\t\tpopulateImports(node, false);\n \t\t}\n \t\treturn super.visit(node, data);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"33a6d45cd1953696b60a2e1abbb92738bc136ffc": {
			"type": "Ybodychange",
			"commitMessage": "NoClassDefFoundError exception caught to prevent pmd from exiting on type resolver issues\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@4952 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2007-01-17, 5:23 PM",
			"commitName": "33a6d45cd1953696b60a2e1abbb92738bc136ffc",
			"commitAuthor": "Xavier Le Vourch",
			"commitDateOld": "2006-10-25, 7:35 PM",
			"commitNameOld": "6215d97b9e136a46f58f13dd30c65690fef4a28d",
			"commitAuthorOld": "Allan Caplan",
			"daysBetweenCommits": 83.95,
			"commitsBetweenForRepo": 205,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,8 +1,10 @@\n \tpublic Object visit(ASTCompilationUnit node, Object data) {\n \t\ttry {\n \t\t\tpopulateClassName(node);\n \t\t} catch (ClassNotFoundException e) {\n \t\t\tpopulateImports(node);\n+\t\t} catch (NoClassDefFoundError e) {\n+\t\t\tpopulateImports(node);\n \t\t}\n \t\treturn super.visit(node, data);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"6215d97b9e136a46f58f13dd30c65690fef4a28d": {
			"type": "Yintroduced",
			"commitMessage": "Checkin of the Type Resolution Facility\n\nRe-implemented LooseCoupling as a new rule - new or changed type resolution rules should go in typeresolution to be separated.\n\nI have not added this to 39.xml!\n\nSorry about the lack of comments, will go through and try and get important things commented.\n\nThere's a couple TODO's that if addressed should help performance.\n\nRemember, to run compiled classes must be in the CLASSPATH!\n\n\ngit-svn-id: https://pmd.svn.sourceforge.net/svnroot/pmd/trunk@4744 51baf565-9d33-0410-a72c-fc3788e3496d\n",
			"commitDate": "2006-10-25, 7:35 PM",
			"commitName": "6215d97b9e136a46f58f13dd30c65690fef4a28d",
			"commitAuthor": "Allan Caplan",
			"diff": "@@ -0,0 +1,8 @@\n+\tpublic Object visit(ASTCompilationUnit node, Object data) {\n+\t\ttry {\n+\t\t\tpopulateClassName(node);\n+\t\t} catch (ClassNotFoundException e) {\n+\t\t\tpopulateImports(node);\n+\t\t}\n+\t\treturn super.visit(node, data);\n+\t}\n\\ No newline at end of file\n"
		}
	},
	"sha": "d528dcd5d45582229ab3410deb7c40b2143d015d"
}