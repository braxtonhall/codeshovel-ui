{
	"repo": "https://github.com/junit-team/junit5.git",
	"file": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
	"method": {
		"longName": "AvailableOptions::toCommandLineOptions(OptionSet detectedOptions)",
		"startLine": 220,
		"methodName": "toCommandLineOptions",
		"isStatic": false,
		"isAbstract": false,
		"visibility": ""
	},
	"history": {
		"c52afe0668c462a5935a708cb396d234eeb018d4": {
			"type": "Ybodychange",
			"commitMessage": "Add --fail-if-no-tests command line option to ConsoleLauncher (#1399)\n\nPrior to this commit, if the ConsoleLauncher found no tests it would\r\nexit with a success status. This could happen by user mistake -- for\r\nexample, due to improper use of a selector. In such situations, a user\r\nwould not be informed of the misconfiguration.\r\n\r\nThis commit introduces a new `--fail-if-not-tests` command-line option\r\nfor the ConsoleLauncher. This flag can be set to `true` to make the\r\nlauncher fail when no tests are found, helping users catch such\r\nmisconfigurations.\r\n\r\nCloses: #1298\r\n",
			"commitDate": "2018-06-02, 10:18 AM",
			"commitName": "c52afe0668c462a5935a708cb396d234eeb018d4",
			"commitAuthor": "Giorgos Gaganis",
			"commitDateOld": "2018-04-06, 5:41 AM",
			"commitNameOld": "ce303c347e42b606ce51eaf72294dabf19a0ae72",
			"commitAuthorOld": "Sam Brannen",
			"daysBetweenCommits": 57.19,
			"commitsBetweenForRepo": 188,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,44 +1,45 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setDetails(detectedOptions.valueOf(this.details));\n \t\tresult.setTheme(detectedOptions.valueOf(this.theme));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n+\t\tresult.setFailIfNoTests(detectedOptions.has(this.failIfNoTests));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Java Platform Module System\n \t\tresult.setScanModulepath(detectedOptions.has(this.scanModulepath));\n \t\tresult.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n \t\tresult.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n \t\tresult.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n \t\tresult.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n \t\tresult.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n \t\tresult.setIncludedTagExpressions(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTagExpressions(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\t// Configuration Parameters\n \t\tresult.setConfigurationParameters(toMap(detectedOptions.valuesOf(this.configurationParameters)));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"b3cec572c6334095f84ec009d5488370119e62c9": {
			"type": "Ybodychange",
			"commitMessage": "Emit helpful message when a configuration key is not unique\n\nPrior to this commit a bug [1] in Java 8's stream toMap() collector did\nreport the value instead of the duplicated key in the exception message.\nNow, a custom list-to-map helper always emits a helpful error message.\n\n[1] https://bugs.openjdk.java.net/browse/JDK-8040892\n\nCloses #1308\n",
			"commitDate": "2018-02-28, 12:14 AM",
			"commitName": "b3cec572c6334095f84ec009d5488370119e62c9",
			"commitAuthor": "Christian Stein",
			"commitDateOld": "2018-01-23, 1:51 PM",
			"commitNameOld": "f9c6e768eb82df9b8a11da5c7a9f64b889dad44d",
			"commitAuthorOld": "Marc Philipp",
			"daysBetweenCommits": 35.43,
			"commitsBetweenForRepo": 142,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,46 +1,44 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setDetails(detectedOptions.valueOf(this.details));\n \t\tresult.setTheme(detectedOptions.valueOf(this.theme));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Java Platform Module System\n \t\tresult.setScanModulepath(detectedOptions.has(this.scanModulepath));\n \t\tresult.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n \t\tresult.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n \t\tresult.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n \t\tresult.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n \t\tresult.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n \t\tresult.setIncludedTagExpressions(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTagExpressions(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\t// Configuration Parameters\n-\t\tMap<String, String> configurationParametersMap = detectedOptions.valuesOf(\n-\t\t\tthis.configurationParameters).stream().collect(toMap(pair -> pair.key, pair -> pair.value));\n-\t\tresult.setConfigurationParameters(configurationParametersMap);\n+\t\tresult.setConfigurationParameters(toMap(detectedOptions.valuesOf(this.configurationParameters)));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"f9c6e768eb82df9b8a11da5c7a9f64b889dad44d": {
			"type": "Ybodychange",
			"commitMessage": "Add additional documentation for tag expressions\n\nIssue: #454\n",
			"commitDate": "2018-01-23, 1:51 PM",
			"commitName": "f9c6e768eb82df9b8a11da5c7a9f64b889dad44d",
			"commitAuthor": "Marc Philipp",
			"commitDateOld": "2018-01-23, 1:51 PM",
			"commitNameOld": "16cc3e4c3bc2e91cde7e720ca731112e0123c6a9",
			"commitAuthorOld": "Thomas Heilbronner",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,46 +1,46 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setDetails(detectedOptions.valueOf(this.details));\n \t\tresult.setTheme(detectedOptions.valueOf(this.theme));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Java Platform Module System\n \t\tresult.setScanModulepath(detectedOptions.has(this.scanModulepath));\n \t\tresult.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n \t\tresult.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n \t\tresult.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n \t\tresult.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n \t\tresult.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n-\t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n-\t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n+\t\tresult.setIncludedTagExpressions(detectedOptions.valuesOf(this.includeTag));\n+\t\tresult.setExcludedTagExpressions(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\t// Configuration Parameters\n \t\tMap<String, String> configurationParametersMap = detectedOptions.valuesOf(\n \t\t\tthis.configurationParameters).stream().collect(toMap(pair -> pair.key, pair -> pair.value));\n \t\tresult.setConfigurationParameters(configurationParametersMap);\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"3e042ee4923b029711682d81cec89e33d48cf842": {
			"type": "Ybodychange",
			"commitMessage": "Add \"--scan-module-path\" to the command line options\n\nInternally it is treated as if \"--select-module ALL-MODULES\" was given.\nIn the future \"--scan-module-path\" might support custom path entries\nthat are routed to the 'ModuleFinder.of(...)' factory method allowing\ncustom module-paths to be specified at runtime.\n",
			"commitDate": "2017-10-17, 5:38 AM",
			"commitName": "3e042ee4923b029711682d81cec89e33d48cf842",
			"commitAuthor": "Christian Stein",
			"commitDateOld": "2017-10-17, 5:38 AM",
			"commitNameOld": "e909f6f1acae468907e09fa23edb90c1143e7fb9",
			"commitAuthorOld": "Christian Stein",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,43 +1,46 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setDetails(detectedOptions.valueOf(this.details));\n \t\tresult.setTheme(detectedOptions.valueOf(this.theme));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n+\t\t// Java Platform Module System\n+\t\tresult.setScanModulepath(detectedOptions.has(this.scanModulepath));\n+\t\tresult.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n+\n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n \t\tresult.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n-\t\tresult.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n \t\tresult.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n \t\tresult.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n \t\tresult.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\t// Configuration Parameters\n \t\tMap<String, String> configurationParametersMap = detectedOptions.valuesOf(\n \t\t\tthis.configurationParameters).stream().collect(toMap(pair -> pair.key, pair -> pair.value));\n \t\tresult.setConfigurationParameters(configurationParametersMap);\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"e909f6f1acae468907e09fa23edb90c1143e7fb9": {
			"type": "Ybodychange",
			"commitMessage": "Add ModuleSelector and introduce console option `--select-module name`\n",
			"commitDate": "2017-10-17, 5:38 AM",
			"commitName": "e909f6f1acae468907e09fa23edb90c1143e7fb9",
			"commitAuthor": "Christian Stein",
			"commitDateOld": "2017-09-22, 9:04 AM",
			"commitNameOld": "403c821e95f6c66081ca11fd490867eb78aa2795",
			"commitAuthorOld": "Sam Brannen",
			"daysBetweenCommits": 24.86,
			"commitsBetweenForRepo": 75,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,42 +1,43 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setDetails(detectedOptions.valueOf(this.details));\n \t\tresult.setTheme(detectedOptions.valueOf(this.theme));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n \t\tresult.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n+\t\tresult.setSelectedModules(detectedOptions.valuesOf(this.selectedModules));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n \t\tresult.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n \t\tresult.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n \t\tresult.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\t// Configuration Parameters\n \t\tMap<String, String> configurationParametersMap = detectedOptions.valuesOf(\n \t\t\tthis.configurationParameters).stream().collect(toMap(pair -> pair.key, pair -> pair.value));\n \t\tresult.setConfigurationParameters(configurationParametersMap);\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"7661592bbfaf2a3b541a0bd3a56993cb4834c12e": {
			"type": "Ybodychange",
			"commitMessage": "Introduce --config for setting config params from ConsoleLauncher\n\nIssue: #1015\n",
			"commitDate": "2017-08-22, 12:03 PM",
			"commitName": "7661592bbfaf2a3b541a0bd3a56993cb4834c12e",
			"commitAuthor": "Marc Philipp",
			"commitDateOld": "2017-04-03, 1:52 PM",
			"commitNameOld": "625b078b899db47bfdcc5831609cc04deb8c304b",
			"commitAuthorOld": "Christian Stein",
			"daysBetweenCommits": 140.92,
			"commitsBetweenForRepo": 453,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,37 +1,42 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setDetails(detectedOptions.valueOf(this.details));\n \t\tresult.setTheme(detectedOptions.valueOf(this.theme));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n \t\tresult.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n \t\tresult.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n \t\tresult.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n \t\tresult.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n+\t\t// Configuration Parameters\n+\t\tMap<String, String> configurationParametersMap = detectedOptions.valuesOf(\n+\t\t\tthis.configurationParameters).stream().collect(toMap(pair -> pair.key, pair -> pair.value));\n+\t\tresult.setConfigurationParameters(configurationParametersMap);\n+\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"b10a4ee18d51d93180d22f5cd1c04d12bd2d185e": {
			"type": "Ybodychange",
			"commitMessage": "New command line option: --details-theme\n",
			"commitDate": "2017-03-08, 6:06 PM",
			"commitName": "b10a4ee18d51d93180d22f5cd1c04d12bd2d185e",
			"commitAuthor": "Christian Stein",
			"commitDateOld": "2017-02-01, 6:43 AM",
			"commitNameOld": "b701ea2fc13c53db6259e48b36e5c24d463b90ea",
			"commitAuthorOld": "Matthias Merdes",
			"daysBetweenCommits": 35.47,
			"commitsBetweenForRepo": 88,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,36 +1,37 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setDetails(detectedOptions.valueOf(this.details));\n+\t\tresult.setTheme(detectedOptions.valueOf(this.theme));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n \t\tresult.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n \t\tresult.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n \t\tresult.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n \t\tresult.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"b701ea2fc13c53db6259e48b36e5c24d463b90ea": {
			"type": "Ybodychange",
			"commitMessage": "Introduce exclude class name filter support in the ConsoleLauncher\n\n#314\n",
			"commitDate": "2017-02-01, 6:43 AM",
			"commitName": "b701ea2fc13c53db6259e48b36e5c24d463b90ea",
			"commitAuthor": "Matthias Merdes",
			"commitDateOld": "2017-01-19, 1:46 PM",
			"commitNameOld": "62ec592d6de9c5d7902b51c7eac35834fc9f81e1",
			"commitAuthorOld": "Christian Stein",
			"daysBetweenCommits": 12.71,
			"commitsBetweenForRepo": 5,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,35 +1,36 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setDetails(detectedOptions.valueOf(this.details));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n \t\tresult.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n+\t\tresult.setExcludedClassNamePatterns(detectedOptions.valuesOf(this.excludeClassNamePattern));\n \t\tresult.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n \t\tresult.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"a64e354fa285ecd9297521ca327d9fbed34c21c9": {
			"type": "Ybodychange",
			"commitMessage": "Introduce ASCII-based tree printing TestExecutionListeners\n\nThis commit introduces `TreePrintingListener` and\r\n`VerboseTreePrintingListener` which render ASCII-based tree layouts for\r\nthe executed test plan. If the default character set encoding (e.g.,\r\nfor the terminal or build environment) is UTF-8, then extended ASCII\r\ncharacters are used to display the test execution tree; otherwise,\r\nstandard 7-bit ASCII characters are used to display the test tree.\r\n\r\nA new enum named `Details` has been introduced in the\r\n`org.junit.platform.console.options` package in order to allow the user\r\nto choose between various display modes:\r\n\r\n - NONE: No test plan execution details are printed.\r\n - FLAT: Test plan execution details are rendered in a flat,\r\n   line-per-line mode.\r\n - TREE: Test plan execution details are rendered as a simple tree.\r\n - VERBOSE: Combines tree and flat mode.\r\n\r\nConsequently, the original `ColoredPrintingTestListener` has been\r\nrenamed to `FlatPrintingListener`.\r\n\r\nIn addition, the `--hide-details` command line option is now deprecated\r\nin favor of `--details none`.\r\n\r\nIssues: #369, #546\r\n\r\n---\r\nI hereby agree to the terms of the JUnit Contributor License Agreement.\r\n",
			"commitDate": "2017-01-18, 5:07 PM",
			"commitName": "a64e354fa285ecd9297521ca327d9fbed34c21c9",
			"commitAuthor": "Christian Stein",
			"commitDateOld": "2017-01-02, 1:10 PM",
			"commitNameOld": "73f3eeb436e78226f19554f2c2b5dab63e103670",
			"commitAuthorOld": "JUnit Team",
			"daysBetweenCommits": 16.16,
			"commitsBetweenForRepo": 27,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,35 +1,35 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n-\t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n+\t\tresult.setDetails(detectedOptions.valueOf(this.details));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n \t\tresult.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n \t\tresult.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n \t\tresult.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"d1043ffcc05ab6f6626868dab808ebf65a0c311c": {
			"type": "Ybodychange",
			"commitMessage": "add PackageNameFilter for including and excluding package names.\n\nIssues: #313\n",
			"commitDate": "2016-11-21, 11:46 PM",
			"commitName": "d1043ffcc05ab6f6626868dab808ebf65a0c311c",
			"commitAuthor": "Stefan Bechtold",
			"commitDateOld": "2016-11-12, 11:31 AM",
			"commitNameOld": "536acefeb28ee6a37853b4fccc3850f43e543861",
			"commitAuthorOld": "Marc Philipp",
			"daysBetweenCommits": 9.51,
			"commitsBetweenForRepo": 14,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,33 +1,35 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n \t\tresult.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n+\t\tresult.setIncludedPackages(detectedOptions.valuesOf(this.includePackage));\n+\t\tresult.setExcludedPackages(detectedOptions.valuesOf(this.excludePackage));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"536acefeb28ee6a37853b4fccc3850f43e543861": {
			"type": "Ybodychange",
			"commitMessage": "Remove support for non-option arguments for --scan-classpath (step 2)\n\n#555\n",
			"commitDate": "2016-11-12, 11:31 AM",
			"commitName": "536acefeb28ee6a37853b4fccc3850f43e543861",
			"commitAuthor": "Marc Philipp",
			"commitDateOld": "2016-11-12, 11:11 AM",
			"commitNameOld": "adaf70d9d08a3ab2002e6365ea9ae52c5013c8d4",
			"commitAuthorOld": "Marc Philipp",
			"daysBetweenCommits": 0.01,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,37 +1,33 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n-\t\t// TODO simplify this\n-\t\tList<Path> selectedClasspathEntries = new LinkedList<>(detectedOptions.valuesOf(this.selectedClasspathEntries));\n-\t\tdetectedOptions.valuesOf(this.arguments).stream().map(Paths::get).forEach(selectedClasspathEntries::add);\n-\t\tresult.setSelectedClasspathEntries(selectedClasspathEntries);\n-\n+\t\tresult.setSelectedClasspathEntries(detectedOptions.valuesOf(this.selectedClasspathEntries));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"adaf70d9d08a3ab2002e6365ea9ae52c5013c8d4": {
			"type": "Ybodychange",
			"commitMessage": "Accept option arguments for --scan-classpath (step 1)\n\n#555\n",
			"commitDate": "2016-11-12, 11:11 AM",
			"commitName": "adaf70d9d08a3ab2002e6365ea9ae52c5013c8d4",
			"commitAuthor": "Marc Philipp",
			"commitDateOld": "2016-11-06, 11:38 AM",
			"commitNameOld": "36665aadaa829bc2bc003e245fa05e99f2bebfd8",
			"commitAuthorOld": "Marc Philipp",
			"daysBetweenCommits": 5.98,
			"commitsBetweenForRepo": 11,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,33 +1,37 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n-\t\tresult.setScanClasspath(detectedOptions.has(this.scanClasspath));\n-\t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n+\t\tresult.setScanClasspath(detectedOptions.has(this.selectedClasspathEntries));\n+\t\t// TODO simplify this\n+\t\tList<Path> selectedClasspathEntries = new LinkedList<>(detectedOptions.valuesOf(this.selectedClasspathEntries));\n+\t\tdetectedOptions.valuesOf(this.arguments).stream().map(Paths::get).forEach(selectedClasspathEntries::add);\n+\t\tresult.setSelectedClasspathEntries(selectedClasspathEntries);\n+\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"36665aadaa829bc2bc003e245fa05e99f2bebfd8": {
			"type": "Ybodychange",
			"commitMessage": "Support multiple include patterns for class names in ConsoleLauncher\n\n#474\n",
			"commitDate": "2016-11-06, 11:38 AM",
			"commitName": "36665aadaa829bc2bc003e245fa05e99f2bebfd8",
			"commitAuthor": "Marc Philipp",
			"commitDateOld": "2016-11-02, 6:19 AM",
			"commitNameOld": "1243f3dfa6df67ec1fa45ea884d8f7993bf5bbe8",
			"commitAuthorOld": "Marc Philipp",
			"daysBetweenCommits": 4.26,
			"commitsBetweenForRepo": 19,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,33 +1,33 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.scanClasspath));\n \t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n-\t\tresult.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n+\t\tresult.setIncludedClassNamePatterns(detectedOptions.valuesOf(this.includeClassNamePattern));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"1243f3dfa6df67ec1fa45ea884d8f7993bf5bbe8": {
			"type": "Ybodychange",
			"commitMessage": "Support selecting a classpath resource in ConsoleLauncher\n\nIssue: #452\n",
			"commitDate": "2016-11-02, 6:19 AM",
			"commitName": "1243f3dfa6df67ec1fa45ea884d8f7993bf5bbe8",
			"commitAuthor": "Marc Philipp",
			"commitDateOld": "2016-11-02, 5:03 AM",
			"commitNameOld": "8cf2a7b372be1436f73d2803891cc305275913a6",
			"commitAuthorOld": "Marc Philipp",
			"daysBetweenCommits": 0.05,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,32 +1,33 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.scanClasspath));\n \t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n \t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n \t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n+\t\tresult.setSelectedClasspathResources(detectedOptions.valuesOf(this.selectedClasspathResources));\n \n \t\t// Filters\n \t\tresult.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"8cf2a7b372be1436f73d2803891cc305275913a6": {
			"type": "Ybodychange",
			"commitMessage": "Support selecting a package/class/method in ConsoleLauncher\n\nIssue: #437\n",
			"commitDate": "2016-11-02, 5:03 AM",
			"commitName": "8cf2a7b372be1436f73d2803891cc305275913a6",
			"commitAuthor": "Marc Philipp",
			"commitDateOld": "2016-11-02, 2:52 AM",
			"commitNameOld": "862e93157164d37eaa1b087aaa9d3d449ac792c6",
			"commitAuthorOld": "Marc Philipp",
			"daysBetweenCommits": 0.09,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,29 +1,32 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.scanClasspath));\n \t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n \t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n+\t\tresult.setSelectedPackages(detectedOptions.valuesOf(this.selectedPackages));\n+\t\tresult.setSelectedClasses(detectedOptions.valuesOf(this.selectedClasses));\n+\t\tresult.setSelectedMethods(detectedOptions.valuesOf(this.selectedMethods));\n \n \t\t// Filters\n \t\tresult.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"862e93157164d37eaa1b087aaa9d3d449ac792c6": {
			"type": "Ybodychange",
			"commitMessage": "Introduce support for selecting files & directories in ConsoleLauncher\n\nIssue: #453\n",
			"commitDate": "2016-11-02, 2:52 AM",
			"commitName": "862e93157164d37eaa1b087aaa9d3d449ac792c6",
			"commitAuthor": "Marc Philipp",
			"commitDateOld": "2016-11-01, 11:21 AM",
			"commitNameOld": "14dc25aaf77f1694aef55e1f593c6584b997769a",
			"commitAuthorOld": "Marc Philipp",
			"daysBetweenCommits": 0.65,
			"commitsBetweenForRepo": 4,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,27 +1,29 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.scanClasspath));\n \t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n \t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n+\t\tresult.setSelectedFiles(detectedOptions.valuesOf(this.selectedFiles));\n+\t\tresult.setSelectedDirectories(detectedOptions.valuesOf(this.selectedDirectories));\n \n \t\t// Filters\n \t\tresult.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"14dc25aaf77f1694aef55e1f593c6584b997769a": {
			"type": "Ybodychange",
			"commitMessage": "Add -u/--select-uri command-line option (#470)\n",
			"commitDate": "2016-11-01, 11:21 AM",
			"commitName": "14dc25aaf77f1694aef55e1f593c6584b997769a",
			"commitAuthor": "Marc Philipp",
			"commitDateOld": "2016-09-12, 1:55 PM",
			"commitNameOld": "429ec6ff9817b0d291d398b7eb2adc7fd4ead510",
			"commitAuthorOld": "Marc Philipp",
			"daysBetweenCommits": 49.89,
			"commitsBetweenForRepo": 61,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,26 +1,27 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setScanClasspath(detectedOptions.has(this.scanClasspath));\n \t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n+\t\tresult.setSelectedUris(detectedOptions.valuesOf(this.selectedUris));\n \n \t\t// Filters\n \t\tresult.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"75da1de42ac3fffb0e28acc4bf5312dcf22ff84c": {
			"type": "Ybodychange",
			"commitMessage": "Introduce --scan-class-path alias for -a | --all CL options in ConsoleLauncher\n\nThis commit introduces a `--scan-class-path` alias for the `-a` and\n`--all` command-line options in the `ConsoleLauncher`.\n\nIssue: #468\n",
			"commitDate": "2016-08-19, 10:35 AM",
			"commitName": "75da1de42ac3fffb0e28acc4bf5312dcf22ff84c",
			"commitAuthor": "Sam Brannen",
			"commitDateOld": "2016-08-19, 10:12 AM",
			"commitNameOld": "f2e6ef078a40e97ee16aebbf262c0ed4a4a0b01b",
			"commitAuthorOld": "Sam Brannen",
			"daysBetweenCommits": 0.02,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,26 +1,26 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n-\t\tresult.setRunAllTests(detectedOptions.has(this.runAllTests));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n \t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n+\t\tresult.setScanClasspath(detectedOptions.has(this.scanClasspath));\n \t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n \n \t\t// Filters\n \t\tresult.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"f2e6ef078a40e97ee16aebbf262c0ed4a4a0b01b": {
			"type": "Ybodychange",
			"commitMessage": "Rename --xml-reports-dir CL option for ConsoleLauncher to --reports-dir\n\nThis commit renames the `--xml-reports-dir` command-line option for the\n`ConsoleLauncher` to `--reports-dir`.\n\nIssue: #468\n",
			"commitDate": "2016-08-19, 10:12 AM",
			"commitName": "f2e6ef078a40e97ee16aebbf262c0ed4a4a0b01b",
			"commitAuthor": "Sam Brannen",
			"commitDateOld": "2016-08-19, 9:54 AM",
			"commitNameOld": "6ffd52f817490d5b4fb54ae53c25e2bbed3befda",
			"commitAuthorOld": "Sam Brannen",
			"daysBetweenCommits": 0.01,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,26 +1,26 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n \t\tresult.setRunAllTests(detectedOptions.has(this.runAllTests));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n \t\t// Reports\n-\t\tresult.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n+\t\tresult.setReportsDir(detectedOptions.valueOf(this.reportsDir));\n \n \t\t// Selectors\n \t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n \n \t\t// Filters\n \t\tresult.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"631e03ab0260c14df6bec3b1292961e1d4b24b8e": {
			"type": "Ybodychange",
			"commitMessage": "Reorganize code in AvailableOptions into logical groupings\n",
			"commitDate": "2016-08-11, 4:50 PM",
			"commitName": "631e03ab0260c14df6bec3b1292961e1d4b24b8e",
			"commitAuthor": "Sam Brannen",
			"commitDateOld": "2016-06-21, 3:43 PM",
			"commitNameOld": "305e31d9a123a5ff895be21aefca01880cd947e2",
			"commitAuthorOld": "Stefan Birkner",
			"daysBetweenCommits": 51.05,
			"commitsBetweenForRepo": 195,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,20 +1,26 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n+\n \t\tCommandLineOptions result = new CommandLineOptions();\n \n+\t\t// General Purpose\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n-\t\tresult.setRunAllTests(detectedOptions.has(this.runAllTests));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n+\t\tresult.setRunAllTests(detectedOptions.has(this.runAllTests));\n+\t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \n+\t\t// Reports\n+\t\tresult.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n+\n+\t\t// Selectors\n+\t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n+\n+\t\t// Filters\n \t\tresult.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n-\t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n-\t\tresult.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n-\t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n-\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"e568a3563c417829a20eec988daa98797c8391b3": {
			"type": "Ybodychange",
			"commitMessage": "Always use status code on exit. (#338)\n\nI consider it helpful to always return a status code that is not 0 in\r\ncase of a failure. This makes it easy for scripts to decide whether all\r\ntests succeeded. In addition I cannot imagine any use case that relies\r\non returning 0 in case of a failure.\r\n\r\nThe old implementation returned the number of failing tests as status\r\ncode if the flag `enable-exit-code` has been set. But this is only\r\npossible for a small number (< 256) of failing tests. The problem was\r\nthat n*256 failing tests have been reported as 0 failing tests and\r\ntherefore could not be distinguished from a successful run by status\r\ncode.\r\n\r\nThe parser in `AvailableOptions` still accepts the `enable-exit-code`\r\nflag because the project is build with an older version of the Gradle\r\nplugin from https://oss.sonatype.org/content/repositories/snapshots The\r\nparser does not to have accept the flag anymore once a new version of\r\nthe Gradle plugin is pushed to the snapshot repository.",
			"commitDate": "2016-06-21, 8:01 AM",
			"commitName": "e568a3563c417829a20eec988daa98797c8391b3",
			"commitAuthor": "Stefan Birkner",
			"commitDateOld": "2016-06-20, 5:43 AM",
			"commitNameOld": "f05183091a62cbbd58df338fc58f599f7994ec74",
			"commitAuthorOld": "JUnit Team",
			"daysBetweenCommits": 1.1,
			"commitsBetweenForRepo": 20,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,21 +1,20 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n \n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n-\t\tresult.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setRunAllTests(detectedOptions.has(this.runAllTests));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n \n \t\tresult.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \t\tresult.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n \t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n \n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"4972eb58d680a30e8fbd1ffb6cdc6477bef83374": {
			"type": "Yfilerename",
			"commitMessage": "Rename all JUnit 5 artifacts to platform, jupiter, & vintage\n\nIssue: #286\n",
			"commitDate": "2016-06-20, 2:59 AM",
			"commitName": "4972eb58d680a30e8fbd1ffb6cdc6477bef83374",
			"commitAuthor": "JUnit Team",
			"commitDateOld": "2016-06-19, 12:04 PM",
			"commitNameOld": "e5b7300ba40a0420e310d463a63ea4c10cc8d9b9",
			"commitAuthorOld": "Sam Brannen",
			"daysBetweenCommits": 0.62,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "junit-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
				"newPath": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java"
			}
		},
		"4537bec58804c392a8bce296dced0337c8ec1a8d": {
			"type": "Yfilerename",
			"commitMessage": "Rename remaining org.junit.gen5 base packages to org.junit.platform\n\nIssue: #286\n",
			"commitDate": "2016-06-19, 11:22 AM",
			"commitName": "4537bec58804c392a8bce296dced0337c8ec1a8d",
			"commitAuthor": "JUnit Team",
			"commitDateOld": "2016-06-19, 10:25 AM",
			"commitNameOld": "4dd821ac0cf681f17f14e1dcd383b10c99104e70",
			"commitAuthorOld": "Sam Brannen",
			"daysBetweenCommits": 0.04,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
				"newPath": "junit-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java"
			}
		},
		"8f23f4fa7eb977b718a0b3be1c20c7814a3b12a1": {
			"type": "Ybodychange",
			"commitMessage": "Apply consistent naming for class name include patterns\n\n- byClassNamePattern() in ClassFilter --> includeClassNamePattern()\n- @FilterClassName --> @IncludeClassNamePattern\n- matchClassName in Gradle plugin --> includeClassNamePattern\n- --filter-classname option in ConsoleRunner --> --include-classname\n\nIssue: #312\n",
			"commitDate": "2016-06-18, 7:17 AM",
			"commitName": "8f23f4fa7eb977b718a0b3be1c20c7814a3b12a1",
			"commitAuthor": "Sam Brannen",
			"commitDateOld": "2016-06-11, 12:12 PM",
			"commitNameOld": "85f3156214f0ee205b6caaaef87bd291700188ff",
			"commitAuthorOld": "Sam Brannen",
			"daysBetweenCommits": 6.79,
			"commitsBetweenForRepo": 63,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,17 +1,21 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n+\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setRunAllTests(detectedOptions.has(this.runAllTests));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n-\t\tresult.setClassnameFilter(detectedOptions.valueOf(this.classnameFilter));\n+\n+\t\tresult.setIncludeClassNamePattern(detectedOptions.valueOf(this.includeClassNamePattern));\n \t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n \t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n+\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \t\tresult.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n \t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n+\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"85f3156214f0ee205b6caaaef87bd291700188ff": {
			"type": "Ybodychange",
			"commitMessage": "Use consistent include/exclude terminology for tags and engines\n\nCloses: #304\n",
			"commitDate": "2016-06-11, 12:12 PM",
			"commitName": "85f3156214f0ee205b6caaaef87bd291700188ff",
			"commitAuthor": "Sam Brannen",
			"commitDateOld": "2016-06-11, 9:54 AM",
			"commitNameOld": "5707c028b2183766383c8fe83b0b662495cba59d",
			"commitAuthorOld": "Sam Brannen",
			"daysBetweenCommits": 0.1,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,17 +1,17 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n \t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n \t\tresult.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n \t\tresult.setRunAllTests(detectedOptions.has(this.runAllTests));\n \t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n \t\tresult.setClassnameFilter(detectedOptions.valueOf(this.classnameFilter));\n-\t\tresult.setRequiredTags(detectedOptions.valuesOf(this.requireTag));\n+\t\tresult.setIncludedTags(detectedOptions.valuesOf(this.includeTag));\n \t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n-\t\tresult.setRequiredEngines(detectedOptions.valuesOf(this.requireEngine));\n+\t\tresult.setIncludedEngines(detectedOptions.valuesOf(this.includeEngine));\n \t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n \t\tresult.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n \t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"5707c028b2183766383c8fe83b0b662495cba59d": {
			"type": "Ybodychange",
			"commitMessage": "Support required & excluded engines in ConsoleRunner\n\nCloses: #295\n",
			"commitDate": "2016-06-11, 9:54 AM",
			"commitName": "5707c028b2183766383c8fe83b0b662495cba59d",
			"commitAuthor": "Sam Brannen",
			"commitDateOld": "2016-06-10, 12:59 PM",
			"commitNameOld": "ea2127a5cfc44f137902241203b444dcd23c5051",
			"commitAuthorOld": "Sam Brannen",
			"daysBetweenCommits": 0.87,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,16 +1,17 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n-\t\tresult.setDisplayHelp(detectedOptions.has(help));\n-\t\tresult.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n-\t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n-\t\tresult.setRunAllTests(detectedOptions.has(runAllTests));\n-\t\tresult.setHideDetails(detectedOptions.has(hideDetails));\n-\t\tresult.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n-\t\tresult.setRequiredTags(detectedOptions.valuesOf(requiredTags));\n-\t\tresult.setExcludedTags(detectedOptions.valuesOf(excludedTags));\n-\t\tresult.setRequiredEngine(detectedOptions.valueOf(requiredEngine));\n-\t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n-\t\tresult.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n-\t\tresult.setArguments(detectedOptions.valuesOf(arguments));\n+\t\tresult.setDisplayHelp(detectedOptions.has(this.help));\n+\t\tresult.setExitCodeEnabled(detectedOptions.has(this.enableExitCode));\n+\t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(this.disableAnsiColors));\n+\t\tresult.setRunAllTests(detectedOptions.has(this.runAllTests));\n+\t\tresult.setHideDetails(detectedOptions.has(this.hideDetails));\n+\t\tresult.setClassnameFilter(detectedOptions.valueOf(this.classnameFilter));\n+\t\tresult.setRequiredTags(detectedOptions.valuesOf(this.requireTag));\n+\t\tresult.setExcludedTags(detectedOptions.valuesOf(this.excludeTag));\n+\t\tresult.setRequiredEngines(detectedOptions.valuesOf(this.requireEngine));\n+\t\tresult.setExcludedEngines(detectedOptions.valuesOf(this.excludeEngine));\n+\t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(this.additionalClasspathEntries));\n+\t\tresult.setXmlReportsDir(detectedOptions.valueOf(this.xmlReportsDir));\n+\t\tresult.setArguments(detectedOptions.valuesOf(this.arguments));\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"ea2127a5cfc44f137902241203b444dcd23c5051": {
			"type": "Ybodychange",
			"commitMessage": "Polish console options and add tests for excluded tags\n",
			"commitDate": "2016-06-10, 12:59 PM",
			"commitName": "ea2127a5cfc44f137902241203b444dcd23c5051",
			"commitAuthor": "Sam Brannen",
			"commitDateOld": "2016-05-25, 10:46 AM",
			"commitNameOld": "7b80cb0f513d8c451280c3d040308709596fe582",
			"commitAuthorOld": "Sam Brannen",
			"daysBetweenCommits": 16.09,
			"commitsBetweenForRepo": 131,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,16 +1,16 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n \t\tresult.setDisplayHelp(detectedOptions.has(help));\n \t\tresult.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n \t\tresult.setRunAllTests(detectedOptions.has(runAllTests));\n \t\tresult.setHideDetails(detectedOptions.has(hideDetails));\n \t\tresult.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n-\t\tresult.setRequiredTagsFilter(detectedOptions.valuesOf(requiredTagsFilter));\n-\t\tresult.setExcludedTagsFilter(detectedOptions.valuesOf(excludedTagsFilter));\n-\t\tresult.setRequiredEngineFilter(detectedOptions.valueOf(requiredEngineFilter));\n+\t\tresult.setRequiredTags(detectedOptions.valuesOf(requiredTags));\n+\t\tresult.setExcludedTags(detectedOptions.valuesOf(excludedTags));\n+\t\tresult.setRequiredEngine(detectedOptions.valueOf(requiredEngine));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n \t\tresult.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n \t\tresult.setArguments(detectedOptions.valuesOf(arguments));\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"30a17b707b00b3274fba81f4670111c15363e37c": {
			"type": "Ybodychange",
			"commitMessage": "#158 Added require-engine filter to console runner\n",
			"commitDate": "2016-02-19, 1:11 AM",
			"commitName": "30a17b707b00b3274fba81f4670111c15363e37c",
			"commitAuthor": "Johannes Link",
			"commitDateOld": "2016-02-01, 4:34 AM",
			"commitNameOld": "fa8d2dcd5d84036a60017289fefc7d7012703842",
			"commitAuthorOld": "Matthias Merdes",
			"daysBetweenCommits": 17.86,
			"commitsBetweenForRepo": 47,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,15 +1,16 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n \t\tresult.setDisplayHelp(detectedOptions.has(help));\n \t\tresult.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n \t\tresult.setRunAllTests(detectedOptions.has(runAllTests));\n \t\tresult.setHideDetails(detectedOptions.has(hideDetails));\n \t\tresult.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n \t\tresult.setRequiredTagsFilter(detectedOptions.valuesOf(requiredTagsFilter));\n \t\tresult.setExcludedTagsFilter(detectedOptions.valuesOf(excludedTagsFilter));\n+\t\tresult.setRequiredEngineFilter(detectedOptions.valueOf(requiredEngineFilter));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n \t\tresult.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n \t\tresult.setArguments(detectedOptions.valuesOf(arguments));\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"48dd35c9002c80eeb666f56489785d1bf47f9aa4": {
			"type": "Ybodychange",
			"commitMessage": "#131: improved naming for tag filters\n",
			"commitDate": "2016-02-01, 4:19 AM",
			"commitName": "48dd35c9002c80eeb666f56489785d1bf47f9aa4",
			"commitAuthor": "Matthias Merdes",
			"commitDateOld": "2016-01-26, 8:06 AM",
			"commitNameOld": "69b0a0138e4c3158504f7b382cdf05cc1e05b92e",
			"commitAuthorOld": "Marc Philipp",
			"daysBetweenCommits": 5.84,
			"commitsBetweenForRepo": 96,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,15 +1,15 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n \t\tresult.setDisplayHelp(detectedOptions.has(help));\n \t\tresult.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n \t\tresult.setRunAllTests(detectedOptions.has(runAllTests));\n \t\tresult.setHideDetails(detectedOptions.has(hideDetails));\n \t\tresult.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n-\t\tresult.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n-\t\tresult.setExcludeTags(detectedOptions.valuesOf(excludeTags));\n+\t\tresult.setRequiredTagsFilter(detectedOptions.valuesOf(requiredTagsFilter));\n+\t\tresult.setExcludedTagsFilter(detectedOptions.valuesOf(excludedTagsFilter));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n \t\tresult.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n \t\tresult.setArguments(detectedOptions.valuesOf(arguments));\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"69b0a0138e4c3158504f7b382cdf05cc1e05b92e": {
			"type": "Ybodychange",
			"commitMessage": "Pseudo XML file is now written by ConsoleRunner\n\nIssue: #86\n",
			"commitDate": "2016-01-26, 8:06 AM",
			"commitName": "69b0a0138e4c3158504f7b382cdf05cc1e05b92e",
			"commitAuthor": "Marc Philipp",
			"commitDateOld": "2016-01-01, 11:57 AM",
			"commitNameOld": "a6e3e77eeb01b8e6fdc91be3120c6d07af1b5a91",
			"commitAuthorOld": "Marc Philipp",
			"daysBetweenCommits": 24.84,
			"commitsBetweenForRepo": 569,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,14 +1,15 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n \t\tresult.setDisplayHelp(detectedOptions.has(help));\n \t\tresult.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n \t\tresult.setRunAllTests(detectedOptions.has(runAllTests));\n \t\tresult.setHideDetails(detectedOptions.has(hideDetails));\n \t\tresult.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n \t\tresult.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n \t\tresult.setExcludeTags(detectedOptions.valuesOf(excludeTags));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n+\t\tresult.setXmlReportsDir(detectedOptions.valueOf(xmlReportsDir));\n \t\tresult.setArguments(detectedOptions.valuesOf(arguments));\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"591eab7207b37451a23c89cb7746ad80344a9078": {
			"type": "Ybodychange",
			"commitMessage": "Added -T/--exclude-tags option to console runner.\n\n------------------------------------------------------------------------\nOn behalf of the community, the JUnit Lambda Team thanks\nAdNovum Informatik AG (http://www.adnovum.ch)\nJUnit crowdfunding campaign!\n------------------------------------------------------------------------\n",
			"commitDate": "2015-12-23, 10:56 AM",
			"commitName": "591eab7207b37451a23c89cb7746ad80344a9078",
			"commitAuthor": "Johannes Link",
			"commitDateOld": "2015-12-06, 12:16 PM",
			"commitNameOld": "e9b1bd435dc182d13f610948024659a99bd727da",
			"commitAuthorOld": "Marc Philipp",
			"daysBetweenCommits": 16.94,
			"commitsBetweenForRepo": 145,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,13 +1,14 @@\n \tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n \t\tresult.setDisplayHelp(detectedOptions.has(help));\n \t\tresult.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n \t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n \t\tresult.setRunAllTests(detectedOptions.has(runAllTests));\n \t\tresult.setHideDetails(detectedOptions.has(hideDetails));\n \t\tresult.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n \t\tresult.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n+\t\tresult.setExcludeTags(detectedOptions.valuesOf(excludeTags));\n \t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n \t\tresult.setArguments(detectedOptions.valuesOf(arguments));\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"e9b1bd435dc182d13f610948024659a99bd727da": {
			"type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
			"commitMessage": "#49: Encapsulate fields\n",
			"commitDate": "2015-12-06, 12:16 PM",
			"commitName": "e9b1bd435dc182d13f610948024659a99bd727da",
			"commitAuthor": "Marc Philipp",
			"subchanges": [
				{
					"type": "Ymovefromfile",
					"commitMessage": "#49: Encapsulate fields\n",
					"commitDate": "2015-12-06, 12:16 PM",
					"commitName": "e9b1bd435dc182d13f610948024659a99bd727da",
					"commitAuthor": "Marc Philipp",
					"commitDateOld": "2015-12-06, 12:08 PM",
					"commitNameOld": "dadf4482250f33170c0fe246a8f354c9c7615c68",
					"commitAuthorOld": "Marc Philipp",
					"daysBetweenCommits": 0.01,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,13 +1,13 @@\n-\tprivate CommandLineOptions toCommandLineOptions(AvailableOptions options, OptionSet detectedOptions) {\n+\tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n-\t\tresult.setDisplayHelp(detectedOptions.has(options.help));\n-\t\tresult.setExitCodeEnabled(detectedOptions.has(options.enableExitCode));\n-\t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(options.disableAnsiColors));\n-\t\tresult.setRunAllTests(detectedOptions.has(options.runAllTests));\n-\t\tresult.setHideDetails(detectedOptions.has(options.hideDetails));\n-\t\tresult.setClassnameFilter(detectedOptions.valueOf(options.classnameFilter));\n-\t\tresult.setTagsFilter(detectedOptions.valuesOf(options.tagFilter));\n-\t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(options.additionalClasspathEntries));\n-\t\tresult.setArguments(detectedOptions.valuesOf(options.arguments));\n+\t\tresult.setDisplayHelp(detectedOptions.has(help));\n+\t\tresult.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n+\t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n+\t\tresult.setRunAllTests(detectedOptions.has(runAllTests));\n+\t\tresult.setHideDetails(detectedOptions.has(hideDetails));\n+\t\tresult.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n+\t\tresult.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n+\t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n+\t\tresult.setArguments(detectedOptions.valuesOf(arguments));\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldPath": "junit-console/src/main/java/org/junit/gen5/console/options/JOptSimpleCommandLineOptionsParser.java",
						"newPath": "junit-console/src/main/java/org/junit/gen5/console/options/AvailableOptions.java",
						"oldMethodName": "toCommandLineOptions",
						"newMethodName": "toCommandLineOptions"
					}
				},
				{
					"type": "Ymodifierchange",
					"commitMessage": "#49: Encapsulate fields\n",
					"commitDate": "2015-12-06, 12:16 PM",
					"commitName": "e9b1bd435dc182d13f610948024659a99bd727da",
					"commitAuthor": "Marc Philipp",
					"commitDateOld": "2015-12-06, 12:08 PM",
					"commitNameOld": "dadf4482250f33170c0fe246a8f354c9c7615c68",
					"commitAuthorOld": "Marc Philipp",
					"daysBetweenCommits": 0.01,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,13 +1,13 @@\n-\tprivate CommandLineOptions toCommandLineOptions(AvailableOptions options, OptionSet detectedOptions) {\n+\tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n-\t\tresult.setDisplayHelp(detectedOptions.has(options.help));\n-\t\tresult.setExitCodeEnabled(detectedOptions.has(options.enableExitCode));\n-\t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(options.disableAnsiColors));\n-\t\tresult.setRunAllTests(detectedOptions.has(options.runAllTests));\n-\t\tresult.setHideDetails(detectedOptions.has(options.hideDetails));\n-\t\tresult.setClassnameFilter(detectedOptions.valueOf(options.classnameFilter));\n-\t\tresult.setTagsFilter(detectedOptions.valuesOf(options.tagFilter));\n-\t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(options.additionalClasspathEntries));\n-\t\tresult.setArguments(detectedOptions.valuesOf(options.arguments));\n+\t\tresult.setDisplayHelp(detectedOptions.has(help));\n+\t\tresult.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n+\t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n+\t\tresult.setRunAllTests(detectedOptions.has(runAllTests));\n+\t\tresult.setHideDetails(detectedOptions.has(hideDetails));\n+\t\tresult.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n+\t\tresult.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n+\t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n+\t\tresult.setArguments(detectedOptions.valuesOf(arguments));\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[private]",
						"newValue": "[]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "#49: Encapsulate fields\n",
					"commitDate": "2015-12-06, 12:16 PM",
					"commitName": "e9b1bd435dc182d13f610948024659a99bd727da",
					"commitAuthor": "Marc Philipp",
					"commitDateOld": "2015-12-06, 12:08 PM",
					"commitNameOld": "dadf4482250f33170c0fe246a8f354c9c7615c68",
					"commitAuthorOld": "Marc Philipp",
					"daysBetweenCommits": 0.01,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,13 +1,13 @@\n-\tprivate CommandLineOptions toCommandLineOptions(AvailableOptions options, OptionSet detectedOptions) {\n+\tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n-\t\tresult.setDisplayHelp(detectedOptions.has(options.help));\n-\t\tresult.setExitCodeEnabled(detectedOptions.has(options.enableExitCode));\n-\t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(options.disableAnsiColors));\n-\t\tresult.setRunAllTests(detectedOptions.has(options.runAllTests));\n-\t\tresult.setHideDetails(detectedOptions.has(options.hideDetails));\n-\t\tresult.setClassnameFilter(detectedOptions.valueOf(options.classnameFilter));\n-\t\tresult.setTagsFilter(detectedOptions.valuesOf(options.tagFilter));\n-\t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(options.additionalClasspathEntries));\n-\t\tresult.setArguments(detectedOptions.valuesOf(options.arguments));\n+\t\tresult.setDisplayHelp(detectedOptions.has(help));\n+\t\tresult.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n+\t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n+\t\tresult.setRunAllTests(detectedOptions.has(runAllTests));\n+\t\tresult.setHideDetails(detectedOptions.has(hideDetails));\n+\t\tresult.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n+\t\tresult.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n+\t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n+\t\tresult.setArguments(detectedOptions.valuesOf(arguments));\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				},
				{
					"type": "Yparameterchange",
					"commitMessage": "#49: Encapsulate fields\n",
					"commitDate": "2015-12-06, 12:16 PM",
					"commitName": "e9b1bd435dc182d13f610948024659a99bd727da",
					"commitAuthor": "Marc Philipp",
					"commitDateOld": "2015-12-06, 12:08 PM",
					"commitNameOld": "dadf4482250f33170c0fe246a8f354c9c7615c68",
					"commitAuthorOld": "Marc Philipp",
					"daysBetweenCommits": 0.01,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,13 +1,13 @@\n-\tprivate CommandLineOptions toCommandLineOptions(AvailableOptions options, OptionSet detectedOptions) {\n+\tCommandLineOptions toCommandLineOptions(OptionSet detectedOptions) {\n \t\tCommandLineOptions result = new CommandLineOptions();\n-\t\tresult.setDisplayHelp(detectedOptions.has(options.help));\n-\t\tresult.setExitCodeEnabled(detectedOptions.has(options.enableExitCode));\n-\t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(options.disableAnsiColors));\n-\t\tresult.setRunAllTests(detectedOptions.has(options.runAllTests));\n-\t\tresult.setHideDetails(detectedOptions.has(options.hideDetails));\n-\t\tresult.setClassnameFilter(detectedOptions.valueOf(options.classnameFilter));\n-\t\tresult.setTagsFilter(detectedOptions.valuesOf(options.tagFilter));\n-\t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(options.additionalClasspathEntries));\n-\t\tresult.setArguments(detectedOptions.valuesOf(options.arguments));\n+\t\tresult.setDisplayHelp(detectedOptions.has(help));\n+\t\tresult.setExitCodeEnabled(detectedOptions.has(enableExitCode));\n+\t\tresult.setAnsiColorOutputDisabled(detectedOptions.has(disableAnsiColors));\n+\t\tresult.setRunAllTests(detectedOptions.has(runAllTests));\n+\t\tresult.setHideDetails(detectedOptions.has(hideDetails));\n+\t\tresult.setClassnameFilter(detectedOptions.valueOf(classnameFilter));\n+\t\tresult.setTagsFilter(detectedOptions.valuesOf(tagFilter));\n+\t\tresult.setAdditionalClasspathEntries(detectedOptions.valuesOf(additionalClasspathEntries));\n+\t\tresult.setArguments(detectedOptions.valuesOf(arguments));\n \t\treturn result;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[options-AvailableOptions, detectedOptions-OptionSet]",
						"newValue": "[detectedOptions-OptionSet]"
					}
				}
			]
		},
		"550e5b1d774d538ecfa22d7efe8fe893dcd9fa06": {
			"type": "Yintroduced",
			"commitMessage": "#49: CommandLineOptions: POJO instead of interface\n\n- Requires less stubbing\n- Easier test code\n",
			"commitDate": "2015-12-06, 5:48 AM",
			"commitName": "550e5b1d774d538ecfa22d7efe8fe893dcd9fa06",
			"commitAuthor": "Marc Philipp"
		}
	},
	"sha": "77cfe71e7f787c59626198e25350545f41e968bd"
}