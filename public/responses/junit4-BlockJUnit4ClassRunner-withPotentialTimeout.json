{
	"repo": "https://github.com/junit-team/junit4.git",
	"file": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java",
	"method": {
		"longName": "protected Statement withPotentialTimeout(FrameworkMethod method, Object test, Statement next);",
		"startLine": 356,
		"methodName": "withPotentialTimeout",
		"isStatic": false,
		"isAbstract": false,
		"visibility": "protected"
	},
	"history": {
		"1e55e32ba3dab864b20e9c162c5b421f99a11c6d": {
			"type": "Ybodychange",
			"commitMessage": "Update BlockJUnit4ClassRunner to no longer use the deprecated FailOnTimeout ctor\n",
			"commitDate": "2014-09-03, 10:50 PM",
			"commitName": "1e55e32ba3dab864b20e9c162c5b421f99a11c6d",
			"commitAuthor": "Kevin Cooney",
			"commitDateOld": "2014-06-18, 12:24 PM",
			"commitNameOld": "dc23211eb83c7d9f23f6a7031fedc091c6365bed",
			"commitAuthorOld": "Rowan Hill",
			"daysBetweenCommits": 77.43,
			"commitsBetweenForRepo": 38,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,5 +1,10 @@\n     protected Statement withPotentialTimeout(FrameworkMethod method,\n             Object test, Statement next) {\n         long timeout = getTimeout(method.getAnnotation(Test.class));\n-        return timeout > 0 ? new FailOnTimeout(next, timeout) : next;\n+        if (timeout <= 0) {\n+            return next;\n+        }\n+        return FailOnTimeout.builder()\n+               .withTimeout(timeout, TimeUnit.MILLISECONDS)\n+               .build(next);\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"30a039854fd7f8cda135222054b247c158b91fa7": {
			"type": "Ybodychange",
			"commitMessage": "All javadoc added\n",
			"commitDate": "2008-07-30, 1:28 PM",
			"commitName": "30a039854fd7f8cda135222054b247c158b91fa7",
			"commitAuthor": "dsaff",
			"commitDateOld": "2008-07-30, 12:23 PM",
			"commitNameOld": "5d957024be0d1b181879d48b7915b3b8aad8f5d5",
			"commitAuthorOld": "dsaff",
			"daysBetweenCommits": 0.05,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,5 +1,5 @@\n \tprotected Statement withPotentialTimeout(FrameworkMethod method,\n \t\t\tObject test, Statement next) {\n-\t\tlong timeout= getTimeout(getAnnotation(method));\n+\t\tlong timeout= getTimeout(method.getAnnotation(Test.class));\n \t\treturn timeout > 0 ? new FailOnTimeout(next, timeout) : next;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"96d7dd609920deb1336cf85dc6c9a3a0d5e30d15": {
			"type": "Ymultichange(Yfilerename,Ybodychange)",
			"commitMessage": "Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?\n",
			"commitDate": "2008-07-01, 11:29 AM",
			"commitName": "96d7dd609920deb1336cf85dc6c9a3a0d5e30d15",
			"commitAuthor": "kbeck",
			"subchanges": [
				{
					"type": "Yfilerename",
					"commitMessage": "Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?\n",
					"commitDate": "2008-07-01, 11:29 AM",
					"commitName": "96d7dd609920deb1336cf85dc6c9a3a0d5e30d15",
					"commitAuthor": "kbeck",
					"commitDateOld": "2008-07-01, 10:01 AM",
					"commitNameOld": "eb2750d861ac1ecf2dbd0425e457fe833468a169",
					"commitAuthorOld": "kbeck",
					"daysBetweenCommits": 0.06,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,5 @@\n \tprotected Statement withPotentialTimeout(FrameworkMethod method, Object test,\n \t\t\tStatement next) {\n-\t\tlong timeout= getAnnotation(method).getTimeout();\n+\t\tlong timeout= getTimeout(getAnnotation(method));\n \t\treturn timeout > 0 ? new FailOnTimeout(next, timeout) : next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldPath": "src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java",
						"newPath": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?\n",
					"commitDate": "2008-07-01, 11:29 AM",
					"commitName": "96d7dd609920deb1336cf85dc6c9a3a0d5e30d15",
					"commitAuthor": "kbeck",
					"commitDateOld": "2008-07-01, 10:01 AM",
					"commitNameOld": "eb2750d861ac1ecf2dbd0425e457fe833468a169",
					"commitAuthorOld": "kbeck",
					"daysBetweenCommits": 0.06,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,5 @@\n \tprotected Statement withPotentialTimeout(FrameworkMethod method, Object test,\n \t\t\tStatement next) {\n-\t\tlong timeout= getAnnotation(method).getTimeout();\n+\t\tlong timeout= getTimeout(getAnnotation(method));\n \t\treturn timeout > 0 ? new FailOnTimeout(next, timeout) : next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"9bd1be07aa38d7fa2de048845f7b13458c9420d7": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "Parallelize Statement builder methods in BlockJUnit4ClassRunner\n",
			"commitDate": "2008-06-24, 9:34 AM",
			"commitName": "9bd1be07aa38d7fa2de048845f7b13458c9420d7",
			"commitAuthor": "dsaff",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "Parallelize Statement builder methods in BlockJUnit4ClassRunner\n",
					"commitDate": "2008-06-24, 9:34 AM",
					"commitName": "9bd1be07aa38d7fa2de048845f7b13458c9420d7",
					"commitAuthor": "dsaff",
					"commitDateOld": "2008-06-16, 10:52 AM",
					"commitNameOld": "078e45bd31a9920e00633ad6ce658e22529304f2",
					"commitAuthorOld": "kbeck",
					"daysBetweenCommits": 7.95,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,5 @@\n-\tprotected Statement withPotentialTimeout(TestAnnotation annotation,\n+\tprotected Statement withPotentialTimeout(FrameworkMethod method, Object test,\n \t\t\tStatement next) {\n-\t\tlong timeout= annotation.getTimeout();\n+\t\tlong timeout= getAnnotation(method).getTimeout();\n \t\treturn timeout > 0 ? new FailOnTimeout(next, timeout) : next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[annotation-TestAnnotation, next-Statement]",
						"newValue": "[method-FrameworkMethod, test-Object, next-Statement]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "Parallelize Statement builder methods in BlockJUnit4ClassRunner\n",
					"commitDate": "2008-06-24, 9:34 AM",
					"commitName": "9bd1be07aa38d7fa2de048845f7b13458c9420d7",
					"commitAuthor": "dsaff",
					"commitDateOld": "2008-06-16, 10:52 AM",
					"commitNameOld": "078e45bd31a9920e00633ad6ce658e22529304f2",
					"commitAuthorOld": "kbeck",
					"daysBetweenCommits": 7.95,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,5 @@\n-\tprotected Statement withPotentialTimeout(TestAnnotation annotation,\n+\tprotected Statement withPotentialTimeout(FrameworkMethod method, Object test,\n \t\t\tStatement next) {\n-\t\tlong timeout= annotation.getTimeout();\n+\t\tlong timeout= getAnnotation(method).getTimeout();\n \t\treturn timeout > 0 ? new FailOnTimeout(next, timeout) : next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"078e45bd31a9920e00633ad6ce658e22529304f2": {
			"type": "Ymovefromfile",
			"commitMessage": "Brought in old JUnit4ClassRunner for compatibility. Renamed new JUnit4ClassRunner to BlockJUnit4ClassRunner.\n",
			"commitDate": "2008-06-16, 10:52 AM",
			"commitName": "078e45bd31a9920e00633ad6ce658e22529304f2",
			"commitAuthor": "kbeck",
			"commitDateOld": "2008-06-10, 12:50 PM",
			"commitNameOld": "f49fb25b6fbffcc7a68b28824ed3856ffa9d6fdd",
			"commitAuthorOld": "dsaff",
			"daysBetweenCommits": 5.92,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java",
				"newPath": "src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java",
				"oldMethodName": "withPotentialTimeout",
				"newMethodName": "withPotentialTimeout"
			}
		},
		"8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9": {
			"type": "Yfilerename",
			"commitMessage": "- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests.\n\n- Improved display of ignored tests, so that build results are hopefully not confusing\n",
			"commitDate": "2007-12-07, 7:43 AM",
			"commitName": "8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9",
			"commitAuthor": "dsaff",
			"commitDateOld": "2007-12-05, 7:47 AM",
			"commitNameOld": "804f76fdf00c9f9fcbef58f03bbeda1f80b3ad8e",
			"commitAuthorOld": "dsaff",
			"daysBetweenCommits": 2,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "src/org/junit/internal/runners/JUnit4ClassRunner.java",
				"newPath": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java"
			}
		},
		"8bed6c9278517d9fb13f274bc5a6ade358a39745": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "- Moved InitializationError to ParentRunner, since it was only used by\n  subclasses of ParentRunner.\n- Broke up TestMethod into FrameworkMethod (which makes it more clear\n  that these methods can also be Before, After, etc.), and\n  TestAnnotation (for specific information only available on the @Test\n  annotation).\n- Created TestMethodElement to encapsulate the relationship between\n  @Test, @Before, and @After.  This class may go away again quickly\n- Updated version in docs to 4.5\n- Included docs about junit-dep jar\n",
			"commitDate": "2007-11-14, 10:21 AM",
			"commitName": "8bed6c9278517d9fb13f274bc5a6ade358a39745",
			"commitAuthor": "dsaff",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "- Moved InitializationError to ParentRunner, since it was only used by\n  subclasses of ParentRunner.\n- Broke up TestMethod into FrameworkMethod (which makes it more clear\n  that these methods can also be Before, After, etc.), and\n  TestAnnotation (for specific information only available on the @Test\n  annotation).\n- Created TestMethodElement to encapsulate the relationship between\n  @Test, @Before, and @After.  This class may go away again quickly\n- Updated version in docs to 4.5\n- Included docs about junit-dep jar\n",
					"commitDate": "2007-11-14, 10:21 AM",
					"commitName": "8bed6c9278517d9fb13f274bc5a6ade358a39745",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-31, 6:57 AM",
					"commitNameOld": "24a5aad1f49b4decf946f1df701e354a18544132",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 14.18,
					"commitsBetweenForRepo": 4,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,5 @@\n-\tprotected Statement withPotentialTimeout(TestMethod method, Statement next) {\n-\t\tlong timeout= method.getTimeout();\n+\tprotected Statement withPotentialTimeout(TestAnnotation annotation,\n+\t\t\tStatement next) {\n+\t\tlong timeout= annotation.getTimeout();\n \t\treturn timeout > 0 ? new FailOnTimeout(next, timeout) : next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[method-TestMethod, next-Statement]",
						"newValue": "[annotation-TestAnnotation, next-Statement]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "- Moved InitializationError to ParentRunner, since it was only used by\n  subclasses of ParentRunner.\n- Broke up TestMethod into FrameworkMethod (which makes it more clear\n  that these methods can also be Before, After, etc.), and\n  TestAnnotation (for specific information only available on the @Test\n  annotation).\n- Created TestMethodElement to encapsulate the relationship between\n  @Test, @Before, and @After.  This class may go away again quickly\n- Updated version in docs to 4.5\n- Included docs about junit-dep jar\n",
					"commitDate": "2007-11-14, 10:21 AM",
					"commitName": "8bed6c9278517d9fb13f274bc5a6ade358a39745",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-31, 6:57 AM",
					"commitNameOld": "24a5aad1f49b4decf946f1df701e354a18544132",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 14.18,
					"commitsBetweenForRepo": 4,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,5 @@\n-\tprotected Statement withPotentialTimeout(TestMethod method, Statement next) {\n-\t\tlong timeout= method.getTimeout();\n+\tprotected Statement withPotentialTimeout(TestAnnotation annotation,\n+\t\t\tStatement next) {\n+\t\tlong timeout= annotation.getTimeout();\n \t\treturn timeout > 0 ? new FailOnTimeout(next, timeout) : next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"de43b277b8f2e63051368a36e27a35c5ed0f0e0b": {
			"type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
			"commitMessage": "I renamed Link->Statement and adjusted the names of the other statements according to my preference. These names are negotiable. I also simplified a few flows of control.\n",
			"commitDate": "2007-10-12, 9:58 AM",
			"commitName": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b",
			"commitAuthor": "kbeck",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "I renamed Link->Statement and adjusted the names of the other statements according to my preference. These names are negotiable. I also simplified a few flows of control.\n",
					"commitDate": "2007-10-12, 9:58 AM",
					"commitName": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b",
					"commitAuthor": "kbeck",
					"commitDateOld": "2007-10-12, 7:49 AM",
					"commitNameOld": "0dbe9eefa369da78ca67bf5487797a8de5b2d631",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 0.09,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,6 +1,6 @@\n-\tprotected Link withPotentialTimeout(TestMethod method, Link next) {\n+\tprotected Statement withPotentialTimeout(TestMethod method, Statement next) {\n \t\tlong timeout= method.getTimeout();\n \t\treturn timeout > 0\n-\t\t\t? new WithTimeout(next, timeout)\n+\t\t\t? new FailOnTimeout(next, timeout)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[method-TestMethod, next-Link]",
						"newValue": "[method-TestMethod, next-Statement]"
					}
				},
				{
					"type": "Yreturntypechange",
					"commitMessage": "I renamed Link->Statement and adjusted the names of the other statements according to my preference. These names are negotiable. I also simplified a few flows of control.\n",
					"commitDate": "2007-10-12, 9:58 AM",
					"commitName": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b",
					"commitAuthor": "kbeck",
					"commitDateOld": "2007-10-12, 7:49 AM",
					"commitNameOld": "0dbe9eefa369da78ca67bf5487797a8de5b2d631",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 0.09,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,6 +1,6 @@\n-\tprotected Link withPotentialTimeout(TestMethod method, Link next) {\n+\tprotected Statement withPotentialTimeout(TestMethod method, Statement next) {\n \t\tlong timeout= method.getTimeout();\n \t\treturn timeout > 0\n-\t\t\t? new WithTimeout(next, timeout)\n+\t\t\t? new FailOnTimeout(next, timeout)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "Link",
						"newValue": "Statement"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "I renamed Link->Statement and adjusted the names of the other statements according to my preference. These names are negotiable. I also simplified a few flows of control.\n",
					"commitDate": "2007-10-12, 9:58 AM",
					"commitName": "de43b277b8f2e63051368a36e27a35c5ed0f0e0b",
					"commitAuthor": "kbeck",
					"commitDateOld": "2007-10-12, 7:49 AM",
					"commitNameOld": "0dbe9eefa369da78ca67bf5487797a8de5b2d631",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 0.09,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,6 +1,6 @@\n-\tprotected Link withPotentialTimeout(TestMethod method, Link next) {\n+\tprotected Statement withPotentialTimeout(TestMethod method, Statement next) {\n \t\tlong timeout= method.getTimeout();\n \t\treturn timeout > 0\n-\t\t\t? new WithTimeout(next, timeout)\n+\t\t\t? new FailOnTimeout(next, timeout)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"44e7458b19d5cd1900a765a440c96e85b81d25fc": {
			"type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
			"commitMessage": "- Renamed link classes.\n  Absolute actions are verbs: IgnoreTest, Invoke.\n  ActionModifiers are modifying phrases: ExpectingException, WithTimeout, etc.\n\n- Moved isShadowedBy(List) to TestMethod\n",
			"commitDate": "2007-10-08, 2:07 PM",
			"commitName": "44e7458b19d5cd1900a765a440c96e85b81d25fc",
			"commitAuthor": "dsaff",
			"subchanges": [
				{
					"type": "Yrename",
					"commitMessage": "- Renamed link classes.\n  Absolute actions are verbs: IgnoreTest, Invoke.\n  ActionModifiers are modifying phrases: ExpectingException, WithTimeout, etc.\n\n- Moved isShadowedBy(List) to TestMethod\n",
					"commitDate": "2007-10-08, 2:07 PM",
					"commitName": "44e7458b19d5cd1900a765a440c96e85b81d25fc",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-08, 12:40 PM",
					"commitNameOld": "576377b9ad44028dc84c2f8487cfe8dbccb8c252",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 0.06,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,6 +1,6 @@\n-\tpublic Link timeout(Link next, TestMethod method) {\n+\tprotected Link withPotentialTimeout(TestMethod method, Link next) {\n \t\tlong timeout= method.getTimeout();\n \t\treturn timeout > 0\n-\t\t\t? new Timeout(next, timeout)\n+\t\t\t? new WithTimeout(next, timeout)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "timeout",
						"newValue": "withPotentialTimeout"
					}
				},
				{
					"type": "Yparameterchange",
					"commitMessage": "- Renamed link classes.\n  Absolute actions are verbs: IgnoreTest, Invoke.\n  ActionModifiers are modifying phrases: ExpectingException, WithTimeout, etc.\n\n- Moved isShadowedBy(List) to TestMethod\n",
					"commitDate": "2007-10-08, 2:07 PM",
					"commitName": "44e7458b19d5cd1900a765a440c96e85b81d25fc",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-08, 12:40 PM",
					"commitNameOld": "576377b9ad44028dc84c2f8487cfe8dbccb8c252",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 0.06,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,6 +1,6 @@\n-\tpublic Link timeout(Link next, TestMethod method) {\n+\tprotected Link withPotentialTimeout(TestMethod method, Link next) {\n \t\tlong timeout= method.getTimeout();\n \t\treturn timeout > 0\n-\t\t\t? new Timeout(next, timeout)\n+\t\t\t? new WithTimeout(next, timeout)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[next-Link, method-TestMethod]",
						"newValue": "[method-TestMethod, next-Link]"
					}
				},
				{
					"type": "Ymodifierchange",
					"commitMessage": "- Renamed link classes.\n  Absolute actions are verbs: IgnoreTest, Invoke.\n  ActionModifiers are modifying phrases: ExpectingException, WithTimeout, etc.\n\n- Moved isShadowedBy(List) to TestMethod\n",
					"commitDate": "2007-10-08, 2:07 PM",
					"commitName": "44e7458b19d5cd1900a765a440c96e85b81d25fc",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-08, 12:40 PM",
					"commitNameOld": "576377b9ad44028dc84c2f8487cfe8dbccb8c252",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 0.06,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,6 +1,6 @@\n-\tpublic Link timeout(Link next, TestMethod method) {\n+\tprotected Link withPotentialTimeout(TestMethod method, Link next) {\n \t\tlong timeout= method.getTimeout();\n \t\treturn timeout > 0\n-\t\t\t? new Timeout(next, timeout)\n+\t\t\t? new WithTimeout(next, timeout)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[public]",
						"newValue": "[protected]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "- Renamed link classes.\n  Absolute actions are verbs: IgnoreTest, Invoke.\n  ActionModifiers are modifying phrases: ExpectingException, WithTimeout, etc.\n\n- Moved isShadowedBy(List) to TestMethod\n",
					"commitDate": "2007-10-08, 2:07 PM",
					"commitName": "44e7458b19d5cd1900a765a440c96e85b81d25fc",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-08, 12:40 PM",
					"commitNameOld": "576377b9ad44028dc84c2f8487cfe8dbccb8c252",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 0.06,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,6 +1,6 @@\n-\tpublic Link timeout(Link next, TestMethod method) {\n+\tprotected Link withPotentialTimeout(TestMethod method, Link next) {\n \t\tlong timeout= method.getTimeout();\n \t\treturn timeout > 0\n-\t\t\t? new Timeout(next, timeout)\n+\t\t\t? new WithTimeout(next, timeout)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"576377b9ad44028dc84c2f8487cfe8dbccb8c252": {
			"type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
			"commitMessage": "- Split links into their own package\n- Combined JUnit4ClassRunner and JUnit4MethodRunner, allowing extensions to be written with a single class\n- Created a separate model class for TestMethod, TestClass, and other runnable Java elements (TODO: still messy separation of concerns there)\n- Absorbed ExplosiveMethod into TestMethod.invokeExplosively\n- Absorbed MethodValidator into TestClass and TestMethod.\n- Removed deprecated OldTestClassRunner and TestClassRunner\n- Changed testAndTeardownFailure so that the order of failures is undefined\n- Added test for Before defined on subclass run on Test defined on superclass.\n\nThis is not yet the finished refactoring.  More to come, but needed a checkpoint\n",
			"commitDate": "2007-10-08, 12:40 PM",
			"commitName": "576377b9ad44028dc84c2f8487cfe8dbccb8c252",
			"commitAuthor": "dsaff",
			"subchanges": [
				{
					"type": "Ymovefromfile",
					"commitMessage": "- Split links into their own package\n- Combined JUnit4ClassRunner and JUnit4MethodRunner, allowing extensions to be written with a single class\n- Created a separate model class for TestMethod, TestClass, and other runnable Java elements (TODO: still messy separation of concerns there)\n- Absorbed ExplosiveMethod into TestMethod.invokeExplosively\n- Absorbed MethodValidator into TestClass and TestMethod.\n- Removed deprecated OldTestClassRunner and TestClassRunner\n- Changed testAndTeardownFailure so that the order of failures is undefined\n- Added test for Before defined on subclass run on Test defined on superclass.\n\nThis is not yet the finished refactoring.  More to come, but needed a checkpoint\n",
					"commitDate": "2007-10-08, 12:40 PM",
					"commitName": "576377b9ad44028dc84c2f8487cfe8dbccb8c252",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-05, 1:47 PM",
					"commitNameOld": "57302f0df76fba83ba72a676bd660efeb5881af6",
					"commitAuthorOld": "kbeck",
					"daysBetweenCommits": 2.95,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,6 @@\n-\tpublic Link timeout(Link next) {\n-\t\treturn fTestMethod.getTimeout() > 0\n-\t\t\t? new Timeout(next)\n+\tpublic Link timeout(Link next, TestMethod method) {\n+\t\tlong timeout= method.getTimeout();\n+\t\treturn timeout > 0\n+\t\t\t? new Timeout(next, timeout)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldPath": "src/org/junit/internal/runners/JUnit4MethodRunner.java",
						"newPath": "src/org/junit/internal/runners/JUnit4ClassRunner.java",
						"oldMethodName": "timeout",
						"newMethodName": "timeout"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "- Split links into their own package\n- Combined JUnit4ClassRunner and JUnit4MethodRunner, allowing extensions to be written with a single class\n- Created a separate model class for TestMethod, TestClass, and other runnable Java elements (TODO: still messy separation of concerns there)\n- Absorbed ExplosiveMethod into TestMethod.invokeExplosively\n- Absorbed MethodValidator into TestClass and TestMethod.\n- Removed deprecated OldTestClassRunner and TestClassRunner\n- Changed testAndTeardownFailure so that the order of failures is undefined\n- Added test for Before defined on subclass run on Test defined on superclass.\n\nThis is not yet the finished refactoring.  More to come, but needed a checkpoint\n",
					"commitDate": "2007-10-08, 12:40 PM",
					"commitName": "576377b9ad44028dc84c2f8487cfe8dbccb8c252",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-05, 1:47 PM",
					"commitNameOld": "57302f0df76fba83ba72a676bd660efeb5881af6",
					"commitAuthorOld": "kbeck",
					"daysBetweenCommits": 2.95,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,6 @@\n-\tpublic Link timeout(Link next) {\n-\t\treturn fTestMethod.getTimeout() > 0\n-\t\t\t? new Timeout(next)\n+\tpublic Link timeout(Link next, TestMethod method) {\n+\t\tlong timeout= method.getTimeout();\n+\t\treturn timeout > 0\n+\t\t\t? new Timeout(next, timeout)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				},
				{
					"type": "Yparameterchange",
					"commitMessage": "- Split links into their own package\n- Combined JUnit4ClassRunner and JUnit4MethodRunner, allowing extensions to be written with a single class\n- Created a separate model class for TestMethod, TestClass, and other runnable Java elements (TODO: still messy separation of concerns there)\n- Absorbed ExplosiveMethod into TestMethod.invokeExplosively\n- Absorbed MethodValidator into TestClass and TestMethod.\n- Removed deprecated OldTestClassRunner and TestClassRunner\n- Changed testAndTeardownFailure so that the order of failures is undefined\n- Added test for Before defined on subclass run on Test defined on superclass.\n\nThis is not yet the finished refactoring.  More to come, but needed a checkpoint\n",
					"commitDate": "2007-10-08, 12:40 PM",
					"commitName": "576377b9ad44028dc84c2f8487cfe8dbccb8c252",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-05, 1:47 PM",
					"commitNameOld": "57302f0df76fba83ba72a676bd660efeb5881af6",
					"commitAuthorOld": "kbeck",
					"daysBetweenCommits": 2.95,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,6 @@\n-\tpublic Link timeout(Link next) {\n-\t\treturn fTestMethod.getTimeout() > 0\n-\t\t\t? new Timeout(next)\n+\tpublic Link timeout(Link next, TestMethod method) {\n+\t\tlong timeout= method.getTimeout();\n+\t\treturn timeout > 0\n+\t\t\t? new Timeout(next, timeout)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[next-Link]",
						"newValue": "[next-Link, method-TestMethod]"
					}
				}
			]
		},
		"57302f0df76fba83ba72a676bd660efeb5881af6": {
			"type": "Ymultichange(Yparameterchange,Yreturntypechange)",
			"commitMessage": "Further refinement--I got rid of the Link/Anchor distinction. The bits of functionality are all Links at the moment. I also took error reporting out of Timeout (Roadie.runAfters() reports multiple errors without engaging the Link). There still seem to be some loose ends to tie up--naming, duplication, getting rid of dependencies on the enclosing instance as part of making the Links top-level classes, repackaging.\n",
			"commitDate": "2007-10-05, 1:47 PM",
			"commitName": "57302f0df76fba83ba72a676bd660efeb5881af6",
			"commitAuthor": "kbeck",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "Further refinement--I got rid of the Link/Anchor distinction. The bits of functionality are all Links at the moment. I also took error reporting out of Timeout (Roadie.runAfters() reports multiple errors without engaging the Link). There still seem to be some loose ends to tie up--naming, duplication, getting rid of dependencies on the enclosing instance as part of making the Links top-level classes, repackaging.\n",
					"commitDate": "2007-10-05, 1:47 PM",
					"commitName": "57302f0df76fba83ba72a676bd660efeb5881af6",
					"commitAuthor": "kbeck",
					"commitDateOld": "2007-10-05, 9:54 AM",
					"commitNameOld": "a58514aec7e843339be24980e92aeeb759327ffb",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 0.16,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,5 @@\n-\tpublic Anchor timeout(Anchor next) {\n+\tpublic Link timeout(Link next) {\n \t\treturn fTestMethod.getTimeout() > 0\n \t\t\t? new Timeout(next)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[next-Anchor]",
						"newValue": "[next-Link]"
					}
				},
				{
					"type": "Yreturntypechange",
					"commitMessage": "Further refinement--I got rid of the Link/Anchor distinction. The bits of functionality are all Links at the moment. I also took error reporting out of Timeout (Roadie.runAfters() reports multiple errors without engaging the Link). There still seem to be some loose ends to tie up--naming, duplication, getting rid of dependencies on the enclosing instance as part of making the Links top-level classes, repackaging.\n",
					"commitDate": "2007-10-05, 1:47 PM",
					"commitName": "57302f0df76fba83ba72a676bd660efeb5881af6",
					"commitAuthor": "kbeck",
					"commitDateOld": "2007-10-05, 9:54 AM",
					"commitNameOld": "a58514aec7e843339be24980e92aeeb759327ffb",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 0.16,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,5 @@\n-\tpublic Anchor timeout(Anchor next) {\n+\tpublic Link timeout(Link next) {\n \t\treturn fTestMethod.getTimeout() > 0\n \t\t\t? new Timeout(next)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "Anchor",
						"newValue": "Link"
					}
				}
			]
		},
		"a58514aec7e843339be24980e92aeeb759327ffb": {
			"type": "Ymultichange(Yparameterchange,Yreturntypechange)",
			"commitMessage": "Allowed more classes to be Anchors, more cleanup still to do\n",
			"commitDate": "2007-10-05, 9:54 AM",
			"commitName": "a58514aec7e843339be24980e92aeeb759327ffb",
			"commitAuthor": "dsaff",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "Allowed more classes to be Anchors, more cleanup still to do\n",
					"commitDate": "2007-10-05, 9:54 AM",
					"commitName": "a58514aec7e843339be24980e92aeeb759327ffb",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-04, 9:59 PM",
					"commitNameOld": "4081076e513e84bb2376f889d4108e64e9a18653",
					"commitAuthorOld": "kbeck",
					"daysBetweenCommits": 0.5,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,5 @@\n-\tpublic Link timeout(Link next) {\n+\tpublic Anchor timeout(Anchor next) {\n \t\treturn fTestMethod.getTimeout() > 0\n \t\t\t? new Timeout(next)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[next-Link]",
						"newValue": "[next-Anchor]"
					}
				},
				{
					"type": "Yreturntypechange",
					"commitMessage": "Allowed more classes to be Anchors, more cleanup still to do\n",
					"commitDate": "2007-10-05, 9:54 AM",
					"commitName": "a58514aec7e843339be24980e92aeeb759327ffb",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-04, 9:59 PM",
					"commitNameOld": "4081076e513e84bb2376f889d4108e64e9a18653",
					"commitAuthorOld": "kbeck",
					"daysBetweenCommits": 0.5,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,5 @@\n-\tpublic Link timeout(Link next) {\n+\tpublic Anchor timeout(Anchor next) {\n \t\treturn fTestMethod.getTimeout() > 0\n \t\t\t? new Timeout(next)\n \t\t\t: next;\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "Link",
						"newValue": "Anchor"
					}
				}
			]
		},
		"4081076e513e84bb2376f889d4108e64e9a18653": {
			"type": "Yintroduced",
			"commitMessage": "Big reorganization of how test methods are run. Now there are a nested set of Links which each handle one aspect of running a method. Custom runners can create their own chain of Links to introduce new behavior. This isn't done--it needs organization like extracting inner classes to top level classes and refinement of visibility.\n",
			"commitDate": "2007-10-04, 9:59 PM",
			"commitName": "4081076e513e84bb2376f889d4108e64e9a18653",
			"commitAuthor": "kbeck",
			"diff": "@@ -0,0 +1,5 @@\n+\tpublic Link timeout(Link next) {\n+\t\treturn fTestMethod.getTimeout() > 0\n+\t\t\t? new Timeout(next)\n+\t\t\t: next;\n+\t}\n\\ No newline at end of file\n"
		}
	},
	"sha": "02c328028b4d32c15bbf0becc9838e54ecbafcbf"
}