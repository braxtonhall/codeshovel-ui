{
	"repo": "https://github.com/apache/lucene-solr.git",
	"file": "lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.java",
	"method": {
		"longName": "public Query rewrite(IndexReader reader);",
		"startLine": 49,
		"methodName": "rewrite",
		"isStatic": false,
		"isAbstract": false,
		"visibility": "public"
	},
	"history": {
		"962313b83ba9c69379e1f84dffc881a361713ce9": {
			"type": "Ybodychange",
			"commitMessage": "LUCENE-6590: Replace Query.getBoost, setBoost and clone with a new BoostQuery.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1701621 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2015-09-07, 6:34 AM",
			"commitName": "962313b83ba9c69379e1f84dffc881a361713ce9",
			"commitAuthor": "Adrien Grand",
			"commitDateOld": "2015-06-25, 6:59 AM",
			"commitNameOld": "d671dd8d890a8e5eb56cbcd94873c3057745a17f",
			"commitAuthorOld": "Adrien Grand",
			"daysBetweenCommits": 73.98,
			"commitsBetweenForRepo": 438,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,19 +1,17 @@\n   public Query rewrite(IndexReader reader) throws IOException {\n     Query rewritten = query.rewrite(reader);\n \n-    if (rewritten.getClass() == getClass()) {\n-      if (getBoost() != rewritten.getBoost()) {\n-        rewritten = rewritten.clone();\n-        rewritten.setBoost(getBoost());\n-      }\n-      return rewritten;\n-    }\n-\n     if (rewritten != query) {\n-      rewritten = new ConstantScoreQuery(rewritten);\n-      rewritten.setBoost(this.getBoost());\n+      return new ConstantScoreQuery(rewritten);\n+    }\n+\n+    if (rewritten.getClass() == ConstantScoreQuery.class) {\n       return rewritten;\n     }\n \n-    return this;\n+    if (rewritten.getClass() == BoostQuery.class) {\n+      return new ConstantScoreQuery(((BoostQuery) rewritten).getQuery());\n+    }\n+\n+    return super.rewrite(reader);\n   }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"1422c4607f30cb576333ac6fba7f864d8e9fdc4a": {
			"type": "Ybodychange",
			"commitMessage": "LUCENE-6448: Make Filter a better Query citizen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1675199 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2015-04-21, 1:56 PM",
			"commitName": "1422c4607f30cb576333ac6fba7f864d8e9fdc4a",
			"commitAuthor": "Adrien Grand",
			"commitDateOld": "2015-04-21, 5:55 AM",
			"commitNameOld": "c6821e1a1941e9ed6cbe35a3cb5be831bb6cfe1a",
			"commitAuthorOld": "Adrien Grand",
			"daysBetweenCommits": 0.33,
			"commitsBetweenForRepo": 6,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,13 +1,19 @@\n   public Query rewrite(IndexReader reader) throws IOException {\n-    Query sub = query;\n-    if (sub instanceof QueryWrapperFilter) {\n-      sub = ((QueryWrapperFilter) sub).getQuery();\n+    Query rewritten = query.rewrite(reader);\n+\n+    if (rewritten.getClass() == getClass()) {\n+      if (getBoost() != rewritten.getBoost()) {\n+        rewritten = rewritten.clone();\n+        rewritten.setBoost(getBoost());\n+      }\n+      return rewritten;\n     }\n-    Query rewritten = sub.rewrite(reader);\n+\n     if (rewritten != query) {\n       rewritten = new ConstantScoreQuery(rewritten);\n       rewritten.setBoost(this.getBoost());\n       return rewritten;\n     }\n+\n     return this;\n   }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"82eff4eb4de76ff641ddd603d9b8558a4277644d": {
			"type": "Ybodychange",
			"commitMessage": "LUCENE-1518: Make Filter extend Query.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1659585 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2015-02-13, 7:59 AM",
			"commitName": "82eff4eb4de76ff641ddd603d9b8558a4277644d",
			"commitAuthor": "Adrien Grand",
			"commitDateOld": "2015-02-09, 4:02 AM",
			"commitNameOld": "e0ff51383cef314cd65a4c54028ac7146379eba3",
			"commitAuthorOld": "Alan Woodward",
			"daysBetweenCommits": 4.16,
			"commitsBetweenForRepo": 43,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,22 +1,13 @@\n   public Query rewrite(IndexReader reader) throws IOException {\n-    if (query != null) {\n-      Query rewritten = query.rewrite(reader);\n-      if (rewritten != query) {\n-        rewritten = new ConstantScoreQuery(rewritten);\n-        rewritten.setBoost(this.getBoost());\n-        return rewritten;\n-      }\n-    } else {\n-      assert filter != null;\n-      // Fix outdated usage pattern from Lucene 2.x/early-3.x:\n-      // because ConstantScoreQuery only accepted filters,\n-      // QueryWrapperFilter was used to wrap queries.\n-      if (filter instanceof QueryWrapperFilter) {\n-        final QueryWrapperFilter qwf = (QueryWrapperFilter) filter;\n-        final Query rewritten = new ConstantScoreQuery(qwf.getQuery().rewrite(reader));\n-        rewritten.setBoost(this.getBoost());\n-        return rewritten;\n-      }\n+    Query sub = query;\n+    if (sub instanceof QueryWrapperFilter) {\n+      sub = ((QueryWrapperFilter) sub).getQuery();\n+    }\n+    Query rewritten = sub.rewrite(reader);\n+    if (rewritten != query) {\n+      rewritten = new ConstantScoreQuery(rewritten);\n+      rewritten.setBoost(this.getBoost());\n+      return rewritten;\n     }\n     return this;\n   }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"e45d67083e642ad21c9dc337637b53d55da94964": {
			"type": "Ybodychange",
			"commitMessage": "LUCENE-5307: Fix topScorer inconsistency in handling QueryWrapperFilter inside ConstantScoreQuery, which now rewrites to a query removing the obsolete QueryWrapperFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1535950 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2013-10-26, 2:12 AM",
			"commitName": "e45d67083e642ad21c9dc337637b53d55da94964",
			"commitAuthor": "Uwe Schindler",
			"commitDateOld": "2013-03-14, 1:48 PM",
			"commitNameOld": "2c64eb9019e3815259e4cd013c47a930a22f8e0d",
			"commitAuthorOld": "Robert Muir",
			"daysBetweenCommits": 225.52,
			"commitsBetweenForRepo": 1524,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,11 +1,22 @@\n   public Query rewrite(IndexReader reader) throws IOException {\n     if (query != null) {\n       Query rewritten = query.rewrite(reader);\n       if (rewritten != query) {\n         rewritten = new ConstantScoreQuery(rewritten);\n         rewritten.setBoost(this.getBoost());\n         return rewritten;\n       }\n+    } else {\n+      assert filter != null;\n+      // Fix outdated usage pattern from Lucene 2.x/early-3.x:\n+      // because ConstantScoreQuery only accepted filters,\n+      // QueryWrapperFilter was used to wrap queries.\n+      if (filter instanceof QueryWrapperFilter) {\n+        final QueryWrapperFilter qwf = (QueryWrapperFilter) filter;\n+        final Query rewritten = new ConstantScoreQuery(qwf.getQuery().rewrite(reader));\n+        rewritten.setBoost(this.getBoost());\n+        return rewritten;\n+      }\n     }\n     return this;\n   }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"eb0ab3d392a42c1835f79bcd7f5404bcc50c8e4c": {
			"type": "Yfilerename",
			"commitMessage": "LUCENE-3753: Restructure the Lucene build system\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1241588 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2012-02-07, 11:59 AM",
			"commitName": "eb0ab3d392a42c1835f79bcd7f5404bcc50c8e4c",
			"commitAuthor": "Steven Rowe",
			"commitDateOld": "2012-02-07, 10:58 AM",
			"commitNameOld": "8b939cb7d20160f9f8a7baf2030613f0e1e877b4",
			"commitAuthorOld": "Robert Muir",
			"daysBetweenCommits": 0.04,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.java",
				"newPath": "lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.java"
			}
		},
		"adfabc3df71f372a5c968d61e9167890388d24fd": {
			"type": "Ybodychange",
			"commitMessage": "LUCENE-2838: ConstantScoreQuery now directly supports wrapping a Query instance for stripping off scores\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1054406 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2011-01-02, 5:47 AM",
			"commitName": "adfabc3df71f372a5c968d61e9167890388d24fd",
			"commitAuthor": "Uwe Schindler",
			"commitDateOld": "2010-08-31, 12:50 PM",
			"commitNameOld": "5fe8094027995a408e474be6f50d27831ec5463c",
			"commitAuthorOld": "Simon Willnauer",
			"daysBetweenCommits": 123.75,
			"commitsBetweenForRepo": 746,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,3 +1,11 @@\n   public Query rewrite(IndexReader reader) throws IOException {\n+    if (query != null) {\n+      Query rewritten = query.rewrite(reader);\n+      if (rewritten != query) {\n+        rewritten = new ConstantScoreQuery(rewritten);\n+        rewritten.setBoost(this.getBoost());\n+        return rewritten;\n+      }\n+    }\n     return this;\n   }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"778d96752fa94636a2136ea2b4d58a3fcbe283ec": {
			"type": "Yfilerename",
			"commitMessage": "SVN-GIT conversion, path copy emulation.\n",
			"commitDate": "2016-01-22, 4:18 PM",
			"commitName": "778d96752fa94636a2136ea2b4d58a3fcbe283ec",
			"commitAuthor": "Dawid Weiss",
			"commitDateOld": "2010-03-17, 7:57 AM",
			"commitNameOld": "2e5c6cdadc820220f8cb86e1b6e215da941649f9",
			"commitAuthorOld": "Uwe Schindler",
			"daysBetweenCommits": 2137.39,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "src/java/org/apache/lucene/search/ConstantScoreQuery.java",
				"newPath": "lucene/src/java/org/apache/lucene/search/ConstantScoreQuery.java"
			}
		},
		"fd41195ef316b9ff2f1721d259c2bbeedf1a1ff0": {
			"type": "Yintroduced",
			"commitMessage": "ConstantScoreRangeQuery addition: LUCENE-383\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/java/trunk@344312 13f79535-47bb-0310-9956-ffa450edef68\n",
			"commitDate": "2005-11-14, 9:28 PM",
			"commitName": "fd41195ef316b9ff2f1721d259c2bbeedf1a1ff0",
			"commitAuthor": "Yonik Seeley",
			"diff": "@@ -0,0 +1,3 @@\n+  public Query rewrite(IndexReader reader) throws IOException {\n+    return this;\n+  }\n\\ No newline at end of file\n"
		}
	},
	"sha": "38bf976cd4b9e324c21664bd7ae3d554df803705"
}