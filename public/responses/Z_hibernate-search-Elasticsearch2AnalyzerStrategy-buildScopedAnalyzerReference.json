{
	"repo": "https://github.com/hibernate/hibernate-search.git",
	"file": "elasticsearch/src/main/java/org/hibernate/search/elasticsearch/analyzer/impl/Elasticsearch2AnalyzerStrategy.java",
	"method": {
		"longName": "public ScopedElasticsearchAnalyzerReference.Builder buildScopedAnalyzerReference(AnalyzerReference initialGlobalAnalyzerReference);",
		"startLine": 273,
		"methodName": "buildScopedAnalyzerReference",
		"isStatic": false,
		"isAbstract": false,
		"visibility": "public"
	},
	"history": {
		"d2dd845f749594b15127ac5d9943b0b3a11b4370": {
			"type": "Yfilerename",
			"commitMessage": "HSEARCH-2659 Define normalizers as proper normalizers in Elasticsearch 5.2+ index settings\n\nInstead of defining them as analysers as we used to do (since\nnormalizers were not supported before ES 5.2).\n",
			"commitDate": "2017-06-05, 3:47 PM",
			"commitName": "d2dd845f749594b15127ac5d9943b0b3a11b4370",
			"commitAuthor": "Yoann Rodière",
			"commitDateOld": "2017-06-05, 3:47 PM",
			"commitNameOld": "17ad5d7e11f27961a681c21eb07e353de3a1cc8d",
			"commitAuthorOld": "Yoann Rodière",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "elasticsearch/src/main/java/org/hibernate/search/elasticsearch/analyzer/impl/ElasticsearchAnalyzerStrategy.java",
				"newPath": "elasticsearch/src/main/java/org/hibernate/search/elasticsearch/analyzer/impl/Elasticsearch2AnalyzerStrategy.java"
			}
		},
		"4d67078da0168380cf0667a729294ba7397f947b": {
			"type": "Ybodychange",
			"commitMessage": "HSEARCH-2726 Move scoping up from analyzers to analyzer *references*\n\n1. It requires less code, without being more complex.\n2. Since scoping involves referencing other analyzers, it seems about\nright that the two concepts are mixed together somehow.\n3. And most of all, we'll need this scoping mechanism in order to\ninspect analyzer references before they have been initialized. Indeed,\nwe'll need to determine whether a (potentially scoped) reference targets\na normalizer or an analyzer for two reasons:\n  * in ElasticsearchMissingValueStrategy, to determine the ES datatype\n  (text or keyword)\n  * in AnnotationMetadataProvider, to detect sortable fields that were\n  assigned an analyzer instead of a normalizer\n... and in both case we are working during metadata generation\n(so before analyzer references are initialized).\n",
			"commitDate": "2017-06-05, 4:07 AM",
			"commitName": "4d67078da0168380cf0667a729294ba7397f947b",
			"commitAuthor": "Yoann Rodière",
			"commitDateOld": "2017-06-05, 4:07 AM",
			"commitNameOld": "c3069de87c4a6ad3dfb150958d7e40993090730b",
			"commitAuthorOld": "Yoann Rodière",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 4,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,6 +1,6 @@\n \tpublic ScopedElasticsearchAnalyzerReference.Builder buildScopedAnalyzerReference(AnalyzerReference initialGlobalAnalyzerReference) {\n-\t\treturn new ScopedElasticsearchAnalyzerReference.DeferredInitializationBuilder(\n+\t\treturn new ScopedElasticsearchAnalyzerReference.Builder(\n \t\t\t\tinitialGlobalAnalyzerReference.unwrap( ElasticsearchAnalyzerReference.class ),\n \t\t\t\tCollections.<String, ElasticsearchAnalyzerReference>emptyMap()\n \t\t\t\t);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"078c1275090dfe691bc0acf3929ae2d59e9ecaa5": {
			"type": "Ybodychange",
			"commitMessage": "HSEARCH-2527 Remove the need for synchronization in Scoped*AnalyzerReference.getAnalyzer()\n\nWe make sure the reference is either initialized at the end of the\nsearch factory initialization (for references created during\nbootstraping) or immediately when it's built (for references created\nat runtime, when copying).\n",
			"commitDate": "2017-01-21, 4:58 PM",
			"commitName": "078c1275090dfe691bc0acf3929ae2d59e9ecaa5",
			"commitAuthor": "Yoann Rodière",
			"commitDateOld": "2017-01-21, 4:58 PM",
			"commitNameOld": "271f0b6a3d625b7af4b09f42a181d927d43227ff",
			"commitAuthorOld": "Yoann Rodière",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,6 +1,6 @@\n \tpublic ScopedElasticsearchAnalyzerReference.Builder buildScopedAnalyzerReference(AnalyzerReference initialGlobalAnalyzerReference) {\n-\t\treturn new ScopedElasticsearchAnalyzerReference.Builder(\n+\t\treturn new ScopedElasticsearchAnalyzerReference.DeferredInitializationBuilder(\n \t\t\t\tinitialGlobalAnalyzerReference.unwrap( ElasticsearchAnalyzerReference.class ),\n \t\t\t\tCollections.<String, ElasticsearchAnalyzerReference>emptyMap()\n \t\t\t\t);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"271f0b6a3d625b7af4b09f42a181d927d43227ff": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "HSEARCH-2527 Make it possible for analyzer strategies to initialize *all* their references\n\n... and not only the named ones.\n",
			"commitDate": "2017-01-21, 4:58 PM",
			"commitName": "271f0b6a3d625b7af4b09f42a181d927d43227ff",
			"commitAuthor": "Yoann Rodière",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "HSEARCH-2527 Make it possible for analyzer strategies to initialize *all* their references\n\n... and not only the named ones.\n",
					"commitDate": "2017-01-21, 4:58 PM",
					"commitName": "271f0b6a3d625b7af4b09f42a181d927d43227ff",
					"commitAuthor": "Yoann Rodière",
					"commitDateOld": "2017-01-21, 4:58 PM",
					"commitNameOld": "5147cfbbbcb0596d25179833dd0ebc5633ea885e",
					"commitAuthorOld": "Yoann Rodière",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 3,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,6 @@\n-\tpublic ScopedElasticsearchAnalyzerReference.Builder buildScopedAnalyzerReference(ElasticsearchAnalyzerReference initialGlobalAnalyzerReference) {\n+\tpublic ScopedElasticsearchAnalyzerReference.Builder buildScopedAnalyzerReference(AnalyzerReference initialGlobalAnalyzerReference) {\n \t\treturn new ScopedElasticsearchAnalyzerReference.Builder(\n-\t\t\t\tinitialGlobalAnalyzerReference, Collections.<String, ElasticsearchAnalyzerReference>emptyMap()\n+\t\t\t\tinitialGlobalAnalyzerReference.unwrap( ElasticsearchAnalyzerReference.class ),\n+\t\t\t\tCollections.<String, ElasticsearchAnalyzerReference>emptyMap()\n \t\t\t\t);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[initialGlobalAnalyzerReference-ElasticsearchAnalyzerReference]",
						"newValue": "[initialGlobalAnalyzerReference-AnalyzerReference]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "HSEARCH-2527 Make it possible for analyzer strategies to initialize *all* their references\n\n... and not only the named ones.\n",
					"commitDate": "2017-01-21, 4:58 PM",
					"commitName": "271f0b6a3d625b7af4b09f42a181d927d43227ff",
					"commitAuthor": "Yoann Rodière",
					"commitDateOld": "2017-01-21, 4:58 PM",
					"commitNameOld": "5147cfbbbcb0596d25179833dd0ebc5633ea885e",
					"commitAuthorOld": "Yoann Rodière",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 3,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,6 @@\n-\tpublic ScopedElasticsearchAnalyzerReference.Builder buildScopedAnalyzerReference(ElasticsearchAnalyzerReference initialGlobalAnalyzerReference) {\n+\tpublic ScopedElasticsearchAnalyzerReference.Builder buildScopedAnalyzerReference(AnalyzerReference initialGlobalAnalyzerReference) {\n \t\treturn new ScopedElasticsearchAnalyzerReference.Builder(\n-\t\t\t\tinitialGlobalAnalyzerReference, Collections.<String, ElasticsearchAnalyzerReference>emptyMap()\n+\t\t\t\tinitialGlobalAnalyzerReference.unwrap( ElasticsearchAnalyzerReference.class ),\n+\t\t\t\tCollections.<String, ElasticsearchAnalyzerReference>emptyMap()\n \t\t\t\t);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"5147cfbbbcb0596d25179833dd0ebc5633ea885e": {
			"type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
			"commitMessage": "HSEARCH-2527 Remove mix-ups between analyzers and analyzer references\n\n1. Move the scoped analyzer builder from the analyzers to the\n   references. That way, we can have lazy initialization on scoped\n   analyzer references, which in turn allows us to avoid having analyzer\n   references inside scoped analyzer.\n2. Make it more clear that only *some* analyzer references have a name\n   by introducing the NamedAnalyzerReference interface.\n   Hopefully this will make it clearer that the analyzer reference name\n   is not the same as the analyzer name:\n     * when an analyzer reference has a name, its analyzer will\n       consistency return that same name with getName(String)\n     * *but* when the analyzer reference does not provide a name, it\n       simply means that the analyzer name can only be queried at\n       runtime (e.g. for scoped analyzers).\n",
			"commitDate": "2017-01-21, 4:58 PM",
			"commitName": "5147cfbbbcb0596d25179833dd0ebc5633ea885e",
			"commitAuthor": "Yoann Rodière",
			"subchanges": [
				{
					"type": "Yrename",
					"commitMessage": "HSEARCH-2527 Remove mix-ups between analyzers and analyzer references\n\n1. Move the scoped analyzer builder from the analyzers to the\n   references. That way, we can have lazy initialization on scoped\n   analyzer references, which in turn allows us to avoid having analyzer\n   references inside scoped analyzer.\n2. Make it more clear that only *some* analyzer references have a name\n   by introducing the NamedAnalyzerReference interface.\n   Hopefully this will make it clearer that the analyzer reference name\n   is not the same as the analyzer name:\n     * when an analyzer reference has a name, its analyzer will\n       consistency return that same name with getName(String)\n     * *but* when the analyzer reference does not provide a name, it\n       simply means that the analyzer name can only be queried at\n       runtime (e.g. for scoped analyzers).\n",
					"commitDate": "2017-01-21, 4:58 PM",
					"commitName": "5147cfbbbcb0596d25179833dd0ebc5633ea885e",
					"commitAuthor": "Yoann Rodière",
					"commitDateOld": "2016-12-19, 2:39 PM",
					"commitNameOld": "58e6368cfa44a51ebc23561410b9c3286afaad6e",
					"commitAuthorOld": "Yoann Rodière",
					"daysBetweenCommits": 33.1,
					"commitsBetweenForRepo": 56,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,5 @@\n-\tpublic ScopedElasticsearchAnalyzer.Builder buildScopedAnalyzer(ElasticsearchAnalyzerReference initialGlobalAnalyzerReference) {\n-\t\treturn new ScopedElasticsearchAnalyzer.Builder(\n+\tpublic ScopedElasticsearchAnalyzerReference.Builder buildScopedAnalyzerReference(ElasticsearchAnalyzerReference initialGlobalAnalyzerReference) {\n+\t\treturn new ScopedElasticsearchAnalyzerReference.Builder(\n \t\t\t\tinitialGlobalAnalyzerReference, Collections.<String, ElasticsearchAnalyzerReference>emptyMap()\n \t\t\t\t);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "buildScopedAnalyzer",
						"newValue": "buildScopedAnalyzerReference"
					}
				},
				{
					"type": "Yreturntypechange",
					"commitMessage": "HSEARCH-2527 Remove mix-ups between analyzers and analyzer references\n\n1. Move the scoped analyzer builder from the analyzers to the\n   references. That way, we can have lazy initialization on scoped\n   analyzer references, which in turn allows us to avoid having analyzer\n   references inside scoped analyzer.\n2. Make it more clear that only *some* analyzer references have a name\n   by introducing the NamedAnalyzerReference interface.\n   Hopefully this will make it clearer that the analyzer reference name\n   is not the same as the analyzer name:\n     * when an analyzer reference has a name, its analyzer will\n       consistency return that same name with getName(String)\n     * *but* when the analyzer reference does not provide a name, it\n       simply means that the analyzer name can only be queried at\n       runtime (e.g. for scoped analyzers).\n",
					"commitDate": "2017-01-21, 4:58 PM",
					"commitName": "5147cfbbbcb0596d25179833dd0ebc5633ea885e",
					"commitAuthor": "Yoann Rodière",
					"commitDateOld": "2016-12-19, 2:39 PM",
					"commitNameOld": "58e6368cfa44a51ebc23561410b9c3286afaad6e",
					"commitAuthorOld": "Yoann Rodière",
					"daysBetweenCommits": 33.1,
					"commitsBetweenForRepo": 56,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,5 @@\n-\tpublic ScopedElasticsearchAnalyzer.Builder buildScopedAnalyzer(ElasticsearchAnalyzerReference initialGlobalAnalyzerReference) {\n-\t\treturn new ScopedElasticsearchAnalyzer.Builder(\n+\tpublic ScopedElasticsearchAnalyzerReference.Builder buildScopedAnalyzerReference(ElasticsearchAnalyzerReference initialGlobalAnalyzerReference) {\n+\t\treturn new ScopedElasticsearchAnalyzerReference.Builder(\n \t\t\t\tinitialGlobalAnalyzerReference, Collections.<String, ElasticsearchAnalyzerReference>emptyMap()\n \t\t\t\t);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "ScopedElasticsearchAnalyzer.Builder",
						"newValue": "ScopedElasticsearchAnalyzerReference.Builder"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "HSEARCH-2527 Remove mix-ups between analyzers and analyzer references\n\n1. Move the scoped analyzer builder from the analyzers to the\n   references. That way, we can have lazy initialization on scoped\n   analyzer references, which in turn allows us to avoid having analyzer\n   references inside scoped analyzer.\n2. Make it more clear that only *some* analyzer references have a name\n   by introducing the NamedAnalyzerReference interface.\n   Hopefully this will make it clearer that the analyzer reference name\n   is not the same as the analyzer name:\n     * when an analyzer reference has a name, its analyzer will\n       consistency return that same name with getName(String)\n     * *but* when the analyzer reference does not provide a name, it\n       simply means that the analyzer name can only be queried at\n       runtime (e.g. for scoped analyzers).\n",
					"commitDate": "2017-01-21, 4:58 PM",
					"commitName": "5147cfbbbcb0596d25179833dd0ebc5633ea885e",
					"commitAuthor": "Yoann Rodière",
					"commitDateOld": "2016-12-19, 2:39 PM",
					"commitNameOld": "58e6368cfa44a51ebc23561410b9c3286afaad6e",
					"commitAuthorOld": "Yoann Rodière",
					"daysBetweenCommits": 33.1,
					"commitsBetweenForRepo": 56,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,5 +1,5 @@\n-\tpublic ScopedElasticsearchAnalyzer.Builder buildScopedAnalyzer(ElasticsearchAnalyzerReference initialGlobalAnalyzerReference) {\n-\t\treturn new ScopedElasticsearchAnalyzer.Builder(\n+\tpublic ScopedElasticsearchAnalyzerReference.Builder buildScopedAnalyzerReference(ElasticsearchAnalyzerReference initialGlobalAnalyzerReference) {\n+\t\treturn new ScopedElasticsearchAnalyzerReference.Builder(\n \t\t\t\tinitialGlobalAnalyzerReference, Collections.<String, ElasticsearchAnalyzerReference>emptyMap()\n \t\t\t\t);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"679e1e7d5845925dbee16fa9742db77de5248aaf": {
			"type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
			"commitMessage": "HSEARCH-2219 Move remote analyzer implementations to the -elasticsearch module\n",
			"commitDate": "2016-12-19, 2:39 PM",
			"commitName": "679e1e7d5845925dbee16fa9742db77de5248aaf",
			"commitAuthor": "Yoann Rodière",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "HSEARCH-2219 Move remote analyzer implementations to the -elasticsearch module\n",
					"commitDate": "2016-12-19, 2:39 PM",
					"commitName": "679e1e7d5845925dbee16fa9742db77de5248aaf",
					"commitAuthor": "Yoann Rodière",
					"commitDateOld": "2016-12-19, 2:39 PM",
					"commitNameOld": "a300ae7c0927ebd5f9ce41932206e813702935f9",
					"commitAuthorOld": "Yoann Rodière",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,3 +1,5 @@\n-\tpublic ScopedRemoteAnalyzer.Builder buildScopedAnalyzer(RemoteAnalyzerReference initialGlobalAnalyzerReference) {\n-\t\treturn new ScopedRemoteAnalyzer.Builder( initialGlobalAnalyzerReference, Collections.<String, RemoteAnalyzerReference>emptyMap() );\n+\tpublic ScopedElasticsearchAnalyzer.Builder buildScopedAnalyzer(ElasticsearchAnalyzerReference initialGlobalAnalyzerReference) {\n+\t\treturn new ScopedElasticsearchAnalyzer.Builder(\n+\t\t\t\tinitialGlobalAnalyzerReference, Collections.<String, ElasticsearchAnalyzerReference>emptyMap()\n+\t\t\t\t);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[initialGlobalAnalyzerReference-RemoteAnalyzerReference]",
						"newValue": "[initialGlobalAnalyzerReference-ElasticsearchAnalyzerReference]"
					}
				},
				{
					"type": "Yreturntypechange",
					"commitMessage": "HSEARCH-2219 Move remote analyzer implementations to the -elasticsearch module\n",
					"commitDate": "2016-12-19, 2:39 PM",
					"commitName": "679e1e7d5845925dbee16fa9742db77de5248aaf",
					"commitAuthor": "Yoann Rodière",
					"commitDateOld": "2016-12-19, 2:39 PM",
					"commitNameOld": "a300ae7c0927ebd5f9ce41932206e813702935f9",
					"commitAuthorOld": "Yoann Rodière",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,3 +1,5 @@\n-\tpublic ScopedRemoteAnalyzer.Builder buildScopedAnalyzer(RemoteAnalyzerReference initialGlobalAnalyzerReference) {\n-\t\treturn new ScopedRemoteAnalyzer.Builder( initialGlobalAnalyzerReference, Collections.<String, RemoteAnalyzerReference>emptyMap() );\n+\tpublic ScopedElasticsearchAnalyzer.Builder buildScopedAnalyzer(ElasticsearchAnalyzerReference initialGlobalAnalyzerReference) {\n+\t\treturn new ScopedElasticsearchAnalyzer.Builder(\n+\t\t\t\tinitialGlobalAnalyzerReference, Collections.<String, ElasticsearchAnalyzerReference>emptyMap()\n+\t\t\t\t);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "ScopedRemoteAnalyzer.Builder",
						"newValue": "ScopedElasticsearchAnalyzer.Builder"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "HSEARCH-2219 Move remote analyzer implementations to the -elasticsearch module\n",
					"commitDate": "2016-12-19, 2:39 PM",
					"commitName": "679e1e7d5845925dbee16fa9742db77de5248aaf",
					"commitAuthor": "Yoann Rodière",
					"commitDateOld": "2016-12-19, 2:39 PM",
					"commitNameOld": "a300ae7c0927ebd5f9ce41932206e813702935f9",
					"commitAuthorOld": "Yoann Rodière",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,3 +1,5 @@\n-\tpublic ScopedRemoteAnalyzer.Builder buildScopedAnalyzer(RemoteAnalyzerReference initialGlobalAnalyzerReference) {\n-\t\treturn new ScopedRemoteAnalyzer.Builder( initialGlobalAnalyzerReference, Collections.<String, RemoteAnalyzerReference>emptyMap() );\n+\tpublic ScopedElasticsearchAnalyzer.Builder buildScopedAnalyzer(ElasticsearchAnalyzerReference initialGlobalAnalyzerReference) {\n+\t\treturn new ScopedElasticsearchAnalyzer.Builder(\n+\t\t\t\tinitialGlobalAnalyzerReference, Collections.<String, ElasticsearchAnalyzerReference>emptyMap()\n+\t\t\t\t);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"11577f700d21d558e92f914c30b87d28c5636911": {
			"type": "Ybodychange",
			"commitMessage": "HSEARCH-2219 Remove Lazy*Analyzers and replace them with lazy references\n\nThis is required in order to enable indexing services to define their\nown analyzer type, with custom data.\n",
			"commitDate": "2016-12-19, 2:39 PM",
			"commitName": "11577f700d21d558e92f914c30b87d28c5636911",
			"commitAuthor": "Yoann Rodière",
			"commitDateOld": "2016-12-19, 2:39 PM",
			"commitNameOld": "41f3df944236b6f1be388d156f1a466e4cb19738",
			"commitAuthorOld": "Yoann Rodière",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,3 +1,3 @@\n \tpublic ScopedRemoteAnalyzer.Builder buildScopedAnalyzer(RemoteAnalyzerReference initialGlobalAnalyzerReference) {\n-\t\treturn new ScopedRemoteAnalyzer.Builder( initialGlobalAnalyzerReference, Collections.<String, RemoteAnalyzer>emptyMap() );\n+\t\treturn new ScopedRemoteAnalyzer.Builder( initialGlobalAnalyzerReference, Collections.<String, RemoteAnalyzerReference>emptyMap() );\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"41f3df944236b6f1be388d156f1a466e4cb19738": {
			"type": "Yintroduced",
			"commitMessage": "HSEARCH-2219 Move scoped analyzers to SPI\n\nThis is required in order to enable indexing services to define their\nown analyzer type, with custom data.\n",
			"commitDate": "2016-12-19, 2:39 PM",
			"commitName": "41f3df944236b6f1be388d156f1a466e4cb19738",
			"commitAuthor": "Yoann Rodière",
			"diff": "@@ -0,0 +1,3 @@\n+\tpublic ScopedRemoteAnalyzer.Builder buildScopedAnalyzer(RemoteAnalyzerReference initialGlobalAnalyzerReference) {\n+\t\treturn new ScopedRemoteAnalyzer.Builder( initialGlobalAnalyzerReference, Collections.<String, RemoteAnalyzer>emptyMap() );\n+\t}\n\\ No newline at end of file\n"
		}
	},
	"sha": "5b778035965d7588ad1d1ae522c4bafebd3a0e16"
}