{
	"repo": "https://github.com/mockito/mockito.git",
	"file": "src/main/java/org/mockito/internal/invocation/InvocationsFinder.java",
	"method": {
		"longName": "public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context);",
		"startLine": 119,
		"methodName": "findPreviousVerifiedInOrder",
		"isStatic": true,
		"isAbstract": false,
		"visibility": "public"
	},
	"history": {
		"ae1af27799f53dfeeb23cda187a9247afc0cd951": {
			"type": "Ymodifierchange",
			"commitMessage": "refactored InvocationsFinder to static utility class",
			"commitDate": "2016-06-23, 2:10 PM",
			"commitName": "ae1af27799f53dfeeb23cda187a9247afc0cd951",
			"commitAuthor": "Christian Schwarz",
			"commitDateOld": "2015-07-08, 9:42 PM",
			"commitNameOld": "fe7bbabb82ce3d1000c13d39d6355c134e94ac27",
			"commitAuthorOld": "Szczepan Faber",
			"daysBetweenCommits": 350.69,
			"commitsBetweenForRepo": 246,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,9 +1,9 @@\n-    public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context) {\n+    public static Invocation findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context) {\n         LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n         \n         if (verifiedOnly.isEmpty()) {\n             return null;\n         } else {\n             return verifiedOnly.getLast();\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {
				"oldValue": "[public]",
				"newValue": "[public, static]"
			}
		},
		"fe7bbabb82ce3d1000c13d39d6355c134e94ac27": {
			"type": "Yfilerename",
			"commitMessage": "Moved sources to standard location\n\nLet's make the project be as close as possible to standard, conventional project for better clarity\n",
			"commitDate": "2015-07-08, 9:42 PM",
			"commitName": "fe7bbabb82ce3d1000c13d39d6355c134e94ac27",
			"commitAuthor": "Szczepan Faber",
			"commitDateOld": "2015-07-08, 9:16 AM",
			"commitNameOld": "9d3124ae8768ec9fb60ff5b8a176b060491f9770",
			"commitAuthorOld": "Szczepan Faber",
			"daysBetweenCommits": 0.52,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "src/org/mockito/internal/invocation/InvocationsFinder.java",
				"newPath": "src/main/java/org/mockito/internal/invocation/InvocationsFinder.java"
			}
		},
		"bb29c7721dc74a5b3de40a2cda1129529463f9fc": {
			"type": "Yreturntypechange",
			"commitMessage": "Started using Invocation instead of InvocationImpl where possible\n",
			"commitDate": "2012-03-31, 3:31 PM",
			"commitName": "bb29c7721dc74a5b3de40a2cda1129529463f9fc",
			"commitAuthor": "Szczepan Faber",
			"commitDateOld": "2012-03-31, 3:29 PM",
			"commitNameOld": "d87b82cf9c9138076b208d858cf921f65dcf61d9",
			"commitAuthorOld": "Szczepan Faber",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,9 +1,9 @@\n-    public InvocationImpl findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context) {\n+    public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context) {\n         LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n         \n         if (verifiedOnly.isEmpty()) {\n             return null;\n         } else {\n             return verifiedOnly.getLast();\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {
				"oldValue": "InvocationImpl",
				"newValue": "Invocation"
			}
		},
		"60f0c0c767879989d40d7846054cfc1df64e76af": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "Started using the new Invocation interface where possible.\n",
			"commitDate": "2012-03-31, 3:12 PM",
			"commitName": "60f0c0c767879989d40d7846054cfc1df64e76af",
			"commitAuthor": "Szczepan Faber",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "Started using the new Invocation interface where possible.\n",
					"commitDate": "2012-03-31, 3:12 PM",
					"commitName": "60f0c0c767879989d40d7846054cfc1df64e76af",
					"commitAuthor": "Szczepan Faber",
					"commitDateOld": "2012-03-31, 3:10 PM",
					"commitNameOld": "a99d63b477bac80720fa25214ef7c3eb73576627",
					"commitAuthorOld": "Szczepan Faber",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 2,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,9 +1,9 @@\n-    public InvocationImpl findPreviousVerifiedInOrder(List<InvocationImpl> invocations, InOrderContext context) {\n-        LinkedList<InvocationImpl> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n+    public InvocationImpl findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context) {\n+        LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n         \n         if (verifiedOnly.isEmpty()) {\n             return null;\n         } else {\n             return verifiedOnly.getLast();\n         }\n     }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[invocations-List<InvocationImpl>, context-InOrderContext]",
						"newValue": "[invocations-List<Invocation>, context-InOrderContext]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "Started using the new Invocation interface where possible.\n",
					"commitDate": "2012-03-31, 3:12 PM",
					"commitName": "60f0c0c767879989d40d7846054cfc1df64e76af",
					"commitAuthor": "Szczepan Faber",
					"commitDateOld": "2012-03-31, 3:10 PM",
					"commitNameOld": "a99d63b477bac80720fa25214ef7c3eb73576627",
					"commitAuthorOld": "Szczepan Faber",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 2,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,9 +1,9 @@\n-    public InvocationImpl findPreviousVerifiedInOrder(List<InvocationImpl> invocations, InOrderContext context) {\n-        LinkedList<InvocationImpl> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n+    public InvocationImpl findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context) {\n+        LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n         \n         if (verifiedOnly.isEmpty()) {\n             return null;\n         } else {\n             return verifiedOnly.getLast();\n         }\n     }\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"a99d63b477bac80720fa25214ef7c3eb73576627": {
			"type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
			"commitMessage": "Renamed Invocation -> InvocationImpl before using the interface type where possible...\n\n--HG--\nrename : src/org/mockito/internal/invocation/Invocation.java => src/org/mockito/internal/invocation/InvocationImpl.java\n",
			"commitDate": "2012-03-31, 3:10 PM",
			"commitName": "a99d63b477bac80720fa25214ef7c3eb73576627",
			"commitAuthor": "Szczepan Faber",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "Renamed Invocation -> InvocationImpl before using the interface type where possible...\n\n--HG--\nrename : src/org/mockito/internal/invocation/Invocation.java => src/org/mockito/internal/invocation/InvocationImpl.java\n",
					"commitDate": "2012-03-31, 3:10 PM",
					"commitName": "a99d63b477bac80720fa25214ef7c3eb73576627",
					"commitAuthor": "Szczepan Faber",
					"commitDateOld": "2012-03-31, 2:59 PM",
					"commitNameOld": "87670dcd2a782a8218fa3c559a5da20c9e181476",
					"commitAuthorOld": "Szczepan Faber",
					"daysBetweenCommits": 0.01,
					"commitsBetweenForRepo": 3,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,9 +1,9 @@\n-    public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context) {\n-        LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n+    public InvocationImpl findPreviousVerifiedInOrder(List<InvocationImpl> invocations, InOrderContext context) {\n+        LinkedList<InvocationImpl> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n         \n         if (verifiedOnly.isEmpty()) {\n             return null;\n         } else {\n             return verifiedOnly.getLast();\n         }\n     }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[invocations-List<Invocation>, context-InOrderContext]",
						"newValue": "[invocations-List<InvocationImpl>, context-InOrderContext]"
					}
				},
				{
					"type": "Yreturntypechange",
					"commitMessage": "Renamed Invocation -> InvocationImpl before using the interface type where possible...\n\n--HG--\nrename : src/org/mockito/internal/invocation/Invocation.java => src/org/mockito/internal/invocation/InvocationImpl.java\n",
					"commitDate": "2012-03-31, 3:10 PM",
					"commitName": "a99d63b477bac80720fa25214ef7c3eb73576627",
					"commitAuthor": "Szczepan Faber",
					"commitDateOld": "2012-03-31, 2:59 PM",
					"commitNameOld": "87670dcd2a782a8218fa3c559a5da20c9e181476",
					"commitAuthorOld": "Szczepan Faber",
					"daysBetweenCommits": 0.01,
					"commitsBetweenForRepo": 3,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,9 +1,9 @@\n-    public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context) {\n-        LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n+    public InvocationImpl findPreviousVerifiedInOrder(List<InvocationImpl> invocations, InOrderContext context) {\n+        LinkedList<InvocationImpl> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n         \n         if (verifiedOnly.isEmpty()) {\n             return null;\n         } else {\n             return verifiedOnly.getLast();\n         }\n     }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "Invocation",
						"newValue": "InvocationImpl"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "Renamed Invocation -> InvocationImpl before using the interface type where possible...\n\n--HG--\nrename : src/org/mockito/internal/invocation/Invocation.java => src/org/mockito/internal/invocation/InvocationImpl.java\n",
					"commitDate": "2012-03-31, 3:10 PM",
					"commitName": "a99d63b477bac80720fa25214ef7c3eb73576627",
					"commitAuthor": "Szczepan Faber",
					"commitDateOld": "2012-03-31, 2:59 PM",
					"commitNameOld": "87670dcd2a782a8218fa3c559a5da20c9e181476",
					"commitAuthorOld": "Szczepan Faber",
					"daysBetweenCommits": 0.01,
					"commitsBetweenForRepo": 3,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,9 +1,9 @@\n-    public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context) {\n-        LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n+    public InvocationImpl findPreviousVerifiedInOrder(List<InvocationImpl> invocations, InOrderContext context) {\n+        LinkedList<InvocationImpl> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n         \n         if (verifiedOnly.isEmpty()) {\n             return null;\n         } else {\n             return verifiedOnly.getLast();\n         }\n     }\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"913b4982da55113eba0f67d334cefa7e29a4c4d2": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "Fixed issue 163\nIt is possible now to have multiple InOrders. BTW. you should not have multiple InOrders  because most likely you are doing something wrong in the code.\nHowever, in order to keep the api consistent I had to fix it.\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401921\n",
			"commitDate": "2010-03-14, 2:22 PM",
			"commitName": "913b4982da55113eba0f67d334cefa7e29a4c4d2",
			"commitAuthor": "Szczepan Faber",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "Fixed issue 163\nIt is possible now to have multiple InOrders. BTW. you should not have multiple InOrders  because most likely you are doing something wrong in the code.\nHowever, in order to keep the api consistent I had to fix it.\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401921\n",
					"commitDate": "2010-03-14, 2:22 PM",
					"commitName": "913b4982da55113eba0f67d334cefa7e29a4c4d2",
					"commitAuthor": "Szczepan Faber",
					"commitDateOld": "2009-04-08, 5:44 AM",
					"commitNameOld": "06a8de1672f275c982b4045b8d1e3204aad0f08d",
					"commitAuthorOld": "Szczepan Faber",
					"daysBetweenCommits": 340.36,
					"commitsBetweenForRepo": 466,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,9 +1,9 @@\n-    public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations) {\n-        LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder());\n+    public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context) {\n+        LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n         \n         if (verifiedOnly.isEmpty()) {\n             return null;\n         } else {\n             return verifiedOnly.getLast();\n         }\n     }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[invocations-List<Invocation>]",
						"newValue": "[invocations-List<Invocation>, context-InOrderContext]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "Fixed issue 163\nIt is possible now to have multiple InOrders. BTW. you should not have multiple InOrders  because most likely you are doing something wrong in the code.\nHowever, in order to keep the api consistent I had to fix it.\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%401921\n",
					"commitDate": "2010-03-14, 2:22 PM",
					"commitName": "913b4982da55113eba0f67d334cefa7e29a4c4d2",
					"commitAuthor": "Szczepan Faber",
					"commitDateOld": "2009-04-08, 5:44 AM",
					"commitNameOld": "06a8de1672f275c982b4045b8d1e3204aad0f08d",
					"commitAuthorOld": "Szczepan Faber",
					"daysBetweenCommits": 340.36,
					"commitsBetweenForRepo": 466,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,9 +1,9 @@\n-    public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations) {\n-        LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder());\n+    public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations, InOrderContext context) {\n+        LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder(context));\n         \n         if (verifiedOnly.isEmpty()) {\n             return null;\n         } else {\n             return verifiedOnly.getLast();\n         }\n     }\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"9fdf230cee1ae80e64e0b8dbb27185695cb57107": {
			"type": "Ybodychange",
			"commitMessage": "refactored the code a bit, added TODOs\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40835\n",
			"commitDate": "2008-08-28, 2:41 PM",
			"commitName": "9fdf230cee1ae80e64e0b8dbb27185695cb57107",
			"commitAuthor": "Szczepan Faber",
			"commitDateOld": "2008-08-28, 2:51 AM",
			"commitNameOld": "3b7df7d0bdfacfc1c62eb4fcdc082b1d57b8b57a",
			"commitAuthorOld": "Bartosz Bankowski",
			"daysBetweenCommits": 0.49,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,5 +1,9 @@\n     public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations) {\n         LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder());\n         \n-        return verifiedOnly.isEmpty() ? null : verifiedOnly.getLast();\n+        if (verifiedOnly.isEmpty()) {\n+            return null;\n+        } else {\n+            return verifiedOnly.getLast();\n+        }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"3b7df7d0bdfacfc1c62eb4fcdc082b1d57b8b57a": {
			"type": "Ybodychange",
			"commitMessage": "Small fixes.\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40833\n",
			"commitDate": "2008-08-28, 2:51 AM",
			"commitName": "3b7df7d0bdfacfc1c62eb4fcdc082b1d57b8b57a",
			"commitAuthor": "Bartosz Bankowski",
			"commitDateOld": "2008-08-27, 10:23 AM",
			"commitNameOld": "1bd90b762d1d70fdd955795e87c07a95b8aaa165",
			"commitAuthorOld": "Bartosz Bankowski",
			"daysBetweenCommits": 0.69,
			"commitsBetweenForRepo": 3,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,9 +1,5 @@\n     public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations) {\n         LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder());\n         \n-        if (verifiedOnly.isEmpty()) {\n-            return null;\n-        } else {\n-            return verifiedOnly.getLast();\n-        }\n+        return verifiedOnly.isEmpty() ? null : verifiedOnly.getLast();\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"004ce06f0ba5601ae6eedcd5c09563d638069e93": {
			"type": "Ymultichange(Yrename,Yparameterchange)",
			"commitMessage": "refactored some stuff, added test\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40325\n",
			"commitDate": "2008-01-22, 1:40 PM",
			"commitName": "004ce06f0ba5601ae6eedcd5c09563d638069e93",
			"commitAuthor": "Szczepan Faber",
			"subchanges": [
				{
					"type": "Yrename",
					"commitMessage": "refactored some stuff, added test\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40325\n",
					"commitDate": "2008-01-22, 1:40 PM",
					"commitName": "004ce06f0ba5601ae6eedcd5c09563d638069e93",
					"commitAuthor": "Szczepan Faber",
					"commitDateOld": "2008-01-22, 10:38 AM",
					"commitNameOld": "d15a0eac9af0abd48faf91e032c2f6351d7de0a1",
					"commitAuthorOld": "Szczepan Faber",
					"daysBetweenCommits": 0.13,
					"commitsBetweenForRepo": 2,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,9 +1,9 @@\n-    public Invocation findPreviousInOrder(List<Invocation> invocations, InvocationMatcher wanted) {\n+    public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations) {\n         LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder());\n         \n         if (verifiedOnly.isEmpty()) {\n             return null;\n         } else {\n             return verifiedOnly.getLast();\n         }\n     }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "findPreviousInOrder",
						"newValue": "findPreviousVerifiedInOrder"
					}
				},
				{
					"type": "Yparameterchange",
					"commitMessage": "refactored some stuff, added test\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40325\n",
					"commitDate": "2008-01-22, 1:40 PM",
					"commitName": "004ce06f0ba5601ae6eedcd5c09563d638069e93",
					"commitAuthor": "Szczepan Faber",
					"commitDateOld": "2008-01-22, 10:38 AM",
					"commitNameOld": "d15a0eac9af0abd48faf91e032c2f6351d7de0a1",
					"commitAuthorOld": "Szczepan Faber",
					"daysBetweenCommits": 0.13,
					"commitsBetweenForRepo": 2,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,9 +1,9 @@\n-    public Invocation findPreviousInOrder(List<Invocation> invocations, InvocationMatcher wanted) {\n+    public Invocation findPreviousVerifiedInOrder(List<Invocation> invocations) {\n         LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder());\n         \n         if (verifiedOnly.isEmpty()) {\n             return null;\n         } else {\n             return verifiedOnly.getLast();\n         }\n     }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[invocations-List<Invocation>, wanted-InvocationMatcher]",
						"newValue": "[invocations-List<Invocation>]"
					}
				}
			]
		},
		"1f1d4d0e734713c3f09313465ed1800b8fb50069": {
			"type": "Yintroduced",
			"commitMessage": "enabled test for descriptive message when verification in order fails. implemented logic.\n\n--HG--\nextra : convert_revision : svn%3Aaa2aecf3-ea3e-0410-9d70-716747e7c967/trunk%40315\n",
			"commitDate": "2008-01-21, 12:02 PM",
			"commitName": "1f1d4d0e734713c3f09313465ed1800b8fb50069",
			"commitAuthor": "Szczepan Faber",
			"diff": "@@ -0,0 +1,9 @@\n+    public Invocation findPreviousInOrder(List<Invocation> invocations, InvocationMatcher wanted) {\n+        LinkedList<Invocation> verifiedOnly = ListUtil.filter(invocations, new RemoveUnverifiedInOrder());\n+        \n+        if (verifiedOnly.isEmpty()) {\n+            return null;\n+        } else {\n+            return verifiedOnly.getLast();\n+        }\n+    }\n\\ No newline at end of file\n"
		}
	},
	"sha": "077562ea54f1fa87ff8dd233c3060ddbf0f1ce26"
}