{
	"repo": "https://github.com/eclipse/jetty.project.git",
	"file": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/FragmentDescriptor.java",
	"method": {
		"longName": "public void processAfters(XmlParser.Node ordering);",
		"startLine": 123,
		"methodName": "processAfters",
		"isStatic": false,
		"isAbstract": false,
		"visibility": "public"
	},
	"history": {
		"6d26b45afed18dd5fe1211ccfbac7eb2587aa9a9": {
			"type": "Ybodychange",
			"commitMessage": "391877 org.eclipse.jetty.webapp.FragmentDescriptor incorrectly reporting duplicate others for after ordering\n",
			"commitDate": "2012-10-14, 6:12 PM",
			"commitName": "6d26b45afed18dd5fe1211ccfbac7eb2587aa9a9",
			"commitAuthor": "Jan Bartel",
			"commitDateOld": "2012-08-16, 5:11 PM",
			"commitNameOld": "00ed5498988062d768ee306da708d338a96253dc",
			"commitAuthorOld": "Jesse McConnell",
			"daysBetweenCommits": 59.04,
			"commitsBetweenForRepo": 73,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,26 +1,26 @@\n     public void processAfters (XmlParser.Node ordering)\n     {\n         //Process the <after> elements, look for an <others/> clause and all of the <name/> clauses\n         XmlParser.Node after = ordering.get(\"after\");\n         if (after == null)\n             return;\n         \n         Iterator<?> iter = after.iterator();\n         XmlParser.Node node = null;\n         while (iter.hasNext())\n         {\n             Object o = iter.next();\n             if (!(o instanceof XmlParser.Node)) continue;\n             node = (XmlParser.Node) o;\n             if (node.getTag().equalsIgnoreCase(\"others\"))\n             {\n-                if (_otherType != OtherType.After)\n+                if (_otherType != OtherType.None)\n                     throw new IllegalStateException(\"Duplicate <other> clause detected in \"+_xml.getURI());\n \n                 _otherType = OtherType.After;\n \n             }\n             else if (node.getTag().equalsIgnoreCase(\"name\"))\n                 _afters.add(node.toString(false,true));\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"3919023be5d403b0e081430bb8f41d20ac1f29d1": {
			"type": "Ybodychange",
			"commitMessage": "[Bug 352133] resolve some 1.5isms",
			"commitDate": "2011-07-18, 10:54 AM",
			"commitName": "3919023be5d403b0e081430bb8f41d20ac1f29d1",
			"commitAuthor": "Jesse McConnell",
			"commitDateOld": "2011-03-07, 4:42 PM",
			"commitNameOld": "5ae7e22bef2e2ea43881c9d7529a2cc15cabe897",
			"commitAuthorOld": "Jan Bartel",
			"daysBetweenCommits": 132.72,
			"commitsBetweenForRepo": 403,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,26 +1,26 @@\n     public void processAfters (XmlParser.Node ordering)\n     {\n         //Process the <after> elements, look for an <others/> clause and all of the <name/> clauses\n         XmlParser.Node after = ordering.get(\"after\");\n         if (after == null)\n             return;\n         \n-        Iterator iter = after.iterator();\n+        Iterator<?> iter = after.iterator();\n         XmlParser.Node node = null;\n         while (iter.hasNext())\n         {\n             Object o = iter.next();\n             if (!(o instanceof XmlParser.Node)) continue;\n             node = (XmlParser.Node) o;\n             if (node.getTag().equalsIgnoreCase(\"others\"))\n             {\n                 if (_otherType != OtherType.After)\n                     throw new IllegalStateException(\"Duplicate <other> clause detected in \"+_xml.getURI());\n \n                 _otherType = OtherType.After;\n \n             }\n             else if (node.getTag().equalsIgnoreCase(\"name\"))\n                 _afters.add(node.toString(false,true));\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"314f94decc0e814baf31f500502020e05fcb73a2": {
			"type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Yrename,Yparameterchange)",
			"commitMessage": "320073 Reconcile jetty-8 and jetty-7 webapp configuration mechanisms\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2145 7e9141cc-0065-0410-87d8-b60c137991c4\n",
			"commitDate": "2010-07-16, 12:15 AM",
			"commitName": "314f94decc0e814baf31f500502020e05fcb73a2",
			"commitAuthor": "Jan Bartel",
			"subchanges": [
				{
					"type": "Ymovefromfile",
					"commitMessage": "320073 Reconcile jetty-8 and jetty-7 webapp configuration mechanisms\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2145 7e9141cc-0065-0410-87d8-b60c137991c4\n",
					"commitDate": "2010-07-16, 12:15 AM",
					"commitName": "314f94decc0e814baf31f500502020e05fcb73a2",
					"commitAuthor": "Jan Bartel",
					"commitDateOld": "2010-07-15, 5:31 AM",
					"commitNameOld": "8210d068c43058097970fae131643df6b9d9dbdf",
					"commitAuthorOld": "Greg Wilkins",
					"daysBetweenCommits": 0.78,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,30 +1,26 @@\n-        public void process (XmlParser.Node root)\n-        throws Exception\n+    public void processAfters (XmlParser.Node ordering)\n+    {\n+        //Process the <after> elements, look for an <others/> clause and all of the <name/> clauses\n+        XmlParser.Node after = ordering.get(\"after\");\n+        if (after == null)\n+            return;\n+        \n+        Iterator iter = after.iterator();\n+        XmlParser.Node node = null;\n+        while (iter.hasNext())\n         {\n-            if (root == null)\n-                return;\n-            \n-            \n-            Iterator iter = root.iterator();\n-            XmlParser.Node node = null;\n-            while (iter.hasNext())\n+            Object o = iter.next();\n+            if (!(o instanceof XmlParser.Node)) continue;\n+            node = (XmlParser.Node) o;\n+            if (node.getTag().equalsIgnoreCase(\"others\"))\n             {\n-                try\n-                {\n-                    Object o = iter.next();\n-                    if (!(o instanceof XmlParser.Node)) continue;\n-                    node = (XmlParser.Node) o;\n-                    String name = node.getTag();\n-                    initWebXmlElement(name, node);\n-                }\n-                catch (ClassNotFoundException e)\n-                {\n-                    throw e;\n-                }\n-                catch (Exception e)\n-                {\n-                    Log.warn(\"Configuration problem at \" + node, e);\n-                    throw new UnavailableException(\"Configuration problem\");\n-                }\n-            } \n-        }\n\\ No newline at end of file\n+                if (_otherType != OtherType.After)\n+                    throw new IllegalStateException(\"Duplicate <other> clause detected in \"+_xml.getURI());\n+\n+                _otherType = OtherType.After;\n+\n+            }\n+            else if (node.getTag().equalsIgnoreCase(\"name\"))\n+                _afters.add(node.toString(false,true));\n+        }\n+    }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldPath": "jetty-plus/src/main/java/org/eclipse/jetty/plus/webapp/AbstractConfiguration.java",
						"newPath": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/FragmentDescriptor.java",
						"oldMethodName": "process",
						"newMethodName": "processAfters"
					}
				},
				{
					"type": "Yexceptionschange",
					"commitMessage": "320073 Reconcile jetty-8 and jetty-7 webapp configuration mechanisms\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2145 7e9141cc-0065-0410-87d8-b60c137991c4\n",
					"commitDate": "2010-07-16, 12:15 AM",
					"commitName": "314f94decc0e814baf31f500502020e05fcb73a2",
					"commitAuthor": "Jan Bartel",
					"commitDateOld": "2010-07-15, 5:31 AM",
					"commitNameOld": "8210d068c43058097970fae131643df6b9d9dbdf",
					"commitAuthorOld": "Greg Wilkins",
					"daysBetweenCommits": 0.78,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,30 +1,26 @@\n-        public void process (XmlParser.Node root)\n-        throws Exception\n+    public void processAfters (XmlParser.Node ordering)\n+    {\n+        //Process the <after> elements, look for an <others/> clause and all of the <name/> clauses\n+        XmlParser.Node after = ordering.get(\"after\");\n+        if (after == null)\n+            return;\n+        \n+        Iterator iter = after.iterator();\n+        XmlParser.Node node = null;\n+        while (iter.hasNext())\n         {\n-            if (root == null)\n-                return;\n-            \n-            \n-            Iterator iter = root.iterator();\n-            XmlParser.Node node = null;\n-            while (iter.hasNext())\n+            Object o = iter.next();\n+            if (!(o instanceof XmlParser.Node)) continue;\n+            node = (XmlParser.Node) o;\n+            if (node.getTag().equalsIgnoreCase(\"others\"))\n             {\n-                try\n-                {\n-                    Object o = iter.next();\n-                    if (!(o instanceof XmlParser.Node)) continue;\n-                    node = (XmlParser.Node) o;\n-                    String name = node.getTag();\n-                    initWebXmlElement(name, node);\n-                }\n-                catch (ClassNotFoundException e)\n-                {\n-                    throw e;\n-                }\n-                catch (Exception e)\n-                {\n-                    Log.warn(\"Configuration problem at \" + node, e);\n-                    throw new UnavailableException(\"Configuration problem\");\n-                }\n-            } \n-        }\n\\ No newline at end of file\n+                if (_otherType != OtherType.After)\n+                    throw new IllegalStateException(\"Duplicate <other> clause detected in \"+_xml.getURI());\n+\n+                _otherType = OtherType.After;\n+\n+            }\n+            else if (node.getTag().equalsIgnoreCase(\"name\"))\n+                _afters.add(node.toString(false,true));\n+        }\n+    }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[Exception]",
						"newValue": "[]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "320073 Reconcile jetty-8 and jetty-7 webapp configuration mechanisms\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2145 7e9141cc-0065-0410-87d8-b60c137991c4\n",
					"commitDate": "2010-07-16, 12:15 AM",
					"commitName": "314f94decc0e814baf31f500502020e05fcb73a2",
					"commitAuthor": "Jan Bartel",
					"commitDateOld": "2010-07-15, 5:31 AM",
					"commitNameOld": "8210d068c43058097970fae131643df6b9d9dbdf",
					"commitAuthorOld": "Greg Wilkins",
					"daysBetweenCommits": 0.78,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,30 +1,26 @@\n-        public void process (XmlParser.Node root)\n-        throws Exception\n+    public void processAfters (XmlParser.Node ordering)\n+    {\n+        //Process the <after> elements, look for an <others/> clause and all of the <name/> clauses\n+        XmlParser.Node after = ordering.get(\"after\");\n+        if (after == null)\n+            return;\n+        \n+        Iterator iter = after.iterator();\n+        XmlParser.Node node = null;\n+        while (iter.hasNext())\n         {\n-            if (root == null)\n-                return;\n-            \n-            \n-            Iterator iter = root.iterator();\n-            XmlParser.Node node = null;\n-            while (iter.hasNext())\n+            Object o = iter.next();\n+            if (!(o instanceof XmlParser.Node)) continue;\n+            node = (XmlParser.Node) o;\n+            if (node.getTag().equalsIgnoreCase(\"others\"))\n             {\n-                try\n-                {\n-                    Object o = iter.next();\n-                    if (!(o instanceof XmlParser.Node)) continue;\n-                    node = (XmlParser.Node) o;\n-                    String name = node.getTag();\n-                    initWebXmlElement(name, node);\n-                }\n-                catch (ClassNotFoundException e)\n-                {\n-                    throw e;\n-                }\n-                catch (Exception e)\n-                {\n-                    Log.warn(\"Configuration problem at \" + node, e);\n-                    throw new UnavailableException(\"Configuration problem\");\n-                }\n-            } \n-        }\n\\ No newline at end of file\n+                if (_otherType != OtherType.After)\n+                    throw new IllegalStateException(\"Duplicate <other> clause detected in \"+_xml.getURI());\n+\n+                _otherType = OtherType.After;\n+\n+            }\n+            else if (node.getTag().equalsIgnoreCase(\"name\"))\n+                _afters.add(node.toString(false,true));\n+        }\n+    }\n\\ No newline at end of file\n",
					"extendedDetails": {}
				},
				{
					"type": "Yrename",
					"commitMessage": "320073 Reconcile jetty-8 and jetty-7 webapp configuration mechanisms\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2145 7e9141cc-0065-0410-87d8-b60c137991c4\n",
					"commitDate": "2010-07-16, 12:15 AM",
					"commitName": "314f94decc0e814baf31f500502020e05fcb73a2",
					"commitAuthor": "Jan Bartel",
					"commitDateOld": "2010-07-15, 5:31 AM",
					"commitNameOld": "8210d068c43058097970fae131643df6b9d9dbdf",
					"commitAuthorOld": "Greg Wilkins",
					"daysBetweenCommits": 0.78,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,30 +1,26 @@\n-        public void process (XmlParser.Node root)\n-        throws Exception\n+    public void processAfters (XmlParser.Node ordering)\n+    {\n+        //Process the <after> elements, look for an <others/> clause and all of the <name/> clauses\n+        XmlParser.Node after = ordering.get(\"after\");\n+        if (after == null)\n+            return;\n+        \n+        Iterator iter = after.iterator();\n+        XmlParser.Node node = null;\n+        while (iter.hasNext())\n         {\n-            if (root == null)\n-                return;\n-            \n-            \n-            Iterator iter = root.iterator();\n-            XmlParser.Node node = null;\n-            while (iter.hasNext())\n+            Object o = iter.next();\n+            if (!(o instanceof XmlParser.Node)) continue;\n+            node = (XmlParser.Node) o;\n+            if (node.getTag().equalsIgnoreCase(\"others\"))\n             {\n-                try\n-                {\n-                    Object o = iter.next();\n-                    if (!(o instanceof XmlParser.Node)) continue;\n-                    node = (XmlParser.Node) o;\n-                    String name = node.getTag();\n-                    initWebXmlElement(name, node);\n-                }\n-                catch (ClassNotFoundException e)\n-                {\n-                    throw e;\n-                }\n-                catch (Exception e)\n-                {\n-                    Log.warn(\"Configuration problem at \" + node, e);\n-                    throw new UnavailableException(\"Configuration problem\");\n-                }\n-            } \n-        }\n\\ No newline at end of file\n+                if (_otherType != OtherType.After)\n+                    throw new IllegalStateException(\"Duplicate <other> clause detected in \"+_xml.getURI());\n+\n+                _otherType = OtherType.After;\n+\n+            }\n+            else if (node.getTag().equalsIgnoreCase(\"name\"))\n+                _afters.add(node.toString(false,true));\n+        }\n+    }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "process",
						"newValue": "processAfters"
					}
				},
				{
					"type": "Yparameterchange",
					"commitMessage": "320073 Reconcile jetty-8 and jetty-7 webapp configuration mechanisms\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@2145 7e9141cc-0065-0410-87d8-b60c137991c4\n",
					"commitDate": "2010-07-16, 12:15 AM",
					"commitName": "314f94decc0e814baf31f500502020e05fcb73a2",
					"commitAuthor": "Jan Bartel",
					"commitDateOld": "2010-07-15, 5:31 AM",
					"commitNameOld": "8210d068c43058097970fae131643df6b9d9dbdf",
					"commitAuthorOld": "Greg Wilkins",
					"daysBetweenCommits": 0.78,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,30 +1,26 @@\n-        public void process (XmlParser.Node root)\n-        throws Exception\n+    public void processAfters (XmlParser.Node ordering)\n+    {\n+        //Process the <after> elements, look for an <others/> clause and all of the <name/> clauses\n+        XmlParser.Node after = ordering.get(\"after\");\n+        if (after == null)\n+            return;\n+        \n+        Iterator iter = after.iterator();\n+        XmlParser.Node node = null;\n+        while (iter.hasNext())\n         {\n-            if (root == null)\n-                return;\n-            \n-            \n-            Iterator iter = root.iterator();\n-            XmlParser.Node node = null;\n-            while (iter.hasNext())\n+            Object o = iter.next();\n+            if (!(o instanceof XmlParser.Node)) continue;\n+            node = (XmlParser.Node) o;\n+            if (node.getTag().equalsIgnoreCase(\"others\"))\n             {\n-                try\n-                {\n-                    Object o = iter.next();\n-                    if (!(o instanceof XmlParser.Node)) continue;\n-                    node = (XmlParser.Node) o;\n-                    String name = node.getTag();\n-                    initWebXmlElement(name, node);\n-                }\n-                catch (ClassNotFoundException e)\n-                {\n-                    throw e;\n-                }\n-                catch (Exception e)\n-                {\n-                    Log.warn(\"Configuration problem at \" + node, e);\n-                    throw new UnavailableException(\"Configuration problem\");\n-                }\n-            } \n-        }\n\\ No newline at end of file\n+                if (_otherType != OtherType.After)\n+                    throw new IllegalStateException(\"Duplicate <other> clause detected in \"+_xml.getURI());\n+\n+                _otherType = OtherType.After;\n+\n+            }\n+            else if (node.getTag().equalsIgnoreCase(\"name\"))\n+                _afters.add(node.toString(false,true));\n+        }\n+    }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[root-XmlParser.Node]",
						"newValue": "[ordering-XmlParser.Node]"
					}
				}
			]
		},
		"688fbac7aa52a61bd864d6e5890507a95e71e287": {
			"type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Yrename,Yparameterchange)",
			"commitMessage": "New Configuration structure. This structure will be modified in jetty-8 to accommodate servlet spec3. This checkin moves jetty-7 closer to that final structure. Configuration now consists of 3 phases: preConfigure(), configure() and postConfigure(). All Configurations can now be chained together rather than having to override/replace existing Configurations.\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@230 7e9141cc-0065-0410-87d8-b60c137991c4\n",
			"commitDate": "2009-05-19, 12:40 AM",
			"commitName": "688fbac7aa52a61bd864d6e5890507a95e71e287",
			"commitAuthor": "Jan Bartel",
			"subchanges": [
				{
					"type": "Ymovefromfile",
					"commitMessage": "New Configuration structure. This structure will be modified in jetty-8 to accommodate servlet spec3. This checkin moves jetty-7 closer to that final structure. Configuration now consists of 3 phases: preConfigure(), configure() and postConfigure(). All Configurations can now be chained together rather than having to override/replace existing Configurations.\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@230 7e9141cc-0065-0410-87d8-b60c137991c4\n",
					"commitDate": "2009-05-19, 12:40 AM",
					"commitName": "688fbac7aa52a61bd864d6e5890507a95e71e287",
					"commitAuthor": "Jan Bartel",
					"commitDateOld": "2009-05-19, 12:40 AM",
					"commitNameOld": "c236945c538fb091d4a6e8f2b2d6995d0e4cca46",
					"commitAuthorOld": "Greg Wilkins",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,26 +1,30 @@\n-            public void processEntry(URL jarUrl, JarEntry entry)\n+        public void process (XmlParser.Node root)\n+        throws Exception\n+        {\n+            if (root == null)\n+                return;\n+            \n+            \n+            Iterator iter = root.iterator();\n+            XmlParser.Node node = null;\n+            while (iter.hasNext())\n             {\n                 try\n                 {\n-                    String name = entry.getName();\n-                    if (name.toLowerCase().equals(\"meta-inf/web.xml\"))\n-                    {\n-                        Resource webXmlFrag = _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n-                        Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n-                        // Process web.xml\n-                        // web-fragment\n-                        // servlet\n-                        // servlet-mapping\n-                        // filter\n-                        // filter-mapping\n-                        // listener\n-                        XmlParser.Node config = null;\n-                        config = _xmlParser.parse(webXmlFrag.toString());\n-                        initialize(config);\n-                    }\n+                    Object o = iter.next();\n+                    if (!(o instanceof XmlParser.Node)) continue;\n+                    node = (XmlParser.Node) o;\n+                    String name = node.getTag();\n+                    initWebXmlElement(name, node);\n+                }\n+                catch (ClassNotFoundException e)\n+                {\n+                    throw e;\n                 }\n                 catch (Exception e)\n                 {\n-                    Log.warn(\"Problem processing jar entry \" + entry, e);\n+                    Log.warn(\"Configuration problem at \" + node, e);\n+                    throw new UnavailableException(\"Configuration problem\");\n                 }\n-            }\n\\ No newline at end of file\n+            } \n+        }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldPath": "jetty-webapp/src/main/java/org/eclipse/jetty/webapp/WebXmlConfiguration.java",
						"newPath": "jetty-plus/src/main/java/org/eclipse/jetty/plus/webapp/AbstractConfiguration.java",
						"oldMethodName": "processEntry",
						"newMethodName": "process"
					}
				},
				{
					"type": "Yexceptionschange",
					"commitMessage": "New Configuration structure. This structure will be modified in jetty-8 to accommodate servlet spec3. This checkin moves jetty-7 closer to that final structure. Configuration now consists of 3 phases: preConfigure(), configure() and postConfigure(). All Configurations can now be chained together rather than having to override/replace existing Configurations.\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@230 7e9141cc-0065-0410-87d8-b60c137991c4\n",
					"commitDate": "2009-05-19, 12:40 AM",
					"commitName": "688fbac7aa52a61bd864d6e5890507a95e71e287",
					"commitAuthor": "Jan Bartel",
					"commitDateOld": "2009-05-19, 12:40 AM",
					"commitNameOld": "c236945c538fb091d4a6e8f2b2d6995d0e4cca46",
					"commitAuthorOld": "Greg Wilkins",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,26 +1,30 @@\n-            public void processEntry(URL jarUrl, JarEntry entry)\n+        public void process (XmlParser.Node root)\n+        throws Exception\n+        {\n+            if (root == null)\n+                return;\n+            \n+            \n+            Iterator iter = root.iterator();\n+            XmlParser.Node node = null;\n+            while (iter.hasNext())\n             {\n                 try\n                 {\n-                    String name = entry.getName();\n-                    if (name.toLowerCase().equals(\"meta-inf/web.xml\"))\n-                    {\n-                        Resource webXmlFrag = _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n-                        Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n-                        // Process web.xml\n-                        // web-fragment\n-                        // servlet\n-                        // servlet-mapping\n-                        // filter\n-                        // filter-mapping\n-                        // listener\n-                        XmlParser.Node config = null;\n-                        config = _xmlParser.parse(webXmlFrag.toString());\n-                        initialize(config);\n-                    }\n+                    Object o = iter.next();\n+                    if (!(o instanceof XmlParser.Node)) continue;\n+                    node = (XmlParser.Node) o;\n+                    String name = node.getTag();\n+                    initWebXmlElement(name, node);\n+                }\n+                catch (ClassNotFoundException e)\n+                {\n+                    throw e;\n                 }\n                 catch (Exception e)\n                 {\n-                    Log.warn(\"Problem processing jar entry \" + entry, e);\n+                    Log.warn(\"Configuration problem at \" + node, e);\n+                    throw new UnavailableException(\"Configuration problem\");\n                 }\n-            }\n\\ No newline at end of file\n+            } \n+        }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[]",
						"newValue": "[Exception]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "New Configuration structure. This structure will be modified in jetty-8 to accommodate servlet spec3. This checkin moves jetty-7 closer to that final structure. Configuration now consists of 3 phases: preConfigure(), configure() and postConfigure(). All Configurations can now be chained together rather than having to override/replace existing Configurations.\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@230 7e9141cc-0065-0410-87d8-b60c137991c4\n",
					"commitDate": "2009-05-19, 12:40 AM",
					"commitName": "688fbac7aa52a61bd864d6e5890507a95e71e287",
					"commitAuthor": "Jan Bartel",
					"commitDateOld": "2009-05-19, 12:40 AM",
					"commitNameOld": "c236945c538fb091d4a6e8f2b2d6995d0e4cca46",
					"commitAuthorOld": "Greg Wilkins",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,26 +1,30 @@\n-            public void processEntry(URL jarUrl, JarEntry entry)\n+        public void process (XmlParser.Node root)\n+        throws Exception\n+        {\n+            if (root == null)\n+                return;\n+            \n+            \n+            Iterator iter = root.iterator();\n+            XmlParser.Node node = null;\n+            while (iter.hasNext())\n             {\n                 try\n                 {\n-                    String name = entry.getName();\n-                    if (name.toLowerCase().equals(\"meta-inf/web.xml\"))\n-                    {\n-                        Resource webXmlFrag = _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n-                        Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n-                        // Process web.xml\n-                        // web-fragment\n-                        // servlet\n-                        // servlet-mapping\n-                        // filter\n-                        // filter-mapping\n-                        // listener\n-                        XmlParser.Node config = null;\n-                        config = _xmlParser.parse(webXmlFrag.toString());\n-                        initialize(config);\n-                    }\n+                    Object o = iter.next();\n+                    if (!(o instanceof XmlParser.Node)) continue;\n+                    node = (XmlParser.Node) o;\n+                    String name = node.getTag();\n+                    initWebXmlElement(name, node);\n+                }\n+                catch (ClassNotFoundException e)\n+                {\n+                    throw e;\n                 }\n                 catch (Exception e)\n                 {\n-                    Log.warn(\"Problem processing jar entry \" + entry, e);\n+                    Log.warn(\"Configuration problem at \" + node, e);\n+                    throw new UnavailableException(\"Configuration problem\");\n                 }\n-            }\n\\ No newline at end of file\n+            } \n+        }\n\\ No newline at end of file\n",
					"extendedDetails": {}
				},
				{
					"type": "Yrename",
					"commitMessage": "New Configuration structure. This structure will be modified in jetty-8 to accommodate servlet spec3. This checkin moves jetty-7 closer to that final structure. Configuration now consists of 3 phases: preConfigure(), configure() and postConfigure(). All Configurations can now be chained together rather than having to override/replace existing Configurations.\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@230 7e9141cc-0065-0410-87d8-b60c137991c4\n",
					"commitDate": "2009-05-19, 12:40 AM",
					"commitName": "688fbac7aa52a61bd864d6e5890507a95e71e287",
					"commitAuthor": "Jan Bartel",
					"commitDateOld": "2009-05-19, 12:40 AM",
					"commitNameOld": "c236945c538fb091d4a6e8f2b2d6995d0e4cca46",
					"commitAuthorOld": "Greg Wilkins",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,26 +1,30 @@\n-            public void processEntry(URL jarUrl, JarEntry entry)\n+        public void process (XmlParser.Node root)\n+        throws Exception\n+        {\n+            if (root == null)\n+                return;\n+            \n+            \n+            Iterator iter = root.iterator();\n+            XmlParser.Node node = null;\n+            while (iter.hasNext())\n             {\n                 try\n                 {\n-                    String name = entry.getName();\n-                    if (name.toLowerCase().equals(\"meta-inf/web.xml\"))\n-                    {\n-                        Resource webXmlFrag = _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n-                        Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n-                        // Process web.xml\n-                        // web-fragment\n-                        // servlet\n-                        // servlet-mapping\n-                        // filter\n-                        // filter-mapping\n-                        // listener\n-                        XmlParser.Node config = null;\n-                        config = _xmlParser.parse(webXmlFrag.toString());\n-                        initialize(config);\n-                    }\n+                    Object o = iter.next();\n+                    if (!(o instanceof XmlParser.Node)) continue;\n+                    node = (XmlParser.Node) o;\n+                    String name = node.getTag();\n+                    initWebXmlElement(name, node);\n+                }\n+                catch (ClassNotFoundException e)\n+                {\n+                    throw e;\n                 }\n                 catch (Exception e)\n                 {\n-                    Log.warn(\"Problem processing jar entry \" + entry, e);\n+                    Log.warn(\"Configuration problem at \" + node, e);\n+                    throw new UnavailableException(\"Configuration problem\");\n                 }\n-            }\n\\ No newline at end of file\n+            } \n+        }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "processEntry",
						"newValue": "process"
					}
				},
				{
					"type": "Yparameterchange",
					"commitMessage": "New Configuration structure. This structure will be modified in jetty-8 to accommodate servlet spec3. This checkin moves jetty-7 closer to that final structure. Configuration now consists of 3 phases: preConfigure(), configure() and postConfigure(). All Configurations can now be chained together rather than having to override/replace existing Configurations.\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@230 7e9141cc-0065-0410-87d8-b60c137991c4\n",
					"commitDate": "2009-05-19, 12:40 AM",
					"commitName": "688fbac7aa52a61bd864d6e5890507a95e71e287",
					"commitAuthor": "Jan Bartel",
					"commitDateOld": "2009-05-19, 12:40 AM",
					"commitNameOld": "c236945c538fb091d4a6e8f2b2d6995d0e4cca46",
					"commitAuthorOld": "Greg Wilkins",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,26 +1,30 @@\n-            public void processEntry(URL jarUrl, JarEntry entry)\n+        public void process (XmlParser.Node root)\n+        throws Exception\n+        {\n+            if (root == null)\n+                return;\n+            \n+            \n+            Iterator iter = root.iterator();\n+            XmlParser.Node node = null;\n+            while (iter.hasNext())\n             {\n                 try\n                 {\n-                    String name = entry.getName();\n-                    if (name.toLowerCase().equals(\"meta-inf/web.xml\"))\n-                    {\n-                        Resource webXmlFrag = _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n-                        Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n-                        // Process web.xml\n-                        // web-fragment\n-                        // servlet\n-                        // servlet-mapping\n-                        // filter\n-                        // filter-mapping\n-                        // listener\n-                        XmlParser.Node config = null;\n-                        config = _xmlParser.parse(webXmlFrag.toString());\n-                        initialize(config);\n-                    }\n+                    Object o = iter.next();\n+                    if (!(o instanceof XmlParser.Node)) continue;\n+                    node = (XmlParser.Node) o;\n+                    String name = node.getTag();\n+                    initWebXmlElement(name, node);\n+                }\n+                catch (ClassNotFoundException e)\n+                {\n+                    throw e;\n                 }\n                 catch (Exception e)\n                 {\n-                    Log.warn(\"Problem processing jar entry \" + entry, e);\n+                    Log.warn(\"Configuration problem at \" + node, e);\n+                    throw new UnavailableException(\"Configuration problem\");\n                 }\n-            }\n\\ No newline at end of file\n+            } \n+        }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[jarUrl-URL, entry-JarEntry]",
						"newValue": "[root-XmlParser.Node]"
					}
				}
			]
		},
		"da627b843fe81fa0fe52a046c1be8595630e9ae7": {
			"type": "Yintroduced",
			"commitMessage": "jetty @ eclipse initial commit\n\ngit-svn-id: svn+ssh://dev.eclipse.org/svnroot/rt/org.eclipse.jetty/jetty/trunk@8 7e9141cc-0065-0410-87d8-b60c137991c4\n",
			"commitDate": "2009-03-24, 2:07 PM",
			"commitName": "da627b843fe81fa0fe52a046c1be8595630e9ae7",
			"commitAuthor": "Greg Wilkins",
			"diff": "@@ -0,0 +1,26 @@\n+            public void processEntry(URL jarUrl, JarEntry entry)\n+            {\n+                try\n+                {\n+                    String name = entry.getName();\n+                    if (name.toLowerCase().equals(\"meta-inf/web.xml\"))\n+                    {\n+                        Resource webXmlFrag = _context.newResource(\"jar:\" + jarUrl + \"!/\" + name);\n+                        Log.debug(\"web.xml fragment found {}\", webXmlFrag);\n+                        // Process web.xml\n+                        // web-fragment\n+                        // servlet\n+                        // servlet-mapping\n+                        // filter\n+                        // filter-mapping\n+                        // listener\n+                        XmlParser.Node config = null;\n+                        config = _xmlParser.parse(webXmlFrag.toString());\n+                        initialize(config);\n+                    }\n+                }\n+                catch (Exception e)\n+                {\n+                    Log.warn(\"Problem processing jar entry \" + entry, e);\n+                }\n+            }\n\\ No newline at end of file\n"
		}
	},
	"sha": "fc5dd874f3deda71e6cd42af994a5af5cb6be4af"
}