{
	"repo": "https://github.com/junit-team/junit4.git",
	"file": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java",
	"method": {
		"longName": "protected Description describeChild(FrameworkMethod method);",
		"startLine": 117,
		"methodName": "describeChild",
		"isStatic": false,
		"isAbstract": false,
		"visibility": "protected"
	},
	"history": {
		"df00d5eced3a7737b88de0f6f9e3673f0cf88f88": {
			"type": "Ybodychange",
			"commitMessage": "remove 'f' prefix from field names, add LEGACY_CODING_STYLE, change CODING_STYLE\n",
			"commitDate": "2014-06-17, 11:42 PM",
			"commitName": "df00d5eced3a7737b88de0f6f9e3673f0cf88f88",
			"commitAuthor": "Alex Yursha",
			"commitDateOld": "2014-05-06, 1:04 PM",
			"commitNameOld": "968abcfdd4578a68cb628919acb9a6d88ba44c80",
			"commitAuthorOld": "Stefan Birkner",
			"daysBetweenCommits": 42.44,
			"commitsBetweenForRepo": 11,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,11 +1,11 @@\n     protected Description describeChild(FrameworkMethod method) {\n-        Description description = fMethodDescriptions.get(method);\n+        Description description = methodDescriptions.get(method);\n \n         if (description == null) {\n             description = Description.createTestDescription(getTestClass().getJavaClass(),\n                     testName(method), method.getAnnotations());\n-            fMethodDescriptions.putIfAbsent(method, description);\n+            methodDescriptions.putIfAbsent(method, description);\n         }\n \n         return description;\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"2918286bf4a010c9ac8eadffb958ff10fb41ad62": {
			"type": "Ybodychange",
			"commitMessage": "Issue #162 Adjustments\n\n- Modified fMethodDescriptions to be final\n- Changed from put to putIfAbsent\n",
			"commitDate": "2013-02-18, 4:14 PM",
			"commitName": "2918286bf4a010c9ac8eadffb958ff10fb41ad62",
			"commitAuthor": "Corey Vaillancourt",
			"commitDateOld": "2013-02-17, 10:21 AM",
			"commitNameOld": "08719e9b61d07c17b6a4f599ecd2cd1a1519120a",
			"commitAuthorOld": "Corey Vaillancourt",
			"daysBetweenCommits": 1.25,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,11 +1,11 @@\n     protected Description describeChild(FrameworkMethod method) {\n         Description description = fMethodDescriptions.get(method);\n \n         if (description == null) {\n             description = Description.createTestDescription(getTestClass().getJavaClass(),\n                     testName(method), method.getAnnotations());\n-            fMethodDescriptions.put(method, description);\n+            fMethodDescriptions.putIfAbsent(method, description);\n         }\n \n         return description;\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"08719e9b61d07c17b6a4f599ecd2cd1a1519120a": {
			"type": "Ybodychange",
			"commitMessage": "Issue #162 Implementation\n\nAdded ConcurrentHashMap to improve performance.\n",
			"commitDate": "2013-02-17, 10:21 AM",
			"commitName": "08719e9b61d07c17b6a4f599ecd2cd1a1519120a",
			"commitAuthor": "Corey Vaillancourt",
			"commitDateOld": "2012-11-15, 4:33 PM",
			"commitNameOld": "fab285224794435cbb4539ba234d771855b8012d",
			"commitAuthorOld": "Corey Vaillancourt",
			"daysBetweenCommits": 93.74,
			"commitsBetweenForRepo": 125,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,11 @@\n     protected Description describeChild(FrameworkMethod method) {\n-        return Description.createTestDescription(getTestClass().getJavaClass(),\n-                testName(method), method.getAnnotations());\n+        Description description = fMethodDescriptions.get(method);\n+\n+        if (description == null) {\n+            description = Description.createTestDescription(getTestClass().getJavaClass(),\n+                    testName(method), method.getAnnotations());\n+            fMethodDescriptions.put(method, description);\n+        }\n+\n+        return description;\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"1d86784cd452e8d9e30d812255cadb75ef8dae15": {
			"type": "Ybodychange",
			"commitMessage": "Fix compilation errors\n",
			"commitDate": "2010-04-05, 11:27 AM",
			"commitName": "1d86784cd452e8d9e30d812255cadb75ef8dae15",
			"commitAuthor": "dsaff",
			"commitDateOld": "2010-04-05, 11:13 AM",
			"commitNameOld": "97402a3401c6cc2d45d395c0d9d636f483b5571c",
			"commitAuthorOld": "dsaff",
			"daysBetweenCommits": 0.01,
			"commitsBetweenForRepo": 3,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,7 +1,4 @@\n \tprotected Description describeChild(FrameworkMethod method) {\n-\t\tDescription description= Description.createTestDescription(\n-\t\t\t\tgetTestClass().getJavaClass(), testName(method), method\n-\t\t\t\t\t\t.getAnnotations());\n-\t\tdescription.setParent(getDescription());\n-\t\treturn description;\n+\t\treturn Description.createTestDescription(getTestClass().getJavaClass(),\n+\t\t\t\ttestName(method), method.getAnnotations());\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"12b9b787a161d4b460d4d6a14da6ac53cac3713b": {
			"type": "Ybodychange",
			"commitMessage": "Category filter can look all the way up the Description stack\n",
			"commitDate": "2010-01-25, 8:46 PM",
			"commitName": "12b9b787a161d4b460d4d6a14da6ac53cac3713b",
			"commitAuthor": "David Saff",
			"commitDateOld": "2010-01-21, 1:30 PM",
			"commitNameOld": "86abf33f863fee1db3ba7dd8ee3e9910f105f57d",
			"commitAuthorOld": "David Saff",
			"daysBetweenCommits": 4.3,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,7 @@\n \tprotected Description describeChild(FrameworkMethod method) {\n-\t\treturn Description.createTestDescription(getTestClass().getJavaClass(),\n-\t\t\t\ttestName(method), method.getAnnotations());\n+\t\tDescription description= Description.createTestDescription(\n+\t\t\t\tgetTestClass().getJavaClass(), testName(method), method\n+\t\t\t\t\t\t.getAnnotations());\n+\t\tdescription.setParent(getDescription());\n+\t\treturn description;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"30a039854fd7f8cda135222054b247c158b91fa7": {
			"type": "Ybodychange",
			"commitMessage": "All javadoc added\n",
			"commitDate": "2008-07-30, 1:28 PM",
			"commitName": "30a039854fd7f8cda135222054b247c158b91fa7",
			"commitAuthor": "dsaff",
			"commitDateOld": "2008-07-30, 12:23 PM",
			"commitNameOld": "5d957024be0d1b181879d48b7915b3b8aad8f5d5",
			"commitAuthorOld": "dsaff",
			"daysBetweenCommits": 0.05,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n \tprotected Description describeChild(FrameworkMethod method) {\n \t\treturn Description.createTestDescription(getTestClass().getJavaClass(),\n-\t\t\t\ttestName(method), method.getMethod().getAnnotations());\n+\t\t\t\ttestName(method), method.getAnnotations());\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"96d7dd609920deb1336cf85dc6c9a3a0d5e30d15": {
			"type": "Yfilerename",
			"commitMessage": "Reorganizing visibility to publish BlockJUnit4ClassRunner and friends. Not sure if this is done. Check with Structure 101?\n",
			"commitDate": "2008-07-01, 11:29 AM",
			"commitName": "96d7dd609920deb1336cf85dc6c9a3a0d5e30d15",
			"commitAuthor": "kbeck",
			"commitDateOld": "2008-07-01, 10:01 AM",
			"commitNameOld": "eb2750d861ac1ecf2dbd0425e457fe833468a169",
			"commitAuthorOld": "kbeck",
			"daysBetweenCommits": 0.06,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java",
				"newPath": "src/main/java/org/junit/runners/BlockJUnit4ClassRunner.java"
			}
		},
		"078e45bd31a9920e00633ad6ce658e22529304f2": {
			"type": "Ymovefromfile",
			"commitMessage": "Brought in old JUnit4ClassRunner for compatibility. Renamed new JUnit4ClassRunner to BlockJUnit4ClassRunner.\n",
			"commitDate": "2008-06-16, 10:52 AM",
			"commitName": "078e45bd31a9920e00633ad6ce658e22529304f2",
			"commitAuthor": "kbeck",
			"commitDateOld": "2008-06-10, 12:50 PM",
			"commitNameOld": "f49fb25b6fbffcc7a68b28824ed3856ffa9d6fdd",
			"commitAuthorOld": "dsaff",
			"daysBetweenCommits": 5.92,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java",
				"newPath": "src/main/java/org/junit/internal/runners/BlockJUnit4ClassRunner.java",
				"oldMethodName": "describeChild",
				"newMethodName": "describeChild"
			}
		},
		"3a791ec79fff66aebc332fe4e4cbf626e39bd3d3": {
			"type": "Ybodychange",
			"commitMessage": "- Organize ParentRunner better\n",
			"commitDate": "2007-12-07, 8:54 AM",
			"commitName": "3a791ec79fff66aebc332fe4e4cbf626e39bd3d3",
			"commitAuthor": "dsaff",
			"commitDateOld": "2007-12-07, 8:34 AM",
			"commitNameOld": "9a5dfd996ab7007994fcf60752441835dbdbb5d0",
			"commitAuthorOld": "dsaff",
			"daysBetweenCommits": 0.01,
			"commitsBetweenForRepo": 5,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n \tprotected Description describeChild(FrameworkMethod method) {\n-\t\treturn Description.createTestDescription(fTestClass.getJavaClass(),\n+\t\treturn Description.createTestDescription(getTestClass().getJavaClass(),\n \t\t\t\ttestName(method), method.getMethod().getAnnotations());\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9": {
			"type": "Yfilerename",
			"commitMessage": "- Moved src directory into two directories, similar to a maven layout, to simplify build, and make it easier for maven-familiar developers to find the tests.\n\n- Improved display of ignored tests, so that build results are hopefully not confusing\n",
			"commitDate": "2007-12-07, 7:43 AM",
			"commitName": "8226e3e64a7d4ace29eb08ab6c9fc9d4055f20c9",
			"commitAuthor": "dsaff",
			"commitDateOld": "2007-12-05, 7:47 AM",
			"commitNameOld": "804f76fdf00c9f9fcbef58f03bbeda1f80b3ad8e",
			"commitAuthorOld": "dsaff",
			"daysBetweenCommits": 2,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "src/org/junit/internal/runners/JUnit4ClassRunner.java",
				"newPath": "src/main/java/org/junit/internal/runners/JUnit4ClassRunner.java"
			}
		},
		"8bed6c9278517d9fb13f274bc5a6ade358a39745": {
			"type": "Yparameterchange",
			"commitMessage": "- Moved InitializationError to ParentRunner, since it was only used by\n  subclasses of ParentRunner.\n- Broke up TestMethod into FrameworkMethod (which makes it more clear\n  that these methods can also be Before, After, etc.), and\n  TestAnnotation (for specific information only available on the @Test\n  annotation).\n- Created TestMethodElement to encapsulate the relationship between\n  @Test, @Before, and @After.  This class may go away again quickly\n- Updated version in docs to 4.5\n- Included docs about junit-dep jar\n",
			"commitDate": "2007-11-14, 10:21 AM",
			"commitName": "8bed6c9278517d9fb13f274bc5a6ade358a39745",
			"commitAuthor": "dsaff",
			"commitDateOld": "2007-10-31, 6:57 AM",
			"commitNameOld": "24a5aad1f49b4decf946f1df701e354a18544132",
			"commitAuthorOld": "dsaff",
			"daysBetweenCommits": 14.18,
			"commitsBetweenForRepo": 4,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n-\tprotected Description describeChild(TestMethod method) {\n+\tprotected Description describeChild(FrameworkMethod method) {\n \t\treturn Description.createTestDescription(fTestClass.getJavaClass(),\n \t\t\t\ttestName(method), method.getMethod().getAnnotations());\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {
				"oldValue": "[method-TestMethod]",
				"newValue": "[method-FrameworkMethod]"
			}
		},
		"24a5aad1f49b4decf946f1df701e354a18544132": {
			"type": "Yrename",
			"commitMessage": "Progress on ParentRunner\n",
			"commitDate": "2007-10-31, 6:57 AM",
			"commitName": "24a5aad1f49b4decf946f1df701e354a18544132",
			"commitAuthor": "dsaff",
			"commitDateOld": "2007-10-12, 12:12 PM",
			"commitNameOld": "4e1018a940699a38673b1861977110e6b558afb1",
			"commitAuthorOld": "kbeck",
			"daysBetweenCommits": 18.78,
			"commitsBetweenForRepo": 4,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n-\tprotected Description methodDescription(TestMethod method) {\n+\tprotected Description describeChild(TestMethod method) {\n \t\treturn Description.createTestDescription(fTestClass.getJavaClass(),\n \t\t\t\ttestName(method), method.getMethod().getAnnotations());\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {
				"oldValue": "methodDescription",
				"newValue": "describeChild"
			}
		},
		"44e7458b19d5cd1900a765a440c96e85b81d25fc": {
			"type": "Ybodychange",
			"commitMessage": "- Renamed link classes.\n  Absolute actions are verbs: IgnoreTest, Invoke.\n  ActionModifiers are modifying phrases: ExpectingException, WithTimeout, etc.\n\n- Moved isShadowedBy(List) to TestMethod\n",
			"commitDate": "2007-10-08, 2:07 PM",
			"commitName": "44e7458b19d5cd1900a765a440c96e85b81d25fc",
			"commitAuthor": "dsaff",
			"commitDateOld": "2007-10-08, 12:40 PM",
			"commitNameOld": "576377b9ad44028dc84c2f8487cfe8dbccb8c252",
			"commitAuthorOld": "dsaff",
			"daysBetweenCommits": 0.06,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n \tprotected Description methodDescription(TestMethod method) {\n-\t\treturn Description.createTestDescription(getTestClass().getJavaClass(),\n+\t\treturn Description.createTestDescription(fTestClass.getJavaClass(),\n \t\t\t\ttestName(method), method.getMethod().getAnnotations());\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"576377b9ad44028dc84c2f8487cfe8dbccb8c252": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "- Split links into their own package\n- Combined JUnit4ClassRunner and JUnit4MethodRunner, allowing extensions to be written with a single class\n- Created a separate model class for TestMethod, TestClass, and other runnable Java elements (TODO: still messy separation of concerns there)\n- Absorbed ExplosiveMethod into TestMethod.invokeExplosively\n- Absorbed MethodValidator into TestClass and TestMethod.\n- Removed deprecated OldTestClassRunner and TestClassRunner\n- Changed testAndTeardownFailure so that the order of failures is undefined\n- Added test for Before defined on subclass run on Test defined on superclass.\n\nThis is not yet the finished refactoring.  More to come, but needed a checkpoint\n",
			"commitDate": "2007-10-08, 12:40 PM",
			"commitName": "576377b9ad44028dc84c2f8487cfe8dbccb8c252",
			"commitAuthor": "dsaff",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "- Split links into their own package\n- Combined JUnit4ClassRunner and JUnit4MethodRunner, allowing extensions to be written with a single class\n- Created a separate model class for TestMethod, TestClass, and other runnable Java elements (TODO: still messy separation of concerns there)\n- Absorbed ExplosiveMethod into TestMethod.invokeExplosively\n- Absorbed MethodValidator into TestClass and TestMethod.\n- Removed deprecated OldTestClassRunner and TestClassRunner\n- Changed testAndTeardownFailure so that the order of failures is undefined\n- Added test for Before defined on subclass run on Test defined on superclass.\n\nThis is not yet the finished refactoring.  More to come, but needed a checkpoint\n",
					"commitDate": "2007-10-08, 12:40 PM",
					"commitName": "576377b9ad44028dc84c2f8487cfe8dbccb8c252",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-05, 1:47 PM",
					"commitNameOld": "57302f0df76fba83ba72a676bd660efeb5881af6",
					"commitAuthorOld": "kbeck",
					"daysBetweenCommits": 2.95,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,3 +1,4 @@\n-\tprotected Description methodDescription(Method method) {\n-\t\treturn Description.createTestDescription(getTestClass().getJavaClass(), testName(method), testAnnotations(method));\n+\tprotected Description methodDescription(TestMethod method) {\n+\t\treturn Description.createTestDescription(getTestClass().getJavaClass(),\n+\t\t\t\ttestName(method), method.getMethod().getAnnotations());\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[method-Method]",
						"newValue": "[method-TestMethod]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "- Split links into their own package\n- Combined JUnit4ClassRunner and JUnit4MethodRunner, allowing extensions to be written with a single class\n- Created a separate model class for TestMethod, TestClass, and other runnable Java elements (TODO: still messy separation of concerns there)\n- Absorbed ExplosiveMethod into TestMethod.invokeExplosively\n- Absorbed MethodValidator into TestClass and TestMethod.\n- Removed deprecated OldTestClassRunner and TestClassRunner\n- Changed testAndTeardownFailure so that the order of failures is undefined\n- Added test for Before defined on subclass run on Test defined on superclass.\n\nThis is not yet the finished refactoring.  More to come, but needed a checkpoint\n",
					"commitDate": "2007-10-08, 12:40 PM",
					"commitName": "576377b9ad44028dc84c2f8487cfe8dbccb8c252",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-10-05, 1:47 PM",
					"commitNameOld": "57302f0df76fba83ba72a676bd660efeb5881af6",
					"commitAuthorOld": "kbeck",
					"daysBetweenCommits": 2.95,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,3 +1,4 @@\n-\tprotected Description methodDescription(Method method) {\n-\t\treturn Description.createTestDescription(getTestClass().getJavaClass(), testName(method), testAnnotations(method));\n+\tprotected Description methodDescription(TestMethod method) {\n+\t\treturn Description.createTestDescription(getTestClass().getJavaClass(),\n+\t\t\t\ttestName(method), method.getMethod().getAnnotations());\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"6acc164b4125da775cccd4035c1b99e9d404bacd": {
			"type": "Ybodychange",
			"commitMessage": "- The hamcrest-core-1.1 library is now included in the JUnit distribution.  For more hamcrest matchers, see the hamcrest-library jar from http://code.google.com/p/hamcrest\n- The Popper Theory runner (http://popper.tigris.org) has been absorbed into the JUnit project, under the package name org.junit.experimental.theories\n- Several additional libraries used in the theories tests have been added in a new testlib directory\n\n- New \"assertThat\" statement to work with hamcrest matchers:\n\n// same as assertEquals(3, x)\nassertThat(x, is(3));\n\n// same as assertNull(y)\nassertThat(y, nullValue());\n\n- New feature: assumeThat.  A failed assumption will cause the test to pass, without further execution.  (The behavior of assumeThat may change in the future to allow richer reporting of tests that are skipped because of failed assumptions)\n\n// pass on any non-Windows system\n@Test public void getRootDrive() {\n  assumeThat(getOsString(), is(\"Windows\"));\n  getFile(\"C:\\\");\n  // ...\n}\n\n- Convenience assumption functions:\n\n// none of these are null\nassumeNotNull(a, b, c);\nassumeTrue(everythingOk());\n\ntry {\n  getDatabaseConnection();\n} catch (Exception e) {\n  assumeNoException(e);\n}\n\n- Documentation fixed for many assertEquals array methods\n\n- Two bugs in numeric equality fixed:\n\n1718905: assertEquals does not compare float correctly\n1715326: assertEquals does not compare java.math.BigDecimal properly\n\n- The protocol for overriding JUnit4ClassRunner has changed again.  Please see the source for details.\n\n- Extenders can now extend TestMethod to describe the behavior of running methods that do not have a @Test annotation.\n\n- Adding Annotations to Description caused a binary compatibility problem with clients compiled on previous JUnit versions.  This has been fixed.\n",
			"commitDate": "2007-07-02, 11:10 AM",
			"commitName": "6acc164b4125da775cccd4035c1b99e9d404bacd",
			"commitAuthor": "dsaff",
			"commitDateOld": "2007-04-26, 12:56 PM",
			"commitNameOld": "dabf9f919413ef7f86c95140502792bcaa2b842a",
			"commitAuthorOld": "dsaff",
			"daysBetweenCommits": 66.93,
			"commitsBetweenForRepo": 5,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,3 @@\n \tprotected Description methodDescription(Method method) {\n-\t\tDescription result= Description.createTestDescription(getTestClass().getJavaClass(), testName(method), testAnnotations(method));\n-\t\treturn result;\n+\t\treturn Description.createTestDescription(getTestClass().getJavaClass(), testName(method), testAnnotations(method));\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"dabf9f919413ef7f86c95140502792bcaa2b842a": {
			"type": "Ybodychange",
			"commitMessage": "[Junit-trackers] [ junit-Bugs-1684562 ] assertEquals throws NPE while comparing null elements\nDescriptions now have Annotations\n",
			"commitDate": "2007-04-26, 12:56 PM",
			"commitName": "dabf9f919413ef7f86c95140502792bcaa2b842a",
			"commitAuthor": "dsaff",
			"commitDateOld": "2007-03-20, 7:43 AM",
			"commitNameOld": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f",
			"commitAuthorOld": "dsaff",
			"daysBetweenCommits": 37.22,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,3 +1,4 @@\n \tprotected Description methodDescription(Method method) {\n-\t\treturn Description.createTestDescription(getTestClass().getJavaClass(), testName(method));\n+\t\tDescription result= Description.createTestDescription(getTestClass().getJavaClass(), testName(method), testAnnotations(method));\n+\t\treturn result;\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f": {
			"type": "Ymultichange(Yfilerename,Ybodychange)",
			"commitMessage": "Runner rearchitecting to begin 4.4 development\n",
			"commitDate": "2007-03-20, 7:43 AM",
			"commitName": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f",
			"commitAuthor": "dsaff",
			"subchanges": [
				{
					"type": "Yfilerename",
					"commitMessage": "Runner rearchitecting to begin 4.4 development\n",
					"commitDate": "2007-03-20, 7:43 AM",
					"commitName": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-03-20, 7:12 AM",
					"commitNameOld": "db89759c22060a89f6750e2e92ce93072eace561",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 0.02,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,3 +1,3 @@\n \tprotected Description methodDescription(Method method) {\n-\t\treturn Description.createTestDescription(getTestClass(), testName(method));\n+\t\treturn Description.createTestDescription(getTestClass().getJavaClass(), testName(method));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldPath": "src/org/junit/internal/runners/TestClassMethodsRunner.java",
						"newPath": "src/org/junit/internal/runners/JUnit4ClassRunner.java"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "Runner rearchitecting to begin 4.4 development\n",
					"commitDate": "2007-03-20, 7:43 AM",
					"commitName": "521fdb5aae536bd5055f6d0e4f09c5a7bdb5799f",
					"commitAuthor": "dsaff",
					"commitDateOld": "2007-03-20, 7:12 AM",
					"commitNameOld": "db89759c22060a89f6750e2e92ce93072eace561",
					"commitAuthorOld": "dsaff",
					"daysBetweenCommits": 0.02,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,3 +1,3 @@\n \tprotected Description methodDescription(Method method) {\n-\t\treturn Description.createTestDescription(getTestClass(), testName(method));\n+\t\treturn Description.createTestDescription(getTestClass().getJavaClass(), testName(method));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"40cc52cf5f5dc1dd1ee513410536bdc11422307d": {
			"type": "Yfilerename",
			"commitMessage": "Created a separate src folder for sources, and adjusted Eclipse classpath and build file accordingly\n",
			"commitDate": "2006-11-21, 10:53 AM",
			"commitName": "40cc52cf5f5dc1dd1ee513410536bdc11422307d",
			"commitAuthor": "dsaff",
			"commitDateOld": "2006-11-20, 6:03 AM",
			"commitNameOld": "64f4559a7b6099ff4f71281aab4029473ca9f469",
			"commitAuthorOld": "cmschmidt",
			"daysBetweenCommits": 1.2,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "org/junit/internal/runners/TestClassMethodsRunner.java",
				"newPath": "src/org/junit/internal/runners/TestClassMethodsRunner.java"
			}
		},
		"478f7f9217cf5da219a7ba298e3a87f405378194": {
			"type": "Yintroduced",
			"commitMessage": "Merged with branch, Kent will make final changes and launch.\n",
			"commitDate": "2006-02-15, 2:55 PM",
			"commitName": "478f7f9217cf5da219a7ba298e3a87f405378194",
			"commitAuthor": "dsaff",
			"diff": "@@ -0,0 +1,3 @@\n+\tprotected Description methodDescription(Method method) {\n+\t\treturn Description.createTestDescription(getTestClass(), testName(method));\n+\t}\n\\ No newline at end of file\n"
		}
	},
	"sha": "02c328028b4d32c15bbf0becc9838e54ecbafcbf"
}