{
	"repo": "https://github.com/apache/flink.git",
	"file": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java",
	"method": {
		"longName": "public SingleOutputStreamOperator<T> filter(FilterFunction<T> filter);",
		"startLine": 685,
		"methodName": "filter",
		"isStatic": false,
		"isAbstract": false,
		"visibility": "public"
	},
	"history": {
		"a922473c0835a757e7108c79ad52f103ace86030": {
			"type": "Yreturntypechange",
			"commitMessage": "[FLINK-3548] [api-breaking] Remove unnecessary generic parameter from SingleOutputStreamOperator\n",
			"commitDate": "2016-02-29, 12:37 PM",
			"commitName": "a922473c0835a757e7108c79ad52f103ace86030",
			"commitAuthor": "Aljoscha Krettek",
			"commitDateOld": "2016-02-29, 11:29 AM",
			"commitNameOld": "9922d10a0f3e291bb7e6f75ccb70baecb5c2bcd9",
			"commitAuthorOld": "Aljoscha Krettek",
			"daysBetweenCommits": 0.05,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n-\tpublic SingleOutputStreamOperator<T, ?> filter(FilterFunction<T> filter) {\n+\tpublic SingleOutputStreamOperator<T> filter(FilterFunction<T> filter) {\n \t\treturn transform(\"Filter\", getType(), new StreamFilter<>(clean(filter)));\n \n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {
				"oldValue": "SingleOutputStreamOperator<T,?>",
				"newValue": "SingleOutputStreamOperator<T>"
			}
		},
		"2714aaf3d47705401f422a09619f09d2a90bf185": {
			"type": "Ybodychange",
			"commitMessage": "[FLINK-3296] Remove 'flushing' behavior of the OutputFormat support of the DataStream API\n\nThis closes #1563\n",
			"commitDate": "2016-02-16, 6:52 AM",
			"commitName": "2714aaf3d47705401f422a09619f09d2a90bf185",
			"commitAuthor": "Robert Metzger",
			"commitDateOld": "2016-02-10, 2:51 AM",
			"commitNameOld": "572855daad452eab169bc2ca27f9f1e4476df656",
			"commitAuthorOld": "Fabian Hueske",
			"daysBetweenCommits": 6.17,
			"commitsBetweenForRepo": 46,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n \tpublic SingleOutputStreamOperator<T, ?> filter(FilterFunction<T> filter) {\n-\t\treturn transform(\"Filter\", getType(), new StreamFilter<T>(clean(filter)));\n+\t\treturn transform(\"Filter\", getType(), new StreamFilter<>(clean(filter)));\n \n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"06f6ac5d3edbc8dd20baf6e1b30900c189a68876": {
			"type": "Yfilerename",
			"commitMessage": "[FLINK-2877] Move Streaming API out of Staging package\n",
			"commitDate": "2015-10-21, 2:01 AM",
			"commitName": "06f6ac5d3edbc8dd20baf6e1b30900c189a68876",
			"commitAuthor": "Rufus Refactor",
			"commitDateOld": "2015-10-21, 1:35 AM",
			"commitNameOld": "42a3d8cfa9eacc19ac04004b256b6eb51422b523",
			"commitAuthorOld": "Maximilian Michels",
			"daysBetweenCommits": 0.02,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java",
				"newPath": "flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java"
			}
		},
		"bac21bf5d77c8e15c608ecbf006d29e7af1dd68a": {
			"type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
			"commitMessage": "[FLINK-2398][api-breaking] Introduce StreamGraphGenerator\n\nThis decouples the building of the StreamGraph from the API methods.\nBefore the methods would build the StreamGraph as they go. Now the API\nmethods build a hierachy of StreamTransformation nodes. From these a\nStreamGraph is generated upon execution.\n\nThis also introduces some API breaking changes:\n\n - The result of methods that create sinks is now DataStreamSink instead\n   of DataStream\n - Iterations cannot have feedback edges with differing parallelism\n - \"Preserve partitioning\" is not the default for feedback edges. The\n   previous option for this is removed.\n - You can close an iteration several times, no need for a union.\n - Strict checking of whether partitioning and parallelism work\n   together. I.e. if upstream and downstream parallelism don't match it\n   is not legal to have Forward partitioning anymore. This was not very\n   transparent: When you went from low parallelism to high dop some\n   downstream  operators would never get any input. When you went from high\n   parallelism to low dop you would get skew in the downstream operators\n   because all elements that would be forwarded to an operator that is not\n   \"there\" go to another operator. This requires insertion of global()\n   or rebalance() in some places. For example with most sources which\n   have parallelism one.\n\nThis also makes StreamExecutionEnvironment.execute() behave consistently\nacross different execution environments (local, remote ...): The list of\noperators to be executed are cleared after execute is called.\n",
			"commitDate": "2015-08-19, 8:53 AM",
			"commitName": "bac21bf5d77c8e15c608ecbf006d29e7af1dd68a",
			"commitAuthor": "Aljoscha Krettek",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "[FLINK-2398][api-breaking] Introduce StreamGraphGenerator\n\nThis decouples the building of the StreamGraph from the API methods.\nBefore the methods would build the StreamGraph as they go. Now the API\nmethods build a hierachy of StreamTransformation nodes. From these a\nStreamGraph is generated upon execution.\n\nThis also introduces some API breaking changes:\n\n - The result of methods that create sinks is now DataStreamSink instead\n   of DataStream\n - Iterations cannot have feedback edges with differing parallelism\n - \"Preserve partitioning\" is not the default for feedback edges. The\n   previous option for this is removed.\n - You can close an iteration several times, no need for a union.\n - Strict checking of whether partitioning and parallelism work\n   together. I.e. if upstream and downstream parallelism don't match it\n   is not legal to have Forward partitioning anymore. This was not very\n   transparent: When you went from low parallelism to high dop some\n   downstream  operators would never get any input. When you went from high\n   parallelism to low dop you would get skew in the downstream operators\n   because all elements that would be forwarded to an operator that is not\n   \"there\" go to another operator. This requires insertion of global()\n   or rebalance() in some places. For example with most sources which\n   have parallelism one.\n\nThis also makes StreamExecutionEnvironment.execute() behave consistently\nacross different execution environments (local, remote ...): The list of\noperators to be executed are cleared after execute is called.\n",
					"commitDate": "2015-08-19, 8:53 AM",
					"commitName": "bac21bf5d77c8e15c608ecbf006d29e7af1dd68a",
					"commitAuthor": "Aljoscha Krettek",
					"commitDateOld": "2015-08-11, 3:08 AM",
					"commitNameOld": "b42fbf7a81c5b57dcf9760825edb175ffd944fb2",
					"commitAuthorOld": "HuangWHWHW",
					"daysBetweenCommits": 8.24,
					"commitsBetweenForRepo": 41,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n-\t\treturn transform(\"Filter\", getType(), new StreamFilter<OUT>(clean(filter)));\n+\tpublic SingleOutputStreamOperator<T, ?> filter(FilterFunction<T> filter) {\n+\t\treturn transform(\"Filter\", getType(), new StreamFilter<T>(clean(filter)));\n \n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-FilterFunction<OUT>]",
						"newValue": "[filter-FilterFunction<T>]"
					}
				},
				{
					"type": "Yreturntypechange",
					"commitMessage": "[FLINK-2398][api-breaking] Introduce StreamGraphGenerator\n\nThis decouples the building of the StreamGraph from the API methods.\nBefore the methods would build the StreamGraph as they go. Now the API\nmethods build a hierachy of StreamTransformation nodes. From these a\nStreamGraph is generated upon execution.\n\nThis also introduces some API breaking changes:\n\n - The result of methods that create sinks is now DataStreamSink instead\n   of DataStream\n - Iterations cannot have feedback edges with differing parallelism\n - \"Preserve partitioning\" is not the default for feedback edges. The\n   previous option for this is removed.\n - You can close an iteration several times, no need for a union.\n - Strict checking of whether partitioning and parallelism work\n   together. I.e. if upstream and downstream parallelism don't match it\n   is not legal to have Forward partitioning anymore. This was not very\n   transparent: When you went from low parallelism to high dop some\n   downstream  operators would never get any input. When you went from high\n   parallelism to low dop you would get skew in the downstream operators\n   because all elements that would be forwarded to an operator that is not\n   \"there\" go to another operator. This requires insertion of global()\n   or rebalance() in some places. For example with most sources which\n   have parallelism one.\n\nThis also makes StreamExecutionEnvironment.execute() behave consistently\nacross different execution environments (local, remote ...): The list of\noperators to be executed are cleared after execute is called.\n",
					"commitDate": "2015-08-19, 8:53 AM",
					"commitName": "bac21bf5d77c8e15c608ecbf006d29e7af1dd68a",
					"commitAuthor": "Aljoscha Krettek",
					"commitDateOld": "2015-08-11, 3:08 AM",
					"commitNameOld": "b42fbf7a81c5b57dcf9760825edb175ffd944fb2",
					"commitAuthorOld": "HuangWHWHW",
					"daysBetweenCommits": 8.24,
					"commitsBetweenForRepo": 41,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n-\t\treturn transform(\"Filter\", getType(), new StreamFilter<OUT>(clean(filter)));\n+\tpublic SingleOutputStreamOperator<T, ?> filter(FilterFunction<T> filter) {\n+\t\treturn transform(\"Filter\", getType(), new StreamFilter<T>(clean(filter)));\n \n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "SingleOutputStreamOperator<OUT,?>",
						"newValue": "SingleOutputStreamOperator<T,?>"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[FLINK-2398][api-breaking] Introduce StreamGraphGenerator\n\nThis decouples the building of the StreamGraph from the API methods.\nBefore the methods would build the StreamGraph as they go. Now the API\nmethods build a hierachy of StreamTransformation nodes. From these a\nStreamGraph is generated upon execution.\n\nThis also introduces some API breaking changes:\n\n - The result of methods that create sinks is now DataStreamSink instead\n   of DataStream\n - Iterations cannot have feedback edges with differing parallelism\n - \"Preserve partitioning\" is not the default for feedback edges. The\n   previous option for this is removed.\n - You can close an iteration several times, no need for a union.\n - Strict checking of whether partitioning and parallelism work\n   together. I.e. if upstream and downstream parallelism don't match it\n   is not legal to have Forward partitioning anymore. This was not very\n   transparent: When you went from low parallelism to high dop some\n   downstream  operators would never get any input. When you went from high\n   parallelism to low dop you would get skew in the downstream operators\n   because all elements that would be forwarded to an operator that is not\n   \"there\" go to another operator. This requires insertion of global()\n   or rebalance() in some places. For example with most sources which\n   have parallelism one.\n\nThis also makes StreamExecutionEnvironment.execute() behave consistently\nacross different execution environments (local, remote ...): The list of\noperators to be executed are cleared after execute is called.\n",
					"commitDate": "2015-08-19, 8:53 AM",
					"commitName": "bac21bf5d77c8e15c608ecbf006d29e7af1dd68a",
					"commitAuthor": "Aljoscha Krettek",
					"commitDateOld": "2015-08-11, 3:08 AM",
					"commitNameOld": "b42fbf7a81c5b57dcf9760825edb175ffd944fb2",
					"commitAuthorOld": "HuangWHWHW",
					"daysBetweenCommits": 8.24,
					"commitsBetweenForRepo": 41,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n-\t\treturn transform(\"Filter\", getType(), new StreamFilter<OUT>(clean(filter)));\n+\tpublic SingleOutputStreamOperator<T, ?> filter(FilterFunction<T> filter) {\n+\t\treturn transform(\"Filter\", getType(), new StreamFilter<T>(clean(filter)));\n \n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"4754a97b19c96647886a46131750db26a0b5f618": {
			"type": "Ybodychange",
			"commitMessage": "[streaming] Major internal renaming and restructure\n\nCloses #594\n",
			"commitDate": "2015-04-15, 2:35 AM",
			"commitName": "4754a97b19c96647886a46131750db26a0b5f618",
			"commitAuthor": "Gyula Fora",
			"commitDateOld": "2015-04-14, 10:41 PM",
			"commitNameOld": "f1b445b0eb481d2f66d1a8598dd10af16c101f18",
			"commitAuthorOld": "Gyula Fora",
			"daysBetweenCommits": 0.16,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n \tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n-\t\treturn transform(\"Filter\", getType(), new FilterInvokable<OUT>(clean(filter)));\n+\t\treturn transform(\"Filter\", getType(), new StreamFilter<OUT>(clean(filter)));\n \n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"f94112fbbaaf2ecc6a9ecb314a5565203ce779a7": {
			"type": "Yfilerename",
			"commitMessage": "[FLINK-1452] Rename 'flink-addons' to 'flink-staging'\n",
			"commitDate": "2015-02-02, 10:40 AM",
			"commitName": "f94112fbbaaf2ecc6a9ecb314a5565203ce779a7",
			"commitAuthor": "Robert Metzger",
			"commitDateOld": "2015-02-01, 3:27 PM",
			"commitNameOld": "563e546236217dace58a8031d56d08a27e08160b",
			"commitAuthorOld": "zentol",
			"daysBetweenCommits": 0.8,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java",
				"newPath": "flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java"
			}
		},
		"82c420022ef3ffe3d7ad2172b4338ed12baf9e0e": {
			"type": "Ybodychange",
			"commitMessage": "[FLINK-1434] [FLINK-1401] Streaming support added for webclient\n\nCloses #334\n",
			"commitDate": "2015-01-27, 2:31 PM",
			"commitName": "82c420022ef3ffe3d7ad2172b4338ed12baf9e0e",
			"commitAuthor": "Gyula Fora",
			"commitDateOld": "2015-01-27, 12:42 PM",
			"commitNameOld": "b263932e2e246824fa5e7538e62f39a53b5e9c17",
			"commitAuthorOld": "Gyula Fora",
			"daysBetweenCommits": 0.08,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n \tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n-\t\treturn transform(\"filter\", getType(), new FilterInvokable<OUT>(clean(filter)));\n+\t\treturn transform(\"Filter\", getType(), new FilterInvokable<OUT>(clean(filter)));\n \n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"34353f6658e9a4dd50ad860e17eee94804b76ccb": {
			"type": "Ybodychange",
			"commitMessage": "[scala] [streaming] Base functionality added for streaming scala api\n",
			"commitDate": "2015-01-02, 9:34 AM",
			"commitName": "34353f6658e9a4dd50ad860e17eee94804b76ccb",
			"commitAuthor": "Gyula Fora",
			"commitDateOld": "2014-12-18, 11:07 AM",
			"commitNameOld": "c5e9a512242e050b71635cacaaca7890fadc6b67",
			"commitAuthorOld": "Gyula Fora",
			"daysBetweenCommits": 14.94,
			"commitsBetweenForRepo": 7,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n \tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n-\t\treturn addFunction(\"filter\", clean(filter), getType(), getType(), new FilterInvokable<OUT>(clean(\n-\t\t\t\tfilter)));\n+\t\treturn transform(\"filter\", getType(), new FilterInvokable<OUT>(clean(filter)));\n+\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"5f7800702ad1762eef4d2a25b09615f65bf3761c": {
			"type": "Ybodychange",
			"commitMessage": "[FLINK-1325] [streaming] Added clousure cleaning to streaming\n\nThis closes #273\n",
			"commitDate": "2014-12-17, 11:34 AM",
			"commitName": "5f7800702ad1762eef4d2a25b09615f65bf3761c",
			"commitAuthor": "mbalassi",
			"commitDateOld": "2014-12-17, 8:02 AM",
			"commitNameOld": "fbd006051aa5a72cfebda9d8dfc50dc494b4c4ac",
			"commitAuthorOld": "Gyula Fora",
			"daysBetweenCommits": 0.15,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,3 +1,4 @@\n \tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n-\t\treturn addFunction(\"filter\", filter, getType(), getType(), new FilterInvokable<OUT>(filter));\n+\t\treturn addFunction(\"filter\", clean(filter), getType(), getType(), new FilterInvokable<OUT>(clean(\n+\t\t\t\tfilter)));\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"51c1f67791307c2b9355171f7398d104befc8de5": {
			"type": "Ybodychange",
			"commitMessage": "[FLINK-1161] [streaming] Streaming API type handling rework to support java 8 lambdas\n",
			"commitDate": "2014-12-10, 4:27 AM",
			"commitName": "51c1f67791307c2b9355171f7398d104befc8de5",
			"commitAuthor": "Gyula Fora",
			"commitDateOld": "2014-12-05, 7:47 AM",
			"commitNameOld": "4e046a9bd43428820a409a0777ab281e3c366af5",
			"commitAuthorOld": "Gyula Fora",
			"daysBetweenCommits": 4.86,
			"commitsBetweenForRepo": 10,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,7 +1,3 @@\n \tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n-\t\tFunctionTypeWrapper<OUT> typeWrapper = new FunctionTypeWrapper<OUT>(filter,\n-\t\t\t\tFilterFunction.class, 0);\n-\n-\t\treturn addFunction(\"filter\", filter, typeWrapper, typeWrapper, new FilterInvokable<OUT>(\n-\t\t\t\tfilter));\n+\t\treturn addFunction(\"filter\", filter, getType(), getType(), new FilterInvokable<OUT>(filter));\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"1b046f4e334926e560456c2b2ef3b67e635e4700": {
			"type": "Ybodychange",
			"commitMessage": "[streaming] Refactored stream components with InputHandler & OutputHandler\n",
			"commitDate": "2014-08-29, 12:01 PM",
			"commitName": "1b046f4e334926e560456c2b2ef3b67e635e4700",
			"commitAuthor": "ghermann",
			"commitDateOld": "2014-08-18, 9:48 AM",
			"commitNameOld": "923b508d18fdf471c0c74a263bc6c93b9c4ecf59",
			"commitAuthorOld": "Stephan Ewen",
			"daysBetweenCommits": 11.09,
			"commitsBetweenForRepo": 25,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,7 @@\n \tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n-\t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<OUT, Tuple, OUT>(filter,\n-\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<OUT>(filter));\n+\t\tFunctionTypeWrapper<OUT> typeWrapper = new FunctionTypeWrapper<OUT>(\n+\t\t\t\tfilter, FilterFunction.class, 0);\n+\n+\t\treturn addFunction(\"filter\", filter, typeWrapper, typeWrapper,\n+\t\t\t\tnew FilterInvokable<OUT>(filter));\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"d56d48f1a1933f138f5d97f42b71aa64fad6bc6f": {
			"type": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange,Yparameterchange)",
			"commitMessage": "[streaming] API update with more differentiated DataStream types and javadoc + several fixes\n",
			"commitDate": "2014-08-18, 7:23 AM",
			"commitName": "d56d48f1a1933f138f5d97f42b71aa64fad6bc6f",
			"commitAuthor": "gyfora",
			"subchanges": [
				{
					"type": "Yfilerename",
					"commitMessage": "[streaming] API update with more differentiated DataStream types and javadoc + several fixes\n",
					"commitDate": "2014-08-18, 7:23 AM",
					"commitName": "d56d48f1a1933f138f5d97f42b71aa64fad6bc6f",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 7:22 AM",
					"commitNameOld": "e73ea29593cdb8b4d9a11137b2188ca72673e98c",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic StreamOperator<T> filter(FilterFunction<T> filter) {\n-\t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<T, Tuple, T>(filter,\n-\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n+\tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n+\t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<OUT, Tuple, OUT>(filter,\n+\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<OUT>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldPath": "flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java",
						"newPath": "flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java"
					}
				},
				{
					"type": "Yreturntypechange",
					"commitMessage": "[streaming] API update with more differentiated DataStream types and javadoc + several fixes\n",
					"commitDate": "2014-08-18, 7:23 AM",
					"commitName": "d56d48f1a1933f138f5d97f42b71aa64fad6bc6f",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 7:22 AM",
					"commitNameOld": "e73ea29593cdb8b4d9a11137b2188ca72673e98c",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic StreamOperator<T> filter(FilterFunction<T> filter) {\n-\t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<T, Tuple, T>(filter,\n-\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n+\tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n+\t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<OUT, Tuple, OUT>(filter,\n+\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<OUT>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "StreamOperator<T>",
						"newValue": "SingleOutputStreamOperator<OUT,?>"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[streaming] API update with more differentiated DataStream types and javadoc + several fixes\n",
					"commitDate": "2014-08-18, 7:23 AM",
					"commitName": "d56d48f1a1933f138f5d97f42b71aa64fad6bc6f",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 7:22 AM",
					"commitNameOld": "e73ea29593cdb8b4d9a11137b2188ca72673e98c",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic StreamOperator<T> filter(FilterFunction<T> filter) {\n-\t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<T, Tuple, T>(filter,\n-\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n+\tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n+\t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<OUT, Tuple, OUT>(filter,\n+\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<OUT>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				},
				{
					"type": "Yparameterchange",
					"commitMessage": "[streaming] API update with more differentiated DataStream types and javadoc + several fixes\n",
					"commitDate": "2014-08-18, 7:23 AM",
					"commitName": "d56d48f1a1933f138f5d97f42b71aa64fad6bc6f",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 7:22 AM",
					"commitNameOld": "e73ea29593cdb8b4d9a11137b2188ca72673e98c",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic StreamOperator<T> filter(FilterFunction<T> filter) {\n-\t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<T, Tuple, T>(filter,\n-\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n+\tpublic SingleOutputStreamOperator<OUT, ?> filter(FilterFunction<OUT> filter) {\n+\t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<OUT, Tuple, OUT>(filter,\n+\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<OUT>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-FilterFunction<T>]",
						"newValue": "[filter-FilterFunction<OUT>]"
					}
				}
			]
		},
		"e73ea29593cdb8b4d9a11137b2188ca72673e98c": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "[streaming] Updated Streaming function interfaces to match main project\n",
			"commitDate": "2014-08-18, 7:22 AM",
			"commitName": "e73ea29593cdb8b4d9a11137b2188ca72673e98c",
			"commitAuthor": "gyfora",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "[streaming] Updated Streaming function interfaces to match main project\n",
					"commitDate": "2014-08-18, 7:22 AM",
					"commitName": "e73ea29593cdb8b4d9a11137b2188ca72673e98c",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 7:22 AM",
					"commitNameOld": "0465d300cbc6cf6c69dc4da2b64cecefaa2d77db",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic StreamOperator<T> filter(RichFilterFunction<T> filter) {\n+\tpublic StreamOperator<T> filter(FilterFunction<T> filter) {\n \t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<T, Tuple, T>(filter,\n-\t\t\t\tRichFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n+\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-RichFilterFunction<T>]",
						"newValue": "[filter-FilterFunction<T>]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[streaming] Updated Streaming function interfaces to match main project\n",
					"commitDate": "2014-08-18, 7:22 AM",
					"commitName": "e73ea29593cdb8b4d9a11137b2188ca72673e98c",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 7:22 AM",
					"commitNameOld": "0465d300cbc6cf6c69dc4da2b64cecefaa2d77db",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic StreamOperator<T> filter(RichFilterFunction<T> filter) {\n+\tpublic StreamOperator<T> filter(FilterFunction<T> filter) {\n \t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<T, Tuple, T>(filter,\n-\t\t\t\tRichFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n+\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"0465d300cbc6cf6c69dc4da2b64cecefaa2d77db": {
			"type": "Yreturntypechange",
			"commitMessage": "[streaming] Added new DataStream types for operators\n",
			"commitDate": "2014-08-18, 7:22 AM",
			"commitName": "0465d300cbc6cf6c69dc4da2b64cecefaa2d77db",
			"commitAuthor": "gyfora",
			"commitDateOld": "2014-08-18, 7:22 AM",
			"commitNameOld": "f932700ae4e7e6110b729afa8530ac029ed0b700",
			"commitAuthorOld": "gyfora",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n-\tpublic StreamOperator<T, T> filter(RichFilterFunction<T> filter) {\n+\tpublic StreamOperator<T> filter(RichFilterFunction<T> filter) {\n \t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<T, Tuple, T>(filter,\n \t\t\t\tRichFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {
				"oldValue": "StreamOperator<T,T>",
				"newValue": "StreamOperator<T>"
			}
		},
		"776bd3f6dbfd85db978ff4d5785935a19f43d77b": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "[streaming] Updated API to use RichFunctions\n",
			"commitDate": "2014-08-18, 7:22 AM",
			"commitName": "776bd3f6dbfd85db978ff4d5785935a19f43d77b",
			"commitAuthor": "gyfora",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "[streaming] Updated API to use RichFunctions\n",
					"commitDate": "2014-08-18, 7:22 AM",
					"commitName": "776bd3f6dbfd85db978ff4d5785935a19f43d77b",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 7:22 AM",
					"commitNameOld": "1162caca857142f237c6c05a04e9f7f2afc89572",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 2,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic StreamOperator<T, T> filter(FilterFunction<T> filter) {\n+\tpublic StreamOperator<T, T> filter(RichFilterFunction<T> filter) {\n \t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<T, Tuple, T>(filter,\n-\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n+\t\t\t\tRichFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-FilterFunction<T>]",
						"newValue": "[filter-RichFilterFunction<T>]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[streaming] Updated API to use RichFunctions\n",
					"commitDate": "2014-08-18, 7:22 AM",
					"commitName": "776bd3f6dbfd85db978ff4d5785935a19f43d77b",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 7:22 AM",
					"commitNameOld": "1162caca857142f237c6c05a04e9f7f2afc89572",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 2,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic StreamOperator<T, T> filter(FilterFunction<T> filter) {\n+\tpublic StreamOperator<T, T> filter(RichFilterFunction<T> filter) {\n \t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<T, Tuple, T>(filter,\n-\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n+\t\t\t\tRichFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"799424d1a3237a8d1b32451f4b3ad23b342cf59e": {
			"type": "Ybodychange",
			"commitMessage": "[streaming] Wrapped serializers to make component construction simpler\n",
			"commitDate": "2014-08-18, 7:22 AM",
			"commitName": "799424d1a3237a8d1b32451f4b3ad23b342cf59e",
			"commitAuthor": "ghermann",
			"commitDateOld": "2014-08-18, 7:20 AM",
			"commitNameOld": "a2c4137feb4c8ad6e0f0b34c4b0062b577af0150",
			"commitAuthorOld": "gyfora",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 7,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n \tpublic StreamOperator<T, T> filter(FilterFunction<T> filter) {\n-\t\treturn environment.addFunction(\"filter\", new DataStream<T>(this), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter));\n+\t\treturn addFunction(\"filter\", filter, new FunctionTypeWrapper<T, Tuple, T>(filter,\n+\t\t\t\tFilterFunction.class, 0, -1, 0), new FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"5d72dd496cdad903dff455bbf510cbff68e4d21f": {
			"type": "Ybodychange",
			"commitMessage": "[streaming] Iteration update to use proper partitioning and forward connection + DataStream refactor and Javadoc update\n",
			"commitDate": "2014-08-18, 7:14 AM",
			"commitName": "5d72dd496cdad903dff455bbf510cbff68e4d21f",
			"commitAuthor": "gyfora",
			"commitDateOld": "2014-08-18, 7:14 AM",
			"commitNameOld": "859983cc2652b544b9830eb07e18d3a1e78be00a",
			"commitAuthorOld": "gyfora",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n \tpublic StreamOperator<T, T> filter(FilterFunction<T> filter) {\n-\t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n+\t\treturn environment.addFunction(\"filter\", new DataStream<T>(this), filter,\n \t\t\t\tnew FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"c524951f5c779d47cd3fc9d40fcc0dd4db4cdfeb": {
			"type": "Yreturntypechange",
			"commitMessage": "[streaming] Merged conflicts\n",
			"commitDate": "2014-08-18, 7:11 AM",
			"commitName": "c524951f5c779d47cd3fc9d40fcc0dd4db4cdfeb",
			"commitAuthor": "mbalassi",
			"commitDateOld": "2014-08-18, 6:58 AM",
			"commitNameOld": "7238010e0864f20b5474268cb8e04cf5ec4720de",
			"commitAuthorOld": "ghermann",
			"daysBetweenCommits": 0.01,
			"commitsBetweenForRepo": 4,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n+\tpublic StreamOperator<T, T> filter(FilterFunction<T> filter) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n \t\t\t\tnew FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {
				"oldValue": "DataStream<T>",
				"newValue": "StreamOperator<T,T>"
			}
		},
		"1e434d10ab16f0a36a9326cfdf7df416ff5b91d5": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] Module rename\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "1e434d10ab16f0a36a9326cfdf7df416ff5b91d5",
			"commitAuthor": "mbalassi",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "12e52f8ac430c00ed38096944e50db1e185f3567",
			"commitAuthorOld": "mbalassi",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java"
			}
		},
		"12e52f8ac430c00ed38096944e50db1e185f3567": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] Package and Java Dependency rename\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "12e52f8ac430c00ed38096944e50db1e185f3567",
			"commitAuthor": "mbalassi",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "b89fa9a2437a24ba311efaa8c3dac9bbf62e7a73",
			"commitAuthorOld": "gyfora",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java"
			}
		},
		"5b05ca635d1a661bf2be3baf60159d84834a9942": {
			"type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
			"commitMessage": "[streaming] Updated RemoteStreamEnvironment\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "5b05ca635d1a661bf2be3baf60159d84834a9942",
			"commitAuthor": "ghermann",
			"subchanges": [
				{
					"type": "Yfilerename",
					"commitMessage": "[streaming] Updated RemoteStreamEnvironment\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "5b05ca635d1a661bf2be3baf60159d84834a9942",
					"commitAuthor": "ghermann",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "65d0e3245ece52c70505c40e56bd49ea93e0a15f",
					"commitAuthorOld": "jfeher",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n+\t\t\t\tnew FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
						"newPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[streaming] Updated RemoteStreamEnvironment\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "5b05ca635d1a661bf2be3baf60159d84834a9942",
					"commitAuthor": "ghermann",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "65d0e3245ece52c70505c40e56bd49ea93e0a15f",
					"commitAuthorOld": "jfeher",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n+\t\t\t\tnew FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				},
				{
					"type": "Yparameterchange",
					"commitMessage": "[streaming] Updated RemoteStreamEnvironment\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "5b05ca635d1a661bf2be3baf60159d84834a9942",
					"commitAuthor": "ghermann",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "65d0e3245ece52c70505c40e56bd49ea93e0a15f",
					"commitAuthorOld": "jfeher",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n+\t\t\t\tnew FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-FilterFunction<T>, parallelism-int]",
						"newValue": "[filter-FilterFunction<T>]"
					}
				}
			]
		},
		"65d0e3245ece52c70505c40e56bd49ea93e0a15f": {
			"type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
			"commitMessage": "[streaming] Package restructure\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "65d0e3245ece52c70505c40e56bd49ea93e0a15f",
			"commitAuthor": "jfeher",
			"subchanges": [
				{
					"type": "Yfilerename",
					"commitMessage": "[streaming] Package restructure\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "65d0e3245ece52c70505c40e56bd49ea93e0a15f",
					"commitAuthor": "jfeher",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "a9ed127ca76b26037c50f9899a61c10587721c39",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter));\n+\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
						"newPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[streaming] Package restructure\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "65d0e3245ece52c70505c40e56bd49ea93e0a15f",
					"commitAuthor": "jfeher",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "a9ed127ca76b26037c50f9899a61c10587721c39",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter));\n+\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				},
				{
					"type": "Yparameterchange",
					"commitMessage": "[streaming] Package restructure\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "65d0e3245ece52c70505c40e56bd49ea93e0a15f",
					"commitAuthor": "jfeher",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "a9ed127ca76b26037c50f9899a61c10587721c39",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter));\n+\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-FilterFunction<T>]",
						"newValue": "[filter-FilterFunction<T>, parallelism-int]"
					}
				}
			]
		},
		"3e83eb4fc853bca0daadb9f7c50ffb1670e072cc": {
			"type": "Ybodychange",
			"commitMessage": "[streaming] jobgraphbuilder bugfix\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "3e83eb4fc853bca0daadb9f7c50ffb1670e072cc",
			"commitAuthor": "gyfora",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "e6da7089a2a5a7a8801cbf1dd1736817041ba5fd",
			"commitAuthorOld": "mbalassi",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,3 +1,4 @@\n \tpublic DataStream<T> filter(FilterFunction<T> filter) {\n-\t\treturn filter(filter, 1);\n+\t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n+\t\t\t\tnew FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"e6da7089a2a5a7a8801cbf1dd1736817041ba5fd": {
			"type": "Ybodychange",
			"commitMessage": "[streaming] merge\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "e6da7089a2a5a7a8801cbf1dd1736817041ba5fd",
			"commitAuthor": "mbalassi",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "47e2c8210930a5eb57fba3eebdf9afef07772ae3",
			"commitAuthorOld": "gyfora",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,4 +1,3 @@\n \tpublic DataStream<T> filter(FilterFunction<T> filter) {\n-\t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter));\n+\t\treturn filter(filter, 1);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"47e2c8210930a5eb57fba3eebdf9afef07772ae3": {
			"type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
			"commitMessage": "[streaming] setParallelism added for datastream operators to match main project\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "47e2c8210930a5eb57fba3eebdf9afef07772ae3",
			"commitAuthor": "gyfora",
			"subchanges": [
				{
					"type": "Yfilerename",
					"commitMessage": "[streaming] setParallelism added for datastream operators to match main project\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "47e2c8210930a5eb57fba3eebdf9afef07772ae3",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "90df95391049122969c39332bfd4ed852dba6ea0",
					"commitAuthorOld": "jfeher",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n+\t\t\t\tnew FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
						"newPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[streaming] setParallelism added for datastream operators to match main project\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "47e2c8210930a5eb57fba3eebdf9afef07772ae3",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "90df95391049122969c39332bfd4ed852dba6ea0",
					"commitAuthorOld": "jfeher",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n+\t\t\t\tnew FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				},
				{
					"type": "Yparameterchange",
					"commitMessage": "[streaming] setParallelism added for datastream operators to match main project\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "47e2c8210930a5eb57fba3eebdf9afef07772ae3",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "90df95391049122969c39332bfd4ed852dba6ea0",
					"commitAuthorOld": "jfeher",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n+\t\t\t\tnew FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-FilterFunction<T>, parallelism-int]",
						"newValue": "[filter-FilterFunction<T>]"
					}
				}
			]
		},
		"90df95391049122969c39332bfd4ed852dba6ea0": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] kafka sink and source for multiple types\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "90df95391049122969c39332bfd4ed852dba6ea0",
			"commitAuthor": "jfeher",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "f5cda1b459bc9459df4d124d4d8c7d4072e7c528",
			"commitAuthorOld": "gyfora",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"f5cda1b459bc9459df4d124d4d8c7d4072e7c528": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] javadoc update\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "f5cda1b459bc9459df4d124d4d8c7d4072e7c528",
			"commitAuthor": "gyfora",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "2b831022d76c8a7ae9fbd96b4e4eecde9bbf311b",
			"commitAuthorOld": "jfeher",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"2b831022d76c8a7ae9fbd96b4e4eecde9bbf311b": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] rmq source refactored\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "2b831022d76c8a7ae9fbd96b4e4eecde9bbf311b",
			"commitAuthor": "jfeher",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "6225f15bdb7c5812f09031454ef8257079c57373",
			"commitAuthorOld": "mbalassi",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 4,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"74ac9d499f72919033035f67f7b7771270a8c966": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] Rat fixes\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "74ac9d499f72919033035f67f7b7771270a8c966",
			"commitAuthor": "mbalassi",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "f0c57317634a5d803e64494a5d2f4133c1cf9a3b",
			"commitAuthorOld": "jfeher",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"f0c57317634a5d803e64494a5d2f4133c1cf9a3b": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] RMQ source for multiple types\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "f0c57317634a5d803e64494a5d2f4133c1cf9a3b",
			"commitAuthor": "jfeher",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "df9dac28eafcd92348c4ca49a649cf669110501f",
			"commitAuthorOld": "mbalassi",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 2,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"4363991c20959421314d1249a1e78ad764371d66": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] test update\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "4363991c20959421314d1249a1e78ad764371d66",
			"commitAuthor": "gyfora",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "cdce868a156f9630978aedbdfc4eed582a055862",
			"commitAuthorOld": "jfeher",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"cdce868a156f9630978aedbdfc4eed582a055862": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] RMQ Sink for other types\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "cdce868a156f9630978aedbdfc4eed582a055862",
			"commitAuthor": "jfeher",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "5db9601d81d583cb7edc943786ef81ef8e32fe77",
			"commitAuthorOld": "ghermann",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 7,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"b44650b0ed0d4e7c900a0682a4a805ed7abeca04": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] Removed unused StreamInvokableComponent\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "b44650b0ed0d4e7c900a0682a4a805ed7abeca04",
			"commitAuthor": "ghermann",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "086d1a72b38a8ec0a5e4300a02daf4097e0897f3",
			"commitAuthorOld": "Yingjun Wu",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"086d1a72b38a8ec0a5e4300a02daf4097e0897f3": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] add disk dump sink, prepare to support multiple output stream\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "086d1a72b38a8ec0a5e4300a02daf4097e0897f3",
			"commitAuthor": "Yingjun Wu",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "916b1eb94ad63be2f1b028be9f2e0fe86c17bdb3",
			"commitAuthorOld": "gyfora",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"916b1eb94ad63be2f1b028be9f2e0fe86c17bdb3": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] merge\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "916b1eb94ad63be2f1b028be9f2e0fe86c17bdb3",
			"commitAuthor": "gyfora",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "0fd098febb7c720f0ab4adeb0cc778feab8c9076",
			"commitAuthorOld": "jfeher",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"e02b72963bb57050245291ea8aaef0eedf37ffdf": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "[streaming] test cleanup\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "e02b72963bb57050245291ea8aaef0eedf37ffdf",
			"commitAuthor": "gyfora",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "[streaming] test cleanup\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "e02b72963bb57050245291ea8aaef0eedf37ffdf",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "75d94931ef45fb95cd59195ef99578654c47c227",
					"commitAuthorOld": "jfeher",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), paralelism);\n+\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-FilterFunction<T>, paralelism-int]",
						"newValue": "[filter-FilterFunction<T>, parallelism-int]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[streaming] test cleanup\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "e02b72963bb57050245291ea8aaef0eedf37ffdf",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "75d94931ef45fb95cd59195ef99578654c47c227",
					"commitAuthorOld": "jfeher",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), paralelism);\n+\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"75d94931ef45fb95cd59195ef99578654c47c227": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "[streaming] BatchTest refactored\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "75d94931ef45fb95cd59195ef99578654c47c227",
			"commitAuthor": "jfeher",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "[streaming] BatchTest refactored\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "75d94931ef45fb95cd59195ef99578654c47c227",
					"commitAuthor": "jfeher",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "a3ac7af6077104dfd92a1f7acfd7e32f20bb9601",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n+\t\t\t\tnew FilterInvokable<T>(filter), paralelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-FilterFunction<T>, parallelism-int]",
						"newValue": "[filter-FilterFunction<T>, paralelism-int]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[streaming] BatchTest refactored\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "75d94931ef45fb95cd59195ef99578654c47c227",
					"commitAuthor": "jfeher",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "a3ac7af6077104dfd92a1f7acfd7e32f20bb9601",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n+\t\t\t\tnew FilterInvokable<T>(filter), paralelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"a3ac7af6077104dfd92a1f7acfd7e32f20bb9601": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "[streaming] streamcomponent cleanup\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "a3ac7af6077104dfd92a1f7acfd7e32f20bb9601",
			"commitAuthor": "gyfora",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "[streaming] streamcomponent cleanup\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "a3ac7af6077104dfd92a1f7acfd7e32f20bb9601",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "4728eb9d9cfe640495e3edea80238e2c93f11522",
					"commitAuthorOld": "Yingjun Wu",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 3,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), paralelism);\n+\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-FilterFunction<T>, paralelism-int]",
						"newValue": "[filter-FilterFunction<T>, parallelism-int]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[streaming] streamcomponent cleanup\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "a3ac7af6077104dfd92a1f7acfd7e32f20bb9601",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "4728eb9d9cfe640495e3edea80238e2c93f11522",
					"commitAuthorOld": "Yingjun Wu",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 3,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), paralelism);\n+\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"4728eb9d9cfe640495e3edea80238e2c93f11522": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "[streaming] fix kafka producer bug\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "4728eb9d9cfe640495e3edea80238e2c93f11522",
			"commitAuthor": "Yingjun Wu",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "[streaming] fix kafka producer bug\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "4728eb9d9cfe640495e3edea80238e2c93f11522",
					"commitAuthor": "Yingjun Wu",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "0e2008bc80e256220783e45b2e034519b8ec5a62",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n+\t\t\t\tnew FilterInvokable<T>(filter), paralelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-FilterFunction<T>, parallelism-int]",
						"newValue": "[filter-FilterFunction<T>, paralelism-int]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[streaming] fix kafka producer bug\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "4728eb9d9cfe640495e3edea80238e2c93f11522",
					"commitAuthor": "Yingjun Wu",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "0e2008bc80e256220783e45b2e034519b8ec5a62",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n+\t\t\t\tnew FilterInvokable<T>(filter), paralelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"edf3a0f49dd0b18440f1135e08c73e2f0bd49d29": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "[streaming] javadoc update\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "edf3a0f49dd0b18440f1135e08c73e2f0bd49d29",
			"commitAuthor": "gyfora",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "[streaming] javadoc update\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "edf3a0f49dd0b18440f1135e08c73e2f0bd49d29",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "23788bcdd79030d98860d5ca8d907e995397f553",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), paralelism);\n+\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-FilterFunction<T>, paralelism-int]",
						"newValue": "[filter-FilterFunction<T>, parallelism-int]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[streaming] javadoc update\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "edf3a0f49dd0b18440f1135e08c73e2f0bd49d29",
					"commitAuthor": "gyfora",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "23788bcdd79030d98860d5ca8d907e995397f553",
					"commitAuthorOld": "gyfora",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 1,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,4 +1,4 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int parallelism) {\n \t\treturn environment.addFunction(\"filter\", this.copy(), filter,\n-\t\t\t\tnew FilterInvokable<T>(filter), paralelism);\n+\t\t\t\tnew FilterInvokable<T>(filter), parallelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"b2f8f6e10ad8a36a92928185b23827944990748a": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] Remove dms repo from pom\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "b2f8f6e10ad8a36a92928185b23827944990748a",
			"commitAuthor": "Márton Balassi",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "e416f39f1f78d4589badaa6d5ab6e33a5002548a",
			"commitAuthorOld": "Márton Balassi",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"e416f39f1f78d4589badaa6d5ab6e33a5002548a": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] pom update\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "e416f39f1f78d4589badaa6d5ab6e33a5002548a",
			"commitAuthor": "Márton Balassi",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "a2cabbb7ce1d0d12218934c5c58c67f89cd0bef0",
			"commitAuthorOld": "gyfora",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"a2cabbb7ce1d0d12218934c5c58c67f89cd0bef0": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] DataStream id update\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "a2cabbb7ce1d0d12218934c5c58c67f89cd0bef0",
			"commitAuthor": "gyfora",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "a31df65316aa54662515ddf4f95de71b87c64476",
			"commitAuthorOld": "Márton Balassi",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"a31df65316aa54662515ddf4f95de71b87c64476": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] First succesful decomposed build\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "a31df65316aa54662515ddf4f95de71b87c64476",
			"commitAuthor": "Márton Balassi",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "f054ac028d3bbdabde4946dcf18c2f04ba0dffbb",
			"commitAuthorOld": "gyfora",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 3,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"9b49450045e4f6fc436818470f9a8b5bc95eba15": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] Started moving to 0.6\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "9b49450045e4f6fc436818470f9a8b5bc95eba15",
			"commitAuthor": "ghermann",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "b0219bbaad12f00820bfbe7c16d231cb42b6eebc",
			"commitAuthorOld": "Márton Balassi",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"b0219bbaad12f00820bfbe7c16d231cb42b6eebc": {
			"type": "Yfilerename",
			"commitMessage": "[streaming] Decomposing project mv\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "b0219bbaad12f00820bfbe7c16d231cb42b6eebc",
			"commitAuthor": "Márton Balassi",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "63751058f8a0643b8e9e6c18dcd44a734f93be68",
			"commitAuthorOld": "jfeher",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java",
				"newPath": "flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java"
			}
		},
		"7b7ac3d09b7769c4c13961abb4f51c58895e8e3d": {
			"type": "Ybodychange",
			"commitMessage": "[streaming] Fixed BatchTest\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "7b7ac3d09b7769c4c13961abb4f51c58895e8e3d",
			"commitAuthor": "ghermann",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "7345bf6a330d6cba0f8f0f72761ff05e23543581",
			"commitAuthorOld": "Márton Balassi",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 4,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,3 +1,3 @@\n \tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n-\t\treturn context.addFunction(\"filter\", this.copy(), filter, new FilterInvokable<T>(filter), paralelism);\n+\t\treturn environment.addFunction(\"filter\", this.copy(), filter, new FilterInvokable<T>(filter), paralelism);\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"b39305f864b40eaf52d5a799edb09c7b898095b0": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "[streaming] parallelism parameter added to operators\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "b39305f864b40eaf52d5a799edb09c7b898095b0",
			"commitAuthor": "Eszes Dávid",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "[streaming] parallelism parameter added to operators\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "b39305f864b40eaf52d5a799edb09c7b898095b0",
					"commitAuthor": "Eszes Dávid",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "697eb774e84b43e9b7cfef07fe812a05e1a836ce",
					"commitAuthorOld": "Márton Balassi",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 9,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,3 +1,3 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n-\t\treturn context.addFunction(\"filter\", this.copy(), filter, new FilterInvokable<T>(filter));\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n+\t\treturn context.addFunction(\"filter\", this.copy(), filter, new FilterInvokable<T>(filter), paralelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[filter-FilterFunction<T>]",
						"newValue": "[filter-FilterFunction<T>, paralelism-int]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "[streaming] parallelism parameter added to operators\n",
					"commitDate": "2014-08-18, 6:57 AM",
					"commitName": "b39305f864b40eaf52d5a799edb09c7b898095b0",
					"commitAuthor": "Eszes Dávid",
					"commitDateOld": "2014-08-18, 6:57 AM",
					"commitNameOld": "697eb774e84b43e9b7cfef07fe812a05e1a836ce",
					"commitAuthorOld": "Márton Balassi",
					"daysBetweenCommits": 0,
					"commitsBetweenForRepo": 9,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,3 +1,3 @@\n-\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n-\t\treturn context.addFunction(\"filter\", this.copy(), filter, new FilterInvokable<T>(filter));\n+\tpublic DataStream<T> filter(FilterFunction<T> filter, int paralelism) {\n+\t\treturn context.addFunction(\"filter\", this.copy(), filter, new FilterInvokable<T>(filter), paralelism);\n \t}\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"697eb774e84b43e9b7cfef07fe812a05e1a836ce": {
			"type": "Ybodychange",
			"commitMessage": "[streaming] minor fixes\n\n[streaming] minor example refactor\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "697eb774e84b43e9b7cfef07fe812a05e1a836ce",
			"commitAuthor": "Márton Balassi",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "3e93ea6d5f2ac89d4df9d55642f1d0e80418d26f",
			"commitAuthorOld": "Márton Balassi",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,3 +1,3 @@\n \tpublic DataStream<T> filter(FilterFunction<T> filter) {\n-\t\treturn context.addFunction(\"filter\", this, filter, new FilterInvokable<T>(filter));\n+\t\treturn context.addFunction(\"filter\", this.copy(), filter, new FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"3e93ea6d5f2ac89d4df9d55642f1d0e80418d26f": {
			"type": "Ybodychange",
			"commitMessage": "[streaming] TestDataUtil update with Logging\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "3e93ea6d5f2ac89d4df9d55642f1d0e80418d26f",
			"commitAuthor": "Márton Balassi",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "3e337a0435c0980d4780e706f98a92f3e12d1fd5",
			"commitAuthorOld": "ghermann",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,3 +1,3 @@\n \tpublic DataStream<T> filter(FilterFunction<T> filter) {\n-\t\treturn context.addFunction(\"filter\", this.copy(), filter, new FilterInvokable<T>(filter));\n+\t\treturn context.addFunction(\"filter\", this, filter, new FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"3e337a0435c0980d4780e706f98a92f3e12d1fd5": {
			"type": "Ybodychange",
			"commitMessage": "[streaming] Added DataStream copying\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "3e337a0435c0980d4780e706f98a92f3e12d1fd5",
			"commitAuthor": "ghermann",
			"commitDateOld": "2014-08-18, 6:57 AM",
			"commitNameOld": "6691674b08829412a2e14a5e43302c889c22e540",
			"commitAuthorOld": "ghermann",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,3 +1,3 @@\n \tpublic DataStream<T> filter(FilterFunction<T> filter) {\n-\t\treturn context.addFunction(\"filter\", this, filter, new FilterInvokable<T>(filter));\n+\t\treturn context.addFunction(\"filter\", this.copy(), filter, new FilterInvokable<T>(filter));\n \t}\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"f8425f1d1e9c6846a684bd2745623b14b11ddd51": {
			"type": "Yintroduced",
			"commitMessage": "[streaming] Added FilterInvokable, eliminated code repetition at adding a function to DataStream\n",
			"commitDate": "2014-08-18, 6:57 AM",
			"commitName": "f8425f1d1e9c6846a684bd2745623b14b11ddd51",
			"commitAuthor": "ghermann",
			"diff": "@@ -0,0 +1,3 @@\n+\tpublic DataStream<T> filter(FilterFunction<T> filter) {\n+\t\treturn context.addFunction(\"filter\", this, filter, new FilterInvokable<T>(filter));\n+\t}\n\\ No newline at end of file\n"
		}
	},
	"sha": "9e936a5f8198b0059e9b5fba33163c2bbe3efbdd"
}