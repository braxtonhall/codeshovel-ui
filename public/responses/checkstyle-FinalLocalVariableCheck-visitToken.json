{
	"repo": "https://github.com/checkstyle/checkstyle.git",
	"file": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
	"method": {
		"longName": "public void visitToken(DetailAST ast);",
		"startLine": 188,
		"methodName": "visitToken",
		"isStatic": false,
		"isAbstract": false,
		"visibility": "public"
	},
	"history": {
		"f0ed29b5cfef6adcec791cfdc236a5b850b685ee": {
			"type": "Ybodychange",
			"commitMessage": "Issue #5124: removed usage of branchContains for simple cases",
			"commitDate": "2017-11-09, 6:45 AM",
			"commitName": "f0ed29b5cfef6adcec791cfdc236a5b850b685ee",
			"commitAuthor": "rnveach",
			"commitDateOld": "2017-10-30, 6:16 PM",
			"commitNameOld": "5cdbb191a17c65c2956b35d71513e9b59b6d2166",
			"commitAuthorOld": "Andrew Kuchev",
			"daysBetweenCommits": 9.56,
			"commitsBetweenForRepo": 9,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,52 +1,53 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 currentScopeAssignedVariables.push(new ArrayDeque<>());\n                 if (ast.getParent().getType() != TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     == ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n-                        && !ast.branchContains(TokenTypes.FINAL)\n+                        && ast.findFirstToken(TokenTypes.MODIFIERS)\n+                            .findFirstToken(TokenTypes.FINAL) == null\n                         && !isInAbstractOrNativeMethod(ast)\n                         && !ScopeUtils.isInInterfaceBlock(ast)\n                         && !isMultipleTypeCatch(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                         && ast.findFirstToken(TokenTypes.MODIFIERS)\n                             .findFirstToken(TokenTypes.FINAL) == null\n                         && !isVariableInForInit(ast)\n                         && shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType) && isFirstChild(ast)) {\n                     final Optional<FinalVariableCandidate> candidate = getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n                         determineAssignmentConditions(ast, candidate.get());\n                         currentScopeAssignedVariables.peek().add(ast);\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n             case TokenTypes.LITERAL_BREAK:\n                 scopeStack.peek().containsBreak = true;\n                 break;\n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"8fef90609bcf29c84823f4a9affae013ded9379d": {
			"type": "Ybodychange",
			"commitMessage": "Issue #4727: fixed FinalLocalVariable scanning anonymous classes",
			"commitDate": "2017-07-29, 7:50 PM",
			"commitName": "8fef90609bcf29c84823f4a9affae013ded9379d",
			"commitAuthor": "rnveach",
			"commitDateOld": "2017-07-23, 1:48 PM",
			"commitNameOld": "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba",
			"commitAuthorOld": "vasilyeva",
			"daysBetweenCommits": 6.25,
			"commitsBetweenForRepo": 40,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,51 +1,52 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 currentScopeAssignedVariables.push(new ArrayDeque<>());\n                 if (ast.getParent().getType() != TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     == ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isInAbstractOrNativeMethod(ast)\n                         && !ScopeUtils.isInInterfaceBlock(ast)\n                         && !isMultipleTypeCatch(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n-                        && !ast.branchContains(TokenTypes.FINAL)\n+                        && ast.findFirstToken(TokenTypes.MODIFIERS)\n+                            .findFirstToken(TokenTypes.FINAL) == null\n                         && !isVariableInForInit(ast)\n                         && shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType) && isFirstChild(ast)) {\n                     final Optional<FinalVariableCandidate> candidate = getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n                         determineAssignmentConditions(ast, candidate.get());\n                         currentScopeAssignedVariables.peek().add(ast);\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n             case TokenTypes.LITERAL_BREAK:\n                 scopeStack.peek().containsBreak = true;\n                 break;\n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"5e0ab75777985f056715f6d9dc5e4667b1a0dfa2": {
			"type": "Ybodychange",
			"commitMessage": "Issue #4082: Take \"break\" into consideration in FinalLocalVariable\n",
			"commitDate": "2017-04-18, 12:54 PM",
			"commitName": "5e0ab75777985f056715f6d9dc5e4667b1a0dfa2",
			"commitAuthor": "Luolc",
			"commitDateOld": "2017-04-05, 5:37 AM",
			"commitNameOld": "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
			"commitAuthorOld": "Vladislav Lisetskii",
			"daysBetweenCommits": 13.3,
			"commitsBetweenForRepo": 63,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,48 +1,51 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n+                currentScopeAssignedVariables.push(new ArrayDeque<>());\n                 if (ast.getParent().getType() != TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     == ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isInAbstractOrNativeMethod(ast)\n                         && !ScopeUtils.isInInterfaceBlock(ast)\n                         && !isMultipleTypeCatch(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isVariableInForInit(ast)\n                         && shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n-\n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType) && isFirstChild(ast)) {\n                     final Optional<FinalVariableCandidate> candidate = getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n                         determineAssignmentConditions(ast, candidate.get());\n+                        currentScopeAssignedVariables.peek().add(ast);\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n-\n+            case TokenTypes.LITERAL_BREAK:\n+                scopeStack.peek().containsBreak = true;\n+                break;\n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"4d214096fcc798a2bc4e71287339e6a8e08784c4": {
			"type": "Ybodychange",
			"commitMessage": "Issue #3617: make FinalLocalVariable not check multi-catch vars\n",
			"commitDate": "2016-12-07, 1:22 PM",
			"commitName": "4d214096fcc798a2bc4e71287339e6a8e08784c4",
			"commitAuthor": "liscju",
			"commitDateOld": "2016-09-14, 1:58 PM",
			"commitNameOld": "25a37e5049b7816b34c552899841a978efc37a63",
			"commitAuthorOld": "Andrei Selkin",
			"daysBetweenCommits": 84.02,
			"commitsBetweenForRepo": 130,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,47 +1,48 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 if (ast.getParent().getType() != TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     == ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isInAbstractOrNativeMethod(ast)\n-                        && !ScopeUtils.isInInterfaceBlock(ast)) {\n+                        && !ScopeUtils.isInInterfaceBlock(ast)\n+                        && !isMultipleTypeCatch(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isVariableInForInit(ast)\n                         && shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType) && isFirstChild(ast)) {\n                     final Optional<FinalVariableCandidate> candidate = getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n                         determineAssignmentConditions(ast, candidate.get());\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"ed76401d3bd039d684d6de21c4894d3ab62a3076": {
			"type": "Ybodychange",
			"commitMessage": "Issue #3074: Fix FinalLocalVariable false positive when variable is assigned inside and outside switch-block (#3366)\n\n",
			"commitDate": "2016-07-22, 10:09 PM",
			"commitName": "ed76401d3bd039d684d6de21c4894d3ab62a3076",
			"commitAuthor": "Andrei Selkin",
			"commitDateOld": "2016-07-22, 9:49 PM",
			"commitNameOld": "2bf2138d04ebbb969c6c26d27f01ef0a572a64c8",
			"commitAuthorOld": "Andrei Selkin",
			"daysBetweenCommits": 0.01,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,55 +1,47 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 if (ast.getParent().getType() != TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     == ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isInAbstractOrNativeMethod(ast)\n                         && !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isVariableInForInit(ast)\n                         && shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType) && isFirstChild(ast)) {\n                     final Optional<FinalVariableCandidate> candidate = getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n-                        if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_IF)) {\n-                            candidate.get().assignInIfBlock = true;\n-                            if (isInSpecificCodeBlock(ast, TokenTypes.CASE_GROUP)) {\n-                                candidate.get().assignInIfBlockWhichIsInsideCaseBlock = true;\n-                            }\n-                        }\n-                        else {\n-                            candidate.get().assignOutsideConditionalBlock = true;\n-                        }\n+                        determineAssignmentConditions(ast, candidate.get());\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"bf69cf167c9432daabc7b6e4a426fff33650a057": {
			"type": "Ybodychange",
			"commitMessage": "Issue #3006: Refactoring of FinalLocalVariableCheck to increase readability\n",
			"commitDate": "2016-03-29, 3:47 PM",
			"commitName": "bf69cf167c9432daabc7b6e4a426fff33650a057",
			"commitAuthor": "Andrei Selkin",
			"commitDateOld": "2016-03-29, 3:47 PM",
			"commitNameOld": "0a1a4c6e94c9b3b73b21b323f14ae7b7337b1b44",
			"commitAuthorOld": "Andrei Selkin",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,59 +1,55 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 if (ast.getParent().getType() != TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     == ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isInAbstractOrNativeMethod(ast)\n                         && !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isVariableInForInit(ast)\n                         && shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n-                if (isAssignOperator(parentType)\n-                        && isFirstChild(ast)) {\n-                    if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_IF))\n-                    {\n-                        markFinalVariableCandidateAsAssignedInIfBlock(ast);\n-                        if (isInSpecificCodeBlock(ast, TokenTypes.CASE_GROUP)) {\n-                            markFinalVariableCandidateAsAssignedInCaseBlock(ast);\n+                if (isAssignOperator(parentType) && isFirstChild(ast)) {\n+                    final Optional<FinalVariableCandidate> candidate = getFinalCandidate(ast);\n+                    if (candidate.isPresent()) {\n+                        if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_IF)) {\n+                            candidate.get().assignInIfBlock = true;\n+                            if (isInSpecificCodeBlock(ast, TokenTypes.CASE_GROUP)) {\n+                                candidate.get().assignInIfBlockWhichIsInsideCaseBlock = true;\n+                            }\n+                        }\n+                        else {\n+                            candidate.get().assignOutsideConditionalBlock = true;\n                         }\n                     }\n-                    else if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_ELSE))\n-                    {\n-                        markFinalVariableCandidateAsAssignedInElseBlock(ast);\n-                    }\n-                    else\n-                    {\n-                        markFinalVariableCandidateAsAssignedOutsideIfOrElseBlock(ast);\n-                    }\n-                    removeVariable(ast);\n+                    removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"0a1a4c6e94c9b3b73b21b323f14ae7b7337b1b44": {
			"type": "Ybodychange",
			"commitMessage": "Issue #3006: Fix false positive when variable is assigned in if block which is inside catch block\n",
			"commitDate": "2016-03-29, 3:47 PM",
			"commitName": "0a1a4c6e94c9b3b73b21b323f14ae7b7337b1b44",
			"commitAuthor": "Andrei Selkin",
			"commitDateOld": "2016-03-29, 3:47 PM",
			"commitNameOld": "55aa50d8f09d28521f0d0004ce475fa09082faea",
			"commitAuthorOld": "Andrei Selkin",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,56 +1,59 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 if (ast.getParent().getType() != TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     == ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isInAbstractOrNativeMethod(ast)\n                         && !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isVariableInForInit(ast)\n                         && shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         && isFirstChild(ast)) {\n-                    if (isInIfBlock(ast))\n+                    if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_IF))\n                     {\n-                        markFinalVariableCandidateAsAssignInIfBlock(ast);\n+                        markFinalVariableCandidateAsAssignedInIfBlock(ast);\n+                        if (isInSpecificCodeBlock(ast, TokenTypes.CASE_GROUP)) {\n+                            markFinalVariableCandidateAsAssignedInCaseBlock(ast);\n+                        }\n                     }\n-                    else if (isInElseBlock(ast))\n+                    else if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_ELSE))\n                     {\n-                        markFinalVariableCandidateAsAssignInElseBlock(ast);\n+                        markFinalVariableCandidateAsAssignedInElseBlock(ast);\n                     }\n                     else\n                     {\n-                        markFinalVariableCandidateAsAssignOutsideIfOrElseBlock(ast);\n+                        markFinalVariableCandidateAsAssignedOutsideIfOrElseBlock(ast);\n                     }\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"55aa50d8f09d28521f0d0004ce475fa09082faea": {
			"type": "Ybodychange",
			"commitMessage": "Issue #3006: Fix false positive when variable is assigned multiple times\n",
			"commitDate": "2016-03-29, 3:47 PM",
			"commitName": "55aa50d8f09d28521f0d0004ce475fa09082faea",
			"commitAuthor": "Andrei Selkin",
			"commitDateOld": "2016-03-29, 3:47 PM",
			"commitNameOld": "11210350f58660d96012cea051f0fbc3bc462cb1",
			"commitAuthorOld": "Andrei Selkin",
			"daysBetweenCommits": 0,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,44 +1,56 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 if (ast.getParent().getType() != TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     == ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isInAbstractOrNativeMethod(ast)\n                         && !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isVariableInForInit(ast)\n                         && shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         && isFirstChild(ast)) {\n+                    if (isInIfBlock(ast))\n+                    {\n+                        markFinalVariableCandidateAsAssignInIfBlock(ast);\n+                    }\n+                    else if (isInElseBlock(ast))\n+                    {\n+                        markFinalVariableCandidateAsAssignInElseBlock(ast);\n+                    }\n+                    else\n+                    {\n+                        markFinalVariableCandidateAsAssignOutsideIfOrElseBlock(ast);\n+                    }\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"628e893f24cf41ad122c5adf656832a89168e766": {
			"type": "Ybodychange",
			"commitMessage": "Issue #2807: FinalLocalVariable doesn't report variable when condition separates 2 assignments\n",
			"commitDate": "2016-01-24, 6:35 AM",
			"commitName": "628e893f24cf41ad122c5adf656832a89168e766",
			"commitAuthor": "Bhavik Patel",
			"commitDateOld": "2016-01-04, 4:25 PM",
			"commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
			"commitAuthorOld": "Roman Ivanov",
			"daysBetweenCommits": 19.59,
			"commitsBetweenForRepo": 26,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,43 +1,44 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 if (ast.getParent().getType() != TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     == ast.getParent()) {\n+                    storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isInAbstractOrNativeMethod(ast)\n                         && !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isVariableInForInit(ast)\n                         && shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         && isFirstChild(ast)) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"9c3b17b9db6c0884d4d456b4d6219abc03a453d4": {
			"type": "Ybodychange",
			"commitMessage": "Issue #2405: FinalLocalVariable false-positive in SWITCH solved\n",
			"commitDate": "2015-12-26, 7:31 AM",
			"commitName": "9c3b17b9db6c0884d4d456b4d6219abc03a453d4",
			"commitAuthor": "Bhavik Patel",
			"commitDateOld": "2015-12-14, 5:17 PM",
			"commitNameOld": "1ef123bf60e8f4ba348f2e6399175dee62f016b2",
			"commitAuthorOld": "Andrei Selkin",
			"daysBetweenCommits": 11.59,
			"commitsBetweenForRepo": 79,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,38 +1,43 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n-            case TokenTypes.SLIST:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n-\n+            case TokenTypes.SLIST:\n+                if (ast.getParent().getType() != TokenTypes.CASE_GROUP\n+                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n+                    == ast.getParent()) {\n+                    scopeStack.push(new ScopeData());\n+                }\n+                break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isInAbstractOrNativeMethod(ast)\n                         && !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isVariableInForInit(ast)\n                         && shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         && isFirstChild(ast)) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"36b91a59d62c9505b835717f00f470c499cf9b30": {
			"type": "Ybodychange",
			"commitMessage": "Issue #1551: Fix FinalLocalVariable false-negative",
			"commitDate": "2015-11-01, 5:41 AM",
			"commitName": "36b91a59d62c9505b835717f00f470c499cf9b30",
			"commitAuthor": "Vladislav Lisetskiy",
			"commitDateOld": "2015-09-25, 5:55 AM",
			"commitNameOld": "fbd04a537a209f84407fd3695171213f4e011e33",
			"commitAuthorOld": "rnveach",
			"daysBetweenCommits": 37.03,
			"commitsBetweenForRepo": 258,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,41 +1,38 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n-            case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n-            case TokenTypes.STATIC_INIT:\n-            case TokenTypes.INSTANCE_INIT:\n-                scopeStack.push(new HashMap<String, DetailAST>());\n+                scopeStack.push(new ScopeData());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !isInAbstractOrNativeMethod(ast)\n                         && !ScopeUtils.isInInterfaceBlock(ast)) {\n-                    insertVariable(ast);\n+                    insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n+                        && !ast.branchContains(TokenTypes.FINAL)\n                         && !isVariableInForInit(ast)\n-                        && shouldCheckEnhancedForLoopVariable(ast)\n-                        && !ast.branchContains(TokenTypes.FINAL)) {\n+                        && shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n-                        && ast.getParent().getFirstChild() == ast) {\n+                        && isFirstChild(ast)) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"4d2e6647f9e8385749c382bcab5e64965a943178": {
			"type": "Ybodychange",
			"commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n>Reports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
			"commitDate": "2015-08-27, 12:53 PM",
			"commitName": "4d2e6647f9e8385749c382bcab5e64965a943178",
			"commitAuthor": "Michal Kordas",
			"commitDateOld": "2015-08-27, 5:17 AM",
			"commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
			"commitAuthorOld": "Ilja Dubinin",
			"daysBetweenCommits": 0.32,
			"commitsBetweenForRepo": 31,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,41 +1,41 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap<String, DetailAST>());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n-                if (!inLambda(ast)\n+                if (!isInLambda(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)\n-                        && !inAbstractOrNativeMethod(ast)\n-                        && !ScopeUtils.inInterfaceBlock(ast)) {\n+                        && !isInAbstractOrNativeMethod(ast)\n+                        && !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                         && !isVariableInForInit(ast)\n                         && shouldCheckEnhancedForLoopVariable(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         && ast.getParent().getFirstChild() == ast) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"b097b3f002ca40474b729c27c531787bc2e79f04": {
			"type": "Ybodychange",
			"commitMessage": "Issue #1293: Improved coverage for FinalLocalVariableCheck\n",
			"commitDate": "2015-08-02, 6:27 PM",
			"commitName": "b097b3f002ca40474b729c27c531787bc2e79f04",
			"commitAuthor": "Baratali Izmailov",
			"commitDateOld": "2015-08-01, 9:42 AM",
			"commitNameOld": "f8ba0d727928aaa1275758fa09114155faab0b9e",
			"commitAuthorOld": "Andrei Selkin",
			"daysBetweenCommits": 1.36,
			"commitsBetweenForRepo": 11,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,40 +1,41 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap<String, DetailAST>());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (!inLambda(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)\n                         && !inAbstractOrNativeMethod(ast)\n                         && !ScopeUtils.inInterfaceBlock(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n-                        && isVariableInForInit(ast)\n+                        && !isVariableInForInit(ast)\n                         && shouldCheckEnhancedForLoopVariable(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         && ast.getParent().getFirstChild() == ast) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n+                throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"c9c475a6c7a8cb728ba1c091b386db46f11a781f": {
			"type": "Ybodychange",
			"commitMessage": "Refactoring of FinalLocalVariableCheck to avoid 'fall through' violation, issue #1395.\n",
			"commitDate": "2015-07-20, 10:02 AM",
			"commitName": "c9c475a6c7a8cb728ba1c091b386db46f11a781f",
			"commitAuthor": "Andrei Selkin",
			"commitDateOld": "2015-07-17, 9:51 PM",
			"commitNameOld": "4c078ba710068498ca513ce115993e30dab4562a",
			"commitAuthorOld": "Michal Kordas",
			"daysBetweenCommits": 2.51,
			"commitsBetweenForRepo": 30,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,38 +1,40 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap<String, DetailAST>());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n-                if (ScopeUtils.inInterfaceBlock(ast)\n-                    || inAbstractOrNativeMethod(ast)\n-                    || inLambda(ast)) {\n-                    break;\n+                if (!inLambda(ast)\n+                        && !ast.branchContains(TokenTypes.FINAL)\n+                        && !inAbstractOrNativeMethod(ast)\n+                        && !ScopeUtils.inInterfaceBlock(ast)) {\n+                    insertVariable(ast);\n                 }\n+                break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n-                        && shouldCheckEnhancedForLoopVariable(ast)\n                         && isVariableInForInit(ast)\n+                        && shouldCheckEnhancedForLoopVariable(ast)\n                         && !ast.branchContains(TokenTypes.FINAL)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         && ast.getParent().getFirstChild() == ast) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"11ff590ba5cc717cbe00d88eb0b578e805572bc8": {
			"type": "Ybodychange",
			"commitMessage": "Solution to wrong variable reported because of name shadowing in FinalLocalVariableCheck. solves #1142\n",
			"commitDate": "2015-06-18, 2:42 PM",
			"commitName": "11ff590ba5cc717cbe00d88eb0b578e805572bc8",
			"commitAuthor": "Bhavik Patel",
			"commitDateOld": "2015-06-13, 11:01 PM",
			"commitNameOld": "3831aa913e25d2bd424ccbeb239bd06439867a58",
			"commitAuthorOld": "Roman Ivanov",
			"daysBetweenCommits": 4.65,
			"commitsBetweenForRepo": 42,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,37 +1,38 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap<String, DetailAST>());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast)\n                     || inLambda(ast)) {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n-                    && shouldCheckEnhancedForLoopVariable(ast)\n-                    && isVariableInForInit(ast)) {\n+                        && shouldCheckEnhancedForLoopVariable(ast)\n+                        && isVariableInForInit(ast)\n+                        && !ast.branchContains(TokenTypes.FINAL)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         && ast.getParent().getFirstChild() == ast) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"3831aa913e25d2bd424ccbeb239bd06439867a58": {
			"type": "Ybodychange",
			"commitMessage": "FinalLocalVariableCheck updated to follow Cyclomatic Complexity rule. #954\n",
			"commitDate": "2015-06-13, 11:01 PM",
			"commitName": "3831aa913e25d2bd424ccbeb239bd06439867a58",
			"commitAuthor": "Roman Ivanov",
			"commitDateOld": "2015-05-17, 4:47 AM",
			"commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
			"commitAuthorOld": "Michal Kordas",
			"daysBetweenCommits": 27.76,
			"commitsBetweenForRepo": 140,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,52 +1,37 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap<String, DetailAST>());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast)\n                     || inLambda(ast)) {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                     && shouldCheckEnhancedForLoopVariable(ast)\n                     && isVariableInForInit(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n-                if ((TokenTypes.POST_DEC == parentType\n-                        || TokenTypes.DEC == parentType\n-                        || TokenTypes.POST_INC == parentType\n-                        || TokenTypes.INC == parentType\n-                        || TokenTypes.ASSIGN == parentType\n-                        || TokenTypes.PLUS_ASSIGN == parentType\n-                        || TokenTypes.MINUS_ASSIGN == parentType\n-                        || TokenTypes.DIV_ASSIGN == parentType\n-                        || TokenTypes.STAR_ASSIGN == parentType\n-                        || TokenTypes.MOD_ASSIGN == parentType\n-                        || TokenTypes.SR_ASSIGN == parentType\n-                        || TokenTypes.BSR_ASSIGN == parentType\n-                        || TokenTypes.SL_ASSIGN == parentType\n-                        || TokenTypes.BXOR_ASSIGN == parentType\n-                        || TokenTypes.BOR_ASSIGN == parentType\n-                        || TokenTypes.BAND_ASSIGN == parentType)\n+                if (isAssignOperator(parentType)\n                         && ast.getParent().getFirstChild() == ast) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"dd6b080a16e0933b3d19305f84ba01c8893839f3": {
			"type": "Ybodychange",
			"commitMessage": "all TODO/FIXME were removed , some of them converted to issues\n",
			"commitDate": "2015-04-23, 10:38 AM",
			"commitName": "dd6b080a16e0933b3d19305f84ba01c8893839f3",
			"commitAuthor": "Roman Ivanov",
			"commitDateOld": "2015-03-15, 8:45 PM",
			"commitNameOld": "5512e6fdba69ea486a21e299f7b134f4d9d60431",
			"commitAuthorOld": "alexkravin",
			"daysBetweenCommits": 38.58,
			"commitsBetweenForRepo": 154,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,58 +1,56 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap<String, DetailAST>());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast)\n                     || inLambda(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                     && shouldCheckEnhancedForLoopVariable(ast)\n                     && isVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n-                // TODO: is there better way to check is ast\n-                // in left part of assignment?\n                 if ((TokenTypes.POST_DEC == parentType\n                         || TokenTypes.DEC == parentType\n                         || TokenTypes.POST_INC == parentType\n                         || TokenTypes.INC == parentType\n                         || TokenTypes.ASSIGN == parentType\n                         || TokenTypes.PLUS_ASSIGN == parentType\n                         || TokenTypes.MINUS_ASSIGN == parentType\n                         || TokenTypes.DIV_ASSIGN == parentType\n                         || TokenTypes.STAR_ASSIGN == parentType\n                         || TokenTypes.MOD_ASSIGN == parentType\n                         || TokenTypes.SR_ASSIGN == parentType\n                         || TokenTypes.BSR_ASSIGN == parentType\n                         || TokenTypes.SL_ASSIGN == parentType\n                         || TokenTypes.BXOR_ASSIGN == parentType\n                         || TokenTypes.BOR_ASSIGN == parentType\n                         || TokenTypes.BAND_ASSIGN == parentType)\n                         && ast.getParent().getFirstChild() == ast)\n                 {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"5512e6fdba69ea486a21e299f7b134f4d9d60431": {
			"type": "Ybodychange",
			"commitMessage": "Final Local Variable Name Check, fixed bug with lambda's params, issue #747\n",
			"commitDate": "2015-03-15, 8:45 PM",
			"commitName": "5512e6fdba69ea486a21e299f7b134f4d9d60431",
			"commitAuthor": "alexkravin",
			"commitDateOld": "2015-03-14, 2:56 PM",
			"commitNameOld": "98a9266a8091c1c6b26d41b4e17e1a32458f1bac",
			"commitAuthorOld": "Michal Kordas",
			"daysBetweenCommits": 1.24,
			"commitsBetweenForRepo": 26,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,57 +1,58 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap<String, DetailAST>());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n-                    || inAbstractOrNativeMethod(ast))\n+                    || inAbstractOrNativeMethod(ast)\n+                    || inLambda(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                     && shouldCheckEnhancedForLoopVariable(ast)\n                     && isVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 // TODO: is there better way to check is ast\n                 // in left part of assignment?\n                 if ((TokenTypes.POST_DEC == parentType\n                         || TokenTypes.DEC == parentType\n                         || TokenTypes.POST_INC == parentType\n                         || TokenTypes.INC == parentType\n                         || TokenTypes.ASSIGN == parentType\n                         || TokenTypes.PLUS_ASSIGN == parentType\n                         || TokenTypes.MINUS_ASSIGN == parentType\n                         || TokenTypes.DIV_ASSIGN == parentType\n                         || TokenTypes.STAR_ASSIGN == parentType\n                         || TokenTypes.MOD_ASSIGN == parentType\n                         || TokenTypes.SR_ASSIGN == parentType\n                         || TokenTypes.BSR_ASSIGN == parentType\n                         || TokenTypes.SL_ASSIGN == parentType\n                         || TokenTypes.BXOR_ASSIGN == parentType\n                         || TokenTypes.BOR_ASSIGN == parentType\n                         || TokenTypes.BAND_ASSIGN == parentType)\n                         && ast.getParent().getFirstChild() == ast)\n                 {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"98a9266a8091c1c6b26d41b4e17e1a32458f1bac": {
			"type": "Ybodychange",
			"commitMessage": "Combine nested if statements, issue #744\n\nAll violations of PMD rule [CollapsibleIfStatements](http://pmd.sourceforge.net/pmd-5.2.3/pmd-java/rules/java/basic.html#CollapsibleIfStatements) are fixed.\n",
			"commitDate": "2015-03-14, 2:56 PM",
			"commitName": "98a9266a8091c1c6b26d41b4e17e1a32458f1bac",
			"commitAuthor": "Michal Kordas",
			"commitDateOld": "2015-03-12, 1:07 PM",
			"commitNameOld": "fe6158d4106f713438e769d0ab77289910cfe5bd",
			"commitAuthorOld": "alexkravin",
			"daysBetweenCommits": 2.08,
			"commitsBetweenForRepo": 8,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,58 +1,57 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap<String, DetailAST>());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                     && shouldCheckEnhancedForLoopVariable(ast)\n                     && isVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n-                if (TokenTypes.POST_DEC        == parentType\n-                    || TokenTypes.DEC          == parentType\n-                    || TokenTypes.POST_INC     == parentType\n-                    || TokenTypes.INC          == parentType\n-                    || TokenTypes.ASSIGN       == parentType\n-                    || TokenTypes.PLUS_ASSIGN  == parentType\n-                    || TokenTypes.MINUS_ASSIGN == parentType\n-                    || TokenTypes.DIV_ASSIGN   == parentType\n-                    || TokenTypes.STAR_ASSIGN  == parentType\n-                    || TokenTypes.MOD_ASSIGN   == parentType\n-                    || TokenTypes.SR_ASSIGN    == parentType\n-                    || TokenTypes.BSR_ASSIGN   == parentType\n-                    || TokenTypes.SL_ASSIGN    == parentType\n-                    || TokenTypes.BXOR_ASSIGN  == parentType\n-                    || TokenTypes.BOR_ASSIGN   == parentType\n-                    || TokenTypes.BAND_ASSIGN  == parentType)\n+                // TODO: is there better way to check is ast\n+                // in left part of assignment?\n+                if ((TokenTypes.POST_DEC == parentType\n+                        || TokenTypes.DEC == parentType\n+                        || TokenTypes.POST_INC == parentType\n+                        || TokenTypes.INC == parentType\n+                        || TokenTypes.ASSIGN == parentType\n+                        || TokenTypes.PLUS_ASSIGN == parentType\n+                        || TokenTypes.MINUS_ASSIGN == parentType\n+                        || TokenTypes.DIV_ASSIGN == parentType\n+                        || TokenTypes.STAR_ASSIGN == parentType\n+                        || TokenTypes.MOD_ASSIGN == parentType\n+                        || TokenTypes.SR_ASSIGN == parentType\n+                        || TokenTypes.BSR_ASSIGN == parentType\n+                        || TokenTypes.SL_ASSIGN == parentType\n+                        || TokenTypes.BXOR_ASSIGN == parentType\n+                        || TokenTypes.BOR_ASSIGN == parentType\n+                        || TokenTypes.BAND_ASSIGN == parentType)\n+                        && ast.getParent().getFirstChild() == ast)\n                 {\n-                    // TODO: is there better way to check is ast\n-                    // in left part of assignment?\n-                    if (ast.getParent().getFirstChild() == ast) {\n-                        removeVariable(ast);\n-                    }\n+                    removeVariable(ast);\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"1bd30555eac039d0486dffb3fc43b7a34117909b": {
			"type": "Ybodychange",
			"commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
			"commitDate": "2015-03-10, 2:36 PM",
			"commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
			"commitAuthor": "Michal Kordas",
			"commitDateOld": "2015-03-05, 9:39 PM",
			"commitNameOld": "93a33df5bda022b29fa6f4d6f3ad2d8b5f0a2b6f",
			"commitAuthorOld": "Bhavik Patel",
			"daysBetweenCommits": 4.66,
			"commitsBetweenForRepo": 17,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,58 +1,58 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap<String, DetailAST>());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n-                if ((ast.getParent().getType() != TokenTypes.OBJBLOCK)\n+                if (ast.getParent().getType() != TokenTypes.OBJBLOCK\n                     && shouldCheckEnhancedForLoopVariable(ast)\n                     && isVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n-                if ((TokenTypes.POST_DEC        == parentType)\n-                    || (TokenTypes.DEC          == parentType)\n-                    || (TokenTypes.POST_INC     == parentType)\n-                    || (TokenTypes.INC          == parentType)\n-                    || (TokenTypes.ASSIGN       == parentType)\n-                    || (TokenTypes.PLUS_ASSIGN  == parentType)\n-                    || (TokenTypes.MINUS_ASSIGN == parentType)\n-                    || (TokenTypes.DIV_ASSIGN   == parentType)\n-                    || (TokenTypes.STAR_ASSIGN  == parentType)\n-                    || (TokenTypes.MOD_ASSIGN   == parentType)\n-                    || (TokenTypes.SR_ASSIGN    == parentType)\n-                    || (TokenTypes.BSR_ASSIGN   == parentType)\n-                    || (TokenTypes.SL_ASSIGN    == parentType)\n-                    || (TokenTypes.BXOR_ASSIGN  == parentType)\n-                    || (TokenTypes.BOR_ASSIGN   == parentType)\n-                    || (TokenTypes.BAND_ASSIGN  == parentType))\n+                if (TokenTypes.POST_DEC        == parentType\n+                    || TokenTypes.DEC          == parentType\n+                    || TokenTypes.POST_INC     == parentType\n+                    || TokenTypes.INC          == parentType\n+                    || TokenTypes.ASSIGN       == parentType\n+                    || TokenTypes.PLUS_ASSIGN  == parentType\n+                    || TokenTypes.MINUS_ASSIGN == parentType\n+                    || TokenTypes.DIV_ASSIGN   == parentType\n+                    || TokenTypes.STAR_ASSIGN  == parentType\n+                    || TokenTypes.MOD_ASSIGN   == parentType\n+                    || TokenTypes.SR_ASSIGN    == parentType\n+                    || TokenTypes.BSR_ASSIGN   == parentType\n+                    || TokenTypes.SL_ASSIGN    == parentType\n+                    || TokenTypes.BXOR_ASSIGN  == parentType\n+                    || TokenTypes.BOR_ASSIGN   == parentType\n+                    || TokenTypes.BAND_ASSIGN  == parentType)\n                 {\n                     // TODO: is there better way to check is ast\n                     // in left part of assignment?\n                     if (ast.getParent().getFirstChild() == ast) {\n                         removeVariable(ast);\n                     }\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"93a33df5bda022b29fa6f4d6f3ad2d8b5f0a2b6f": {
			"type": "Ybodychange",
			"commitMessage": "fix for FinalLocalVariableCheck - FOR_EACH_CLAUSE variable is not reported. issue #20\n",
			"commitDate": "2015-03-05, 9:39 PM",
			"commitName": "93a33df5bda022b29fa6f4d6f3ad2d8b5f0a2b6f",
			"commitAuthor": "Bhavik Patel",
			"commitDateOld": "2015-02-20, 5:02 AM",
			"commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
			"commitAuthorOld": "alexkravin",
			"daysBetweenCommits": 13.69,
			"commitsBetweenForRepo": 74,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,58 +1,58 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap<String, DetailAST>());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if ((ast.getParent().getType() != TokenTypes.OBJBLOCK)\n-                    && (ast.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE)\n+                    && shouldCheckEnhancedForLoopVariable(ast)\n                     && isVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if ((TokenTypes.POST_DEC        == parentType)\n                     || (TokenTypes.DEC          == parentType)\n                     || (TokenTypes.POST_INC     == parentType)\n                     || (TokenTypes.INC          == parentType)\n                     || (TokenTypes.ASSIGN       == parentType)\n                     || (TokenTypes.PLUS_ASSIGN  == parentType)\n                     || (TokenTypes.MINUS_ASSIGN == parentType)\n                     || (TokenTypes.DIV_ASSIGN   == parentType)\n                     || (TokenTypes.STAR_ASSIGN  == parentType)\n                     || (TokenTypes.MOD_ASSIGN   == parentType)\n                     || (TokenTypes.SR_ASSIGN    == parentType)\n                     || (TokenTypes.BSR_ASSIGN   == parentType)\n                     || (TokenTypes.SL_ASSIGN    == parentType)\n                     || (TokenTypes.BXOR_ASSIGN  == parentType)\n                     || (TokenTypes.BOR_ASSIGN   == parentType)\n                     || (TokenTypes.BAND_ASSIGN  == parentType))\n                 {\n                     // TODO: is there better way to check is ast\n                     // in left part of assignment?\n                     if (ast.getParent().getFirstChild() == ast) {\n                         removeVariable(ast);\n                     }\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"a6b47597067d3456c894435a8fdc52b1c7060bed": {
			"type": "Ybodychange",
			"commitMessage": "Final Local Variable Check, fixed false-positive, issue #258\n",
			"commitDate": "2015-02-18, 10:07 PM",
			"commitName": "a6b47597067d3456c894435a8fdc52b1c7060bed",
			"commitAuthor": "alexkravin",
			"commitDateOld": "2015-02-18, 1:14 PM",
			"commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
			"commitAuthorOld": "Roman Ivanov",
			"daysBetweenCommits": 0.37,
			"commitsBetweenForRepo": 2,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,58 +1,58 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap<String, DetailAST>());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if ((ast.getParent().getType() != TokenTypes.OBJBLOCK)\n                     && (ast.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE)\n-                    && isFirstVariableInForInit(ast))\n+                    && isVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if ((TokenTypes.POST_DEC        == parentType)\n                     || (TokenTypes.DEC          == parentType)\n                     || (TokenTypes.POST_INC     == parentType)\n                     || (TokenTypes.INC          == parentType)\n                     || (TokenTypes.ASSIGN       == parentType)\n                     || (TokenTypes.PLUS_ASSIGN  == parentType)\n                     || (TokenTypes.MINUS_ASSIGN == parentType)\n                     || (TokenTypes.DIV_ASSIGN   == parentType)\n                     || (TokenTypes.STAR_ASSIGN  == parentType)\n                     || (TokenTypes.MOD_ASSIGN   == parentType)\n                     || (TokenTypes.SR_ASSIGN    == parentType)\n                     || (TokenTypes.BSR_ASSIGN   == parentType)\n                     || (TokenTypes.SL_ASSIGN    == parentType)\n                     || (TokenTypes.BXOR_ASSIGN  == parentType)\n                     || (TokenTypes.BOR_ASSIGN   == parentType)\n                     || (TokenTypes.BAND_ASSIGN  == parentType))\n                 {\n                     // TODO: is there better way to check is ast\n                     // in left part of assignment?\n                     if (ast.getParent().getFirstChild() == ast) {\n                         removeVariable(ast);\n                     }\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"c6019cd352aff6919a61b40fa8efce3567141206": {
			"type": "Ybodychange",
			"commitMessage": "Final Local Variable Check, fixed false-positive, issue #258\n",
			"commitDate": "2015-01-26, 6:43 PM",
			"commitName": "c6019cd352aff6919a61b40fa8efce3567141206",
			"commitAuthor": "alexkravin",
			"commitDateOld": "2015-01-22, 4:29 AM",
			"commitNameOld": "b2eeea93c2b1c9a148a8ecf615637aeea4630638",
			"commitAuthorOld": "alexkravin",
			"daysBetweenCommits": 4.59,
			"commitsBetweenForRepo": 9,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,57 +1,58 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap<String, DetailAST>());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if ((ast.getParent().getType() != TokenTypes.OBJBLOCK)\n-                    && (ast.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE))\n+                    && (ast.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE)\n+                    && isFirstVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType = ast.getParent().getType();\n                 if ((TokenTypes.POST_DEC        == parentType)\n                     || (TokenTypes.DEC          == parentType)\n                     || (TokenTypes.POST_INC     == parentType)\n                     || (TokenTypes.INC          == parentType)\n                     || (TokenTypes.ASSIGN       == parentType)\n                     || (TokenTypes.PLUS_ASSIGN  == parentType)\n                     || (TokenTypes.MINUS_ASSIGN == parentType)\n                     || (TokenTypes.DIV_ASSIGN   == parentType)\n                     || (TokenTypes.STAR_ASSIGN  == parentType)\n                     || (TokenTypes.MOD_ASSIGN   == parentType)\n                     || (TokenTypes.SR_ASSIGN    == parentType)\n                     || (TokenTypes.BSR_ASSIGN   == parentType)\n                     || (TokenTypes.SL_ASSIGN    == parentType)\n                     || (TokenTypes.BXOR_ASSIGN  == parentType)\n                     || (TokenTypes.BOR_ASSIGN   == parentType)\n                     || (TokenTypes.BAND_ASSIGN  == parentType))\n                 {\n                     // TODO: is there better way to check is ast\n                     // in left part of assignment?\n                     if (ast.getParent().getFirstChild() == ast) {\n                         removeVariable(ast);\n                     }\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
			"type": "Ymultichange(Yparameterchange,Ybodychange)",
			"commitMessage": "Prefixes, coding, #512\n",
			"commitDate": "2015-01-19, 6:20 AM",
			"commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
			"commitAuthor": "alexkravin",
			"subchanges": [
				{
					"type": "Yparameterchange",
					"commitMessage": "Prefixes, coding, #512\n",
					"commitDate": "2015-01-19, 6:20 AM",
					"commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
					"commitAuthor": "alexkravin",
					"commitDateOld": "2014-12-15, 10:09 PM",
					"commitNameOld": "deb4d7a38805032ea8c9e2476eff5e00e38f1015",
					"commitAuthorOld": "alexkravin",
					"daysBetweenCommits": 34.34,
					"commitsBetweenForRepo": 70,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,57 +1,57 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n-            mScopeStack.push(new HashMap<String, DetailAST>());\n+            scopeStack.push(new HashMap<String, DetailAST>());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n-            if (ScopeUtils.inInterfaceBlock(aAST)\n-                || inAbstractOrNativeMethod(aAST))\n+            if (ScopeUtils.inInterfaceBlock(ast)\n+                || inAbstractOrNativeMethod(ast))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n-            if ((aAST.getParent().getType() != TokenTypes.OBJBLOCK)\n-                && (aAST.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE))\n+            if ((ast.getParent().getType() != TokenTypes.OBJBLOCK)\n+                && (ast.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE))\n             {\n-                insertVariable(aAST);\n+                insertVariable(ast);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n-            final int parentType = aAST.getParent().getType();\n+            final int parentType = ast.getParent().getType();\n             if ((TokenTypes.POST_DEC        == parentType)\n                 || (TokenTypes.DEC          == parentType)\n                 || (TokenTypes.POST_INC     == parentType)\n                 || (TokenTypes.INC          == parentType)\n                 || (TokenTypes.ASSIGN       == parentType)\n                 || (TokenTypes.PLUS_ASSIGN  == parentType)\n                 || (TokenTypes.MINUS_ASSIGN == parentType)\n                 || (TokenTypes.DIV_ASSIGN   == parentType)\n                 || (TokenTypes.STAR_ASSIGN  == parentType)\n                 || (TokenTypes.MOD_ASSIGN   == parentType)\n                 || (TokenTypes.SR_ASSIGN    == parentType)\n                 || (TokenTypes.BSR_ASSIGN   == parentType)\n                 || (TokenTypes.SL_ASSIGN    == parentType)\n                 || (TokenTypes.BXOR_ASSIGN  == parentType)\n                 || (TokenTypes.BOR_ASSIGN   == parentType)\n                 || (TokenTypes.BAND_ASSIGN  == parentType))\n             {\n-                // TODO: is there better way to check is aAST\n+                // TODO: is there better way to check is ast\n                 // in left part of assignment?\n-                if (aAST.getParent().getFirstChild() == aAST) {\n-                    removeVariable(aAST);\n+                if (ast.getParent().getFirstChild() == ast) {\n+                    removeVariable(ast);\n                 }\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
					"extendedDetails": {
						"oldValue": "[aAST-DetailAST]",
						"newValue": "[ast-DetailAST]"
					}
				},
				{
					"type": "Ybodychange",
					"commitMessage": "Prefixes, coding, #512\n",
					"commitDate": "2015-01-19, 6:20 AM",
					"commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
					"commitAuthor": "alexkravin",
					"commitDateOld": "2014-12-15, 10:09 PM",
					"commitNameOld": "deb4d7a38805032ea8c9e2476eff5e00e38f1015",
					"commitAuthorOld": "alexkravin",
					"daysBetweenCommits": 34.34,
					"commitsBetweenForRepo": 70,
					"commitsBetweenForFile": 1,
					"diff": "@@ -1,57 +1,57 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n-            mScopeStack.push(new HashMap<String, DetailAST>());\n+            scopeStack.push(new HashMap<String, DetailAST>());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n-            if (ScopeUtils.inInterfaceBlock(aAST)\n-                || inAbstractOrNativeMethod(aAST))\n+            if (ScopeUtils.inInterfaceBlock(ast)\n+                || inAbstractOrNativeMethod(ast))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n-            if ((aAST.getParent().getType() != TokenTypes.OBJBLOCK)\n-                && (aAST.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE))\n+            if ((ast.getParent().getType() != TokenTypes.OBJBLOCK)\n+                && (ast.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE))\n             {\n-                insertVariable(aAST);\n+                insertVariable(ast);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n-            final int parentType = aAST.getParent().getType();\n+            final int parentType = ast.getParent().getType();\n             if ((TokenTypes.POST_DEC        == parentType)\n                 || (TokenTypes.DEC          == parentType)\n                 || (TokenTypes.POST_INC     == parentType)\n                 || (TokenTypes.INC          == parentType)\n                 || (TokenTypes.ASSIGN       == parentType)\n                 || (TokenTypes.PLUS_ASSIGN  == parentType)\n                 || (TokenTypes.MINUS_ASSIGN == parentType)\n                 || (TokenTypes.DIV_ASSIGN   == parentType)\n                 || (TokenTypes.STAR_ASSIGN  == parentType)\n                 || (TokenTypes.MOD_ASSIGN   == parentType)\n                 || (TokenTypes.SR_ASSIGN    == parentType)\n                 || (TokenTypes.BSR_ASSIGN   == parentType)\n                 || (TokenTypes.SL_ASSIGN    == parentType)\n                 || (TokenTypes.BXOR_ASSIGN  == parentType)\n                 || (TokenTypes.BOR_ASSIGN   == parentType)\n                 || (TokenTypes.BAND_ASSIGN  == parentType))\n             {\n-                // TODO: is there better way to check is aAST\n+                // TODO: is there better way to check is ast\n                 // in left part of assignment?\n-                if (aAST.getParent().getFirstChild() == aAST) {\n-                    removeVariable(aAST);\n+                if (ast.getParent().getFirstChild() == ast) {\n+                    removeVariable(ast);\n                 }\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
					"extendedDetails": {}
				}
			]
		},
		"deb4d7a38805032ea8c9e2476eff5e00e38f1015": {
			"type": "Ybodychange",
			"commitMessage": "Final Local Variable Check, fixed false-positive - native method's param should be declared final, issue #158\n",
			"commitDate": "2014-12-15, 10:09 PM",
			"commitName": "deb4d7a38805032ea8c9e2476eff5e00e38f1015",
			"commitAuthor": "alexkravin",
			"commitDateOld": "2014-07-08, 6:17 PM",
			"commitNameOld": "8c1b62313ffba68c246e61820a904edbf3c61335",
			"commitAuthorOld": "Maroontress Fast Software",
			"daysBetweenCommits": 160.2,
			"commitsBetweenForRepo": 344,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,57 +1,57 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch (aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n             mScopeStack.push(new HashMap<String, DetailAST>());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n             if (ScopeUtils.inInterfaceBlock(aAST)\n-                || inAbstractMethod(aAST))\n+                || inAbstractOrNativeMethod(aAST))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n             if ((aAST.getParent().getType() != TokenTypes.OBJBLOCK)\n                 && (aAST.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE))\n             {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType = aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        == parentType)\n                 || (TokenTypes.DEC          == parentType)\n                 || (TokenTypes.POST_INC     == parentType)\n                 || (TokenTypes.INC          == parentType)\n                 || (TokenTypes.ASSIGN       == parentType)\n                 || (TokenTypes.PLUS_ASSIGN  == parentType)\n                 || (TokenTypes.MINUS_ASSIGN == parentType)\n                 || (TokenTypes.DIV_ASSIGN   == parentType)\n                 || (TokenTypes.STAR_ASSIGN  == parentType)\n                 || (TokenTypes.MOD_ASSIGN   == parentType)\n                 || (TokenTypes.SR_ASSIGN    == parentType)\n                 || (TokenTypes.BSR_ASSIGN   == parentType)\n                 || (TokenTypes.SL_ASSIGN    == parentType)\n                 || (TokenTypes.BXOR_ASSIGN  == parentType)\n                 || (TokenTypes.BOR_ASSIGN   == parentType)\n                 || (TokenTypes.BAND_ASSIGN  == parentType))\n             {\n                 // TODO: is there better way to check is aAST\n                 // in left part of assignment?\n                 if (aAST.getParent().getFirstChild() == aAST) {\n                     removeVariable(aAST);\n                 }\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"f1efb27670a93690577f1bae17fc9dcbd88a795d": {
			"type": "Yfilerename",
			"commitMessage": "moving to standard directory layout\n",
			"commitDate": "2014-03-04, 9:18 AM",
			"commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
			"commitAuthor": "Ivan Sopov",
			"commitDateOld": "2014-02-26, 10:35 PM",
			"commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
			"commitAuthorOld": "Andrew Gaul",
			"daysBetweenCommits": 5.45,
			"commitsBetweenForRepo": 1,
			"commitsBetweenForFile": 1,
			"diff": "",
			"extendedDetails": {
				"oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
				"newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java"
			}
		},
		"08638b5f739d9929698860048c052da2d5f80209": {
			"type": "Ybodychange",
			"commitMessage": "Start of adding generics.\n",
			"commitDate": "2007-12-14, 10:36 PM",
			"commitName": "08638b5f739d9929698860048c052da2d5f80209",
			"commitAuthor": "Oliver Burn",
			"commitDateOld": "2007-01-27, 6:51 AM",
			"commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
			"commitAuthorOld": "Lars Kühne",
			"daysBetweenCommits": 321.66,
			"commitsBetweenForRepo": 32,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,57 +1,57 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch(aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n-            mScopeStack.push(new HashMap());\n+            mScopeStack.push(new HashMap<String, DetailAST>());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n             if (ScopeUtils.inInterfaceBlock(aAST)\n                 || inAbstractMethod(aAST))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n             if ((aAST.getParent().getType() != TokenTypes.OBJBLOCK)\n                 && (aAST.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE))\n             {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType = aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        == parentType)\n                 || (TokenTypes.DEC          == parentType)\n                 || (TokenTypes.POST_INC     == parentType)\n                 || (TokenTypes.INC          == parentType)\n                 || (TokenTypes.ASSIGN       == parentType)\n                 || (TokenTypes.PLUS_ASSIGN  == parentType)\n                 || (TokenTypes.MINUS_ASSIGN == parentType)\n                 || (TokenTypes.DIV_ASSIGN   == parentType)\n                 || (TokenTypes.STAR_ASSIGN  == parentType)\n                 || (TokenTypes.MOD_ASSIGN   == parentType)\n                 || (TokenTypes.SR_ASSIGN    == parentType)\n                 || (TokenTypes.BSR_ASSIGN   == parentType)\n                 || (TokenTypes.SL_ASSIGN    == parentType)\n                 || (TokenTypes.BXOR_ASSIGN  == parentType)\n                 || (TokenTypes.BOR_ASSIGN   == parentType)\n                 || (TokenTypes.BAND_ASSIGN  == parentType))\n             {\n                 // TODO: is there better way to check is aAST\n                 // in left part of assignment?\n                 if (aAST.getParent().getFirstChild() == aAST) {\n                     removeVariable(aAST);\n                 }\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"c2d3932843e70e4bb5df7161800aca248f9af778": {
			"type": "Ybodychange",
			"commitMessage": "Clean up the use of ()'s\n",
			"commitDate": "2006-07-06, 8:26 PM",
			"commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
			"commitAuthor": "Oliver Burn",
			"commitDateOld": "2005-10-31, 11:23 AM",
			"commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
			"commitAuthorOld": "Oleg Sukhodolsky",
			"daysBetweenCommits": 248.34,
			"commitsBetweenForRepo": 40,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,57 +1,57 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch(aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n             mScopeStack.push(new HashMap());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n             if (ScopeUtils.inInterfaceBlock(aAST)\n                 || inAbstractMethod(aAST))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n-            if (aAST.getParent().getType() != TokenTypes.OBJBLOCK\n-                && aAST.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE)\n+            if ((aAST.getParent().getType() != TokenTypes.OBJBLOCK)\n+                && (aAST.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE))\n             {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType = aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        == parentType)\n                 || (TokenTypes.DEC          == parentType)\n                 || (TokenTypes.POST_INC     == parentType)\n                 || (TokenTypes.INC          == parentType)\n                 || (TokenTypes.ASSIGN       == parentType)\n                 || (TokenTypes.PLUS_ASSIGN  == parentType)\n                 || (TokenTypes.MINUS_ASSIGN == parentType)\n                 || (TokenTypes.DIV_ASSIGN   == parentType)\n                 || (TokenTypes.STAR_ASSIGN  == parentType)\n                 || (TokenTypes.MOD_ASSIGN   == parentType)\n                 || (TokenTypes.SR_ASSIGN    == parentType)\n                 || (TokenTypes.BSR_ASSIGN   == parentType)\n                 || (TokenTypes.SL_ASSIGN    == parentType)\n                 || (TokenTypes.BXOR_ASSIGN  == parentType)\n                 || (TokenTypes.BOR_ASSIGN   == parentType)\n                 || (TokenTypes.BAND_ASSIGN  == parentType))\n             {\n                 // TODO: is there better way to check is aAST\n                 // in left part of assignment?\n                 if (aAST.getParent().getFirstChild() == aAST) {\n                     removeVariable(aAST);\n                 }\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"43fe1ad269809f293b375dc4d0a4313798bf2124": {
			"type": "Ybodychange",
			"commitMessage": "FinalLocalVariable should check if variable is used in left side of assignment (bug 1241722)\n",
			"commitDate": "2005-07-21, 6:25 AM",
			"commitName": "43fe1ad269809f293b375dc4d0a4313798bf2124",
			"commitAuthor": "Oleg Sukhodolsky",
			"commitDateOld": "2005-01-09, 2:50 AM",
			"commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
			"commitAuthorOld": "Lars Kühne",
			"daysBetweenCommits": 193.11,
			"commitsBetweenForRepo": 174,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,53 +1,57 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch(aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n             mScopeStack.push(new HashMap());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n             if (ScopeUtils.inInterfaceBlock(aAST)\n                 || inAbstractMethod(aAST))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n             if (aAST.getParent().getType() != TokenTypes.OBJBLOCK\n                 && aAST.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE)\n             {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType = aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        == parentType)\n                 || (TokenTypes.DEC          == parentType)\n                 || (TokenTypes.POST_INC     == parentType)\n                 || (TokenTypes.INC          == parentType)\n                 || (TokenTypes.ASSIGN       == parentType)\n                 || (TokenTypes.PLUS_ASSIGN  == parentType)\n                 || (TokenTypes.MINUS_ASSIGN == parentType)\n                 || (TokenTypes.DIV_ASSIGN   == parentType)\n                 || (TokenTypes.STAR_ASSIGN  == parentType)\n                 || (TokenTypes.MOD_ASSIGN   == parentType)\n                 || (TokenTypes.SR_ASSIGN    == parentType)\n                 || (TokenTypes.BSR_ASSIGN   == parentType)\n                 || (TokenTypes.SL_ASSIGN    == parentType)\n                 || (TokenTypes.BXOR_ASSIGN  == parentType)\n                 || (TokenTypes.BOR_ASSIGN   == parentType)\n                 || (TokenTypes.BAND_ASSIGN  == parentType))\n             {\n-                removeVariable(aAST);\n+                // TODO: is there better way to check is aAST\n+                // in left part of assignment?\n+                if (aAST.getParent().getFirstChild() == aAST) {\n+                    removeVariable(aAST);\n+                }\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"9bcd88cf20db457966d0a83d2728a7c51a7d8623": {
			"type": "Ybodychange",
			"commitMessage": "Fixed bug where local variables to for-each clauses where flagged as requiring the final modifier.\n",
			"commitDate": "2004-12-19, 3:10 PM",
			"commitName": "9bcd88cf20db457966d0a83d2728a7c51a7d8623",
			"commitAuthor": "Michael Studman",
			"commitDateOld": "2004-08-04, 4:17 AM",
			"commitNameOld": "2af259b791c8655a2b9862099763f860d3d7ae42",
			"commitAuthorOld": "Rick Giles",
			"daysBetweenCommits": 137.5,
			"commitsBetweenForRepo": 49,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,51 +1,53 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch(aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n             mScopeStack.push(new HashMap());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n             if (ScopeUtils.inInterfaceBlock(aAST)\n                 || inAbstractMethod(aAST))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n-            if (aAST.getParent().getType() != TokenTypes.OBJBLOCK) {\n+            if (aAST.getParent().getType() != TokenTypes.OBJBLOCK\n+                && aAST.getParent().getType() != TokenTypes.FOR_EACH_CLAUSE)\n+            {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType = aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        == parentType)\n                 || (TokenTypes.DEC          == parentType)\n                 || (TokenTypes.POST_INC     == parentType)\n                 || (TokenTypes.INC          == parentType)\n                 || (TokenTypes.ASSIGN       == parentType)\n                 || (TokenTypes.PLUS_ASSIGN  == parentType)\n                 || (TokenTypes.MINUS_ASSIGN == parentType)\n                 || (TokenTypes.DIV_ASSIGN   == parentType)\n                 || (TokenTypes.STAR_ASSIGN  == parentType)\n                 || (TokenTypes.MOD_ASSIGN   == parentType)\n                 || (TokenTypes.SR_ASSIGN    == parentType)\n                 || (TokenTypes.BSR_ASSIGN   == parentType)\n                 || (TokenTypes.SL_ASSIGN    == parentType)\n                 || (TokenTypes.BXOR_ASSIGN  == parentType)\n                 || (TokenTypes.BOR_ASSIGN   == parentType)\n                 || (TokenTypes.BAND_ASSIGN  == parentType))\n             {\n                 removeVariable(aAST);\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"2af259b791c8655a2b9862099763f860d3d7ae42": {
			"type": "Ybodychange",
			"commitMessage": "FinalParametersCheck and FinalLocalVariablesCheck ignore abstract methods (bug 1002849)\n",
			"commitDate": "2004-08-04, 4:17 AM",
			"commitName": "2af259b791c8655a2b9862099763f860d3d7ae42",
			"commitAuthor": "Rick Giles",
			"commitDateOld": "2004-07-25, 12:11 PM",
			"commitNameOld": "62179e05f3f4a7214eb1fd7775a2012c8870e4a8",
			"commitAuthorOld": "Rick Giles",
			"daysBetweenCommits": 9.67,
			"commitsBetweenForRepo": 9,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,49 +1,51 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch(aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n             mScopeStack.push(new HashMap());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n-            if (ScopeUtils.inInterfaceBlock(aAST)) {\n+            if (ScopeUtils.inInterfaceBlock(aAST)\n+                || inAbstractMethod(aAST))\n+            {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n             if (aAST.getParent().getType() != TokenTypes.OBJBLOCK) {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType = aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        == parentType)\n                 || (TokenTypes.DEC          == parentType)\n                 || (TokenTypes.POST_INC     == parentType)\n                 || (TokenTypes.INC          == parentType)\n                 || (TokenTypes.ASSIGN       == parentType)\n                 || (TokenTypes.PLUS_ASSIGN  == parentType)\n                 || (TokenTypes.MINUS_ASSIGN == parentType)\n                 || (TokenTypes.DIV_ASSIGN   == parentType)\n                 || (TokenTypes.STAR_ASSIGN  == parentType)\n                 || (TokenTypes.MOD_ASSIGN   == parentType)\n                 || (TokenTypes.SR_ASSIGN    == parentType)\n                 || (TokenTypes.BSR_ASSIGN   == parentType)\n                 || (TokenTypes.SL_ASSIGN    == parentType)\n                 || (TokenTypes.BXOR_ASSIGN  == parentType)\n                 || (TokenTypes.BOR_ASSIGN   == parentType)\n                 || (TokenTypes.BAND_ASSIGN  == parentType))\n             {\n                 removeVariable(aAST);\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"62179e05f3f4a7214eb1fd7775a2012c8870e4a8": {
			"type": "Ybodychange",
			"commitMessage": "FinalLocalVariable ignores parameters of interface methods (request 993922)\n",
			"commitDate": "2004-07-25, 12:11 PM",
			"commitName": "62179e05f3f4a7214eb1fd7775a2012c8870e4a8",
			"commitAuthor": "Rick Giles",
			"commitDateOld": "2004-04-26, 9:17 PM",
			"commitNameOld": "e95d9b668ff5d6fbc64ac13d7cd349a41367e830",
			"commitAuthorOld": "Lars Kühne",
			"daysBetweenCommits": 89.62,
			"commitsBetweenForRepo": 52,
			"commitsBetweenForFile": 1,
			"diff": "@@ -1,46 +1,49 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch(aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n             mScopeStack.push(new HashMap());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n+            if (ScopeUtils.inInterfaceBlock(aAST)) {\n+                break;\n+            }\n         case TokenTypes.VARIABLE_DEF:\n             if (aAST.getParent().getType() != TokenTypes.OBJBLOCK) {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType = aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        == parentType)\n                 || (TokenTypes.DEC          == parentType)\n                 || (TokenTypes.POST_INC     == parentType)\n                 || (TokenTypes.INC          == parentType)\n                 || (TokenTypes.ASSIGN       == parentType)\n                 || (TokenTypes.PLUS_ASSIGN  == parentType)\n                 || (TokenTypes.MINUS_ASSIGN == parentType)\n                 || (TokenTypes.DIV_ASSIGN   == parentType)\n                 || (TokenTypes.STAR_ASSIGN  == parentType)\n                 || (TokenTypes.MOD_ASSIGN   == parentType)\n                 || (TokenTypes.SR_ASSIGN    == parentType)\n                 || (TokenTypes.BSR_ASSIGN   == parentType)\n                 || (TokenTypes.SL_ASSIGN    == parentType)\n                 || (TokenTypes.BXOR_ASSIGN  == parentType)\n                 || (TokenTypes.BOR_ASSIGN   == parentType)\n                 || (TokenTypes.BAND_ASSIGN  == parentType))\n             {\n                 removeVariable(aAST);\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
			"extendedDetails": {}
		},
		"0c717ef2abd068366612d44280633a1c7ac9efac": {
			"type": "Yintroduced",
			"commitMessage": "Added FinalLocalVariable check from Roland Auckenthaler and Kevin Gibbs.\n",
			"commitDate": "2003-09-11, 5:01 AM",
			"commitName": "0c717ef2abd068366612d44280633a1c7ac9efac",
			"commitAuthor": "Rick Giles",
			"diff": "@@ -0,0 +1,46 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        switch(aAST.getType()) {\n+        case TokenTypes.OBJBLOCK:\n+        case TokenTypes.SLIST:\n+        case TokenTypes.LITERAL_FOR:\n+        case TokenTypes.METHOD_DEF:\n+        case TokenTypes.CTOR_DEF:\n+        case TokenTypes.STATIC_INIT:\n+        case TokenTypes.INSTANCE_INIT:\n+            mScopeStack.push(new HashMap());\n+            break;\n+\n+        case TokenTypes.PARAMETER_DEF:\n+        case TokenTypes.VARIABLE_DEF:\n+            if (aAST.getParent().getType() != TokenTypes.OBJBLOCK) {\n+                insertVariable(aAST);\n+            }\n+            break;\n+\n+        case TokenTypes.IDENT:\n+            final int parentType = aAST.getParent().getType();\n+            if ((TokenTypes.POST_DEC        == parentType)\n+                || (TokenTypes.DEC          == parentType)\n+                || (TokenTypes.POST_INC     == parentType)\n+                || (TokenTypes.INC          == parentType)\n+                || (TokenTypes.ASSIGN       == parentType)\n+                || (TokenTypes.PLUS_ASSIGN  == parentType)\n+                || (TokenTypes.MINUS_ASSIGN == parentType)\n+                || (TokenTypes.DIV_ASSIGN   == parentType)\n+                || (TokenTypes.STAR_ASSIGN  == parentType)\n+                || (TokenTypes.MOD_ASSIGN   == parentType)\n+                || (TokenTypes.SR_ASSIGN    == parentType)\n+                || (TokenTypes.BSR_ASSIGN   == parentType)\n+                || (TokenTypes.SL_ASSIGN    == parentType)\n+                || (TokenTypes.BXOR_ASSIGN  == parentType)\n+                || (TokenTypes.BOR_ASSIGN   == parentType)\n+                || (TokenTypes.BAND_ASSIGN  == parentType))\n+            {\n+                removeVariable(aAST);\n+            }\n+            break;\n+\n+        default:\n+        }\n+    }\n\\ No newline at end of file\n"
		}
	},
	"sha": "119fd4fb33bef9f5c66fc950396669af842c21a3"
}